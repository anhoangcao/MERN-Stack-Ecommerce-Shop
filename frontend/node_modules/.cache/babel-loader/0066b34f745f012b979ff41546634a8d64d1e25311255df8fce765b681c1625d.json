{"ast":null,"code":"var _jsxFileName = \"F:\\\\Projects\\\\E-shop\\\\frontend\\\\src\\\\components\\\\Route\\\\Event\\\\CountDown.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst moment = require('moment');\nconst CountDown = data => {\n  _s();\n  const [timeLeft, setTimeLeft] = useState(calculateTimeLeft());\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setTimeLeft(calculateTimeLeft());\n    }, 1000);\n    return () => clearTimeout(timer);\n  });\n  function convertDateFormat(inputDate) {\n    const dateObject = new Date(inputDate);\n    const month = (dateObject.getMonth() + 1).toString().padStart(2, '0'); // Thêm '0' nếu cần\n    const day = dateObject.getDate().toString().padStart(2, '0'); // Thêm '0' nếu cần\n    const year = dateObject.getFullYear();\n    const time = inputDate.split(\"T\")[1]; // Lấy phần giờ, phút, giây\n\n    return `${month}-${day}-${year}T${time}`;\n  }\n  function calculateTimeLeft() {\n    // Chuyển đổi định dạng của Finish_Date\n    const formattedFinishDate = convertDateFormat(data.Finish_Date);\n\n    // Tính toán sự chênh lệch thời gian\n    const difference = +new Date(formattedFinishDate) - +new Date();\n    console.log(difference);\n    let timeLeft = {};\n    if (difference > 0) {\n      timeLeft = {\n        days: Math.floor(difference / (1000 * 60 * 60 * 24)),\n        hours: Math.floor(difference % (1000 * 60 * 60 * 24) / (1000 * 60 * 60)),\n        minutes: Math.floor(difference % (1000 * 60 * 60) / (1000 * 60)),\n        seconds: Math.floor(difference % (1000 * 60) / 1000)\n      };\n    }\n    return timeLeft;\n  }\n  const timerComponents = Object.keys(timeLeft).map(interval => {\n    if (!timeLeft[interval]) {\n      return null;\n    }\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"text-[25px] text-[#475ad2]\",\n      children: [timeLeft[interval], \" \", interval, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: timerComponents.length ? timerComponents : /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"text-[red] text-[25px]\",\n      children: \"Time's up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_s(CountDown, \"2yD7J9BRKO6eNclZT/dCzRz3Fpg=\");\n_c = CountDown;\nexport default CountDown;\nvar _c;\n$RefreshReg$(_c, \"CountDown\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","moment","require","CountDown","data","_s","timeLeft","setTimeLeft","calculateTimeLeft","timer","setTimeout","clearTimeout","convertDateFormat","inputDate","dateObject","Date","month","getMonth","toString","padStart","day","getDate","year","getFullYear","time","split","formattedFinishDate","Finish_Date","difference","console","log","days","Math","floor","hours","minutes","seconds","timerComponents","Object","keys","map","interval","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","_c","$RefreshReg$"],"sources":["F:/Projects/E-shop/frontend/src/components/Route/Event/CountDown.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nconst moment = require('moment');\r\n\r\nconst CountDown = (data) => {\r\n  const [timeLeft, setTimeLeft] = useState(calculateTimeLeft());\r\n\r\n  useEffect(() => {\r\n    const timer = setTimeout(() => {\r\n      setTimeLeft(calculateTimeLeft());\r\n    }, 1000);\r\n    return () => clearTimeout(timer);\r\n  });\r\n\r\n  function convertDateFormat(inputDate) {\r\n    const dateObject = new Date(inputDate);\r\n    const month = (dateObject.getMonth() + 1).toString().padStart(2, '0'); // Thêm '0' nếu cần\r\n    const day = dateObject.getDate().toString().padStart(2, '0'); // Thêm '0' nếu cần\r\n    const year = dateObject.getFullYear();\r\n    const time = inputDate.split(\"T\")[1]; // Lấy phần giờ, phút, giây\r\n\r\n    return `${month}-${day}-${year}T${time}`;\r\n  }\r\n\r\n  function calculateTimeLeft() {\r\n    // Chuyển đổi định dạng của Finish_Date\r\n    const formattedFinishDate = convertDateFormat(data.Finish_Date);\r\n\r\n    // Tính toán sự chênh lệch thời gian\r\n    const difference = +new Date(formattedFinishDate) - +new Date();\r\n    console.log(difference);\r\n    let timeLeft = {};\r\n\r\n    if (difference > 0) {\r\n      timeLeft = {\r\n        days: Math.floor(difference / (1000 * 60 * 60 * 24)),\r\n        hours: Math.floor(\r\n          (difference % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)\r\n        ),\r\n        minutes: Math.floor((difference % (1000 * 60 * 60)) / (1000 * 60)),\r\n        seconds: Math.floor((difference % (1000 * 60)) / 1000),\r\n      };\r\n    }\r\n\r\n    return timeLeft;\r\n  }\r\n  \r\n  const timerComponents = Object.keys(timeLeft).map((interval) => {\r\n    if (!timeLeft[interval]) {\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      <span className=\"text-[25px] text-[#475ad2]\">\r\n        {timeLeft[interval]} {interval}{\" \"}\r\n      </span>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      {timerComponents.length ? (\r\n        timerComponents\r\n      ) : (\r\n        <span className=\"text-[red] text-[25px]\">Time's up</span>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CountDown;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}