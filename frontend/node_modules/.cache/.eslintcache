[{"F:\\Projects\\NLNHTTT\\frontend\\src\\index.js":"1","F:\\Projects\\NLNHTTT\\frontend\\src\\App.js":"2","F:\\Projects\\NLNHTTT\\frontend\\src\\reportWebVitals.js":"3","F:\\Projects\\NLNHTTT\\frontend\\src\\Routes.js":"4","F:\\Projects\\NLNHTTT\\frontend\\src\\pages\\Login.jsx":"5","F:\\Projects\\NLNHTTT\\frontend\\src\\components\\Login\\Login.jsx":"6","F:\\Projects\\NLNHTTT\\frontend\\src\\styles\\styles.js":"7","F:\\Projects\\NLNHTTT\\frontend\\src\\pages\\SignupPage.jsx":"8","F:\\Projects\\NLNHTTT\\frontend\\src\\components\\Signup\\Signup.jsx":"9","F:\\Projects\\NLNHTTT\\frontend\\src\\server.js":"10","F:\\Projects\\E-shop2\\frontend\\src\\index.js":"11","F:\\Projects\\E-shop2\\frontend\\src\\reportWebVitals.js":"12","F:\\Projects\\E-shop2\\frontend\\src\\App.js":"13","F:\\Projects\\E-shop2\\frontend\\src\\redux\\store.js":"14","F:\\Projects\\E-shop2\\frontend\\src\\server.js":"15","F:\\Projects\\E-shop2\\frontend\\src\\routes\\Routes.js":"16","F:\\Projects\\E-shop2\\frontend\\src\\routes\\ShopRoutes.js":"17","F:\\Projects\\E-shop2\\frontend\\src\\routes\\SellerProtectedRoute.js":"18","F:\\Projects\\E-shop2\\frontend\\src\\routes\\ProtectedRoute.js":"19","F:\\Projects\\E-shop2\\frontend\\src\\redux\\actions\\user.js":"20","F:\\Projects\\E-shop2\\frontend\\src\\redux\\actions\\product.js":"21","F:\\Projects\\E-shop2\\frontend\\src\\redux\\actions\\event.js":"22","F:\\Projects\\E-shop2\\frontend\\src\\redux\\reducers\\user.js":"23","F:\\Projects\\E-shop2\\frontend\\src\\redux\\reducers\\seller.js":"24","F:\\Projects\\E-shop2\\frontend\\src\\redux\\reducers\\event.js":"25","F:\\Projects\\E-shop2\\frontend\\src\\redux\\reducers\\product.js":"26","F:\\Projects\\E-shop2\\frontend\\src\\redux\\reducers\\cart.js":"27","F:\\Projects\\E-shop2\\frontend\\src\\redux\\reducers\\wishlist.js":"28","F:\\Projects\\E-shop2\\frontend\\src\\redux\\reducers\\order.js":"29","F:\\Projects\\E-shop2\\frontend\\src\\pages\\Login.jsx":"30","F:\\Projects\\E-shop2\\frontend\\src\\pages\\SignupPage.jsx":"31","F:\\Projects\\E-shop2\\frontend\\src\\pages\\ActivationPage.jsx":"32","F:\\Projects\\E-shop2\\frontend\\src\\pages\\HomePage.jsx":"33","F:\\Projects\\E-shop2\\frontend\\src\\pages\\ProductsPage.jsx":"34","F:\\Projects\\E-shop2\\frontend\\src\\pages\\BestSellingPage.jsx":"35","F:\\Projects\\E-shop2\\frontend\\src\\pages\\EventsPage.jsx":"36","F:\\Projects\\E-shop2\\frontend\\src\\pages\\ProductDetailsPage.jsx":"37","F:\\Projects\\E-shop2\\frontend\\src\\pages\\SellerActivationPage.jsx":"38","F:\\Projects\\E-shop2\\frontend\\src\\pages\\ProfilePage.jsx":"39","F:\\Projects\\E-shop2\\frontend\\src\\pages\\ShopCreate.jsx":"40","F:\\Projects\\E-shop2\\frontend\\src\\pages\\ShopLoginPage.jsx":"41","F:\\Projects\\E-shop2\\frontend\\src\\pages\\PaymentPage.jsx":"42","F:\\Projects\\E-shop2\\frontend\\src\\pages\\CheckoutPage.jsx":"43","F:\\Projects\\E-shop2\\frontend\\src\\pages\\OrderDetailsPage.jsx":"44","F:\\Projects\\E-shop2\\frontend\\src\\pages\\OrderSuccessPage.jsx":"45","F:\\Projects\\E-shop2\\frontend\\src\\pages\\Shop\\ShopHomePage.jsx":"46","F:\\Projects\\E-shop2\\frontend\\src\\pages\\Shop\\ShopCreateProduct.jsx":"47","F:\\Projects\\E-shop2\\frontend\\src\\pages\\Shop\\ShopDashboardPage.jsx":"48","F:\\Projects\\E-shop2\\frontend\\src\\pages\\Shop\\ShopAllProduct.jsx":"49","F:\\Projects\\E-shop2\\frontend\\src\\pages\\Shop\\ShopPreviewPage.jsx":"50","F:\\Projects\\E-shop2\\frontend\\src\\pages\\Shop\\ShopCreateEvent.jsx":"51","F:\\Projects\\E-shop2\\frontend\\src\\pages\\Shop\\ShopAllCoupons.jsx":"52","F:\\Projects\\E-shop2\\frontend\\src\\pages\\Shop\\ShopAllEvents.jsx":"53","F:\\Projects\\E-shop2\\frontend\\src\\pages\\Shop\\ShopAllOrder.jsx":"54","F:\\Projects\\E-shop2\\frontend\\src\\pages\\Shop\\ShopOrderDetails.jsx":"55","F:\\Projects\\E-shop2\\frontend\\src\\components\\Layout\\Loader.jsx":"56","F:\\Projects\\E-shop2\\frontend\\src\\components\\Checkout\\Checkout.jsx":"57","F:\\Projects\\E-shop2\\frontend\\src\\components\\Login\\Login.jsx":"58","F:\\Projects\\E-shop2\\frontend\\src\\static\\data.js":"59","F:\\Projects\\E-shop2\\frontend\\src\\styles\\styles.js":"60","F:\\Projects\\E-shop2\\frontend\\src\\components\\Layout\\Footer.jsx":"61","F:\\Projects\\E-shop2\\frontend\\src\\components\\Shop\\ShopInfo.jsx":"62","F:\\Projects\\E-shop2\\frontend\\src\\components\\Layout\\Header.jsx":"63","F:\\Projects\\E-shop2\\frontend\\src\\components\\Shop\\ShopProfileData.jsx":"64","F:\\Projects\\E-shop2\\frontend\\src\\components\\Shop\\AllEvents.jsx":"65","F:\\Projects\\E-shop2\\frontend\\src\\components\\Signup\\Signup.jsx":"66","F:\\Projects\\E-shop2\\frontend\\src\\components\\Shop\\ShopCreate.jsx":"67","F:\\Projects\\E-shop2\\frontend\\src\\components\\Shop\\ShopLogin.jsx":"68","F:\\Projects\\E-shop2\\frontend\\src\\components\\Products\\ProductDetails.jsx":"69","F:\\Projects\\E-shop2\\frontend\\src\\components\\Products\\SuggestedProduct.jsx":"70","F:\\Projects\\E-shop2\\frontend\\src\\components\\UserOrderDetails.jsx":"71","F:\\Projects\\E-shop2\\frontend\\src\\components\\Route\\BestDeals\\BestDeals.jsx":"72","F:\\Projects\\E-shop2\\frontend\\src\\components\\Route\\Categories\\Categories.jsx":"73","F:\\Projects\\E-shop2\\frontend\\src\\components\\Route\\Event\\EventCard.jsx":"74","F:\\Projects\\E-shop2\\frontend\\src\\components\\Route\\Event\\Event.jsx":"75","F:\\Projects\\E-shop2\\frontend\\src\\components\\Checkout\\CheckoutSteps.jsx":"76","F:\\Projects\\E-shop2\\frontend\\src\\components\\Profile\\ProfileSidebar.jsx":"77","F:\\Projects\\E-shop2\\frontend\\src\\components\\Profile\\ProfileContent.jsx":"78","F:\\Projects\\E-shop2\\frontend\\src\\components\\Route\\FeaturedProduct\\FeaturedProduct.jsx":"79","F:\\Projects\\E-shop2\\frontend\\src\\components\\Route\\ProductCard\\ProductCard.jsx":"80","F:\\Projects\\E-shop2\\frontend\\src\\components\\Shop\\CreateProduct.jsx":"81","F:\\Projects\\E-shop2\\frontend\\src\\components\\Payment\\Payment.jsx":"82","F:\\Projects\\E-shop2\\frontend\\src\\components\\Shop\\AllProducts.jsx":"83","F:\\Projects\\E-shop2\\frontend\\src\\components\\Shop\\CreateEvent.jsx":"84","F:\\Projects\\E-shop2\\frontend\\src\\components\\Shop\\AllCoupons.jsx":"85","F:\\Projects\\E-shop2\\frontend\\src\\components\\Shop\\OrderDetails.jsx":"86","F:\\Projects\\E-shop2\\frontend\\src\\components\\Shop\\Layout\\DashboardHeader.jsx":"87","F:\\Projects\\E-shop2\\frontend\\src\\components\\Shop\\AllOrders.jsx":"88","F:\\Projects\\E-shop2\\frontend\\src\\components\\Shop\\Layout\\DashboardSideBar.jsx":"89","F:\\Projects\\E-shop2\\frontend\\src\\components\\Layout\\DropDown.jsx":"90","F:\\Projects\\E-shop2\\frontend\\src\\components\\Layout\\Navbar.jsx":"91","F:\\Projects\\E-shop2\\frontend\\src\\redux\\actions\\wishlist.js":"92","F:\\Projects\\E-shop2\\frontend\\src\\redux\\actions\\order.js":"93","F:\\Projects\\E-shop2\\frontend\\src\\redux\\actions\\cart.js":"94","F:\\Projects\\E-shop2\\frontend\\src\\components\\cart\\Cart.jsx":"95","F:\\Projects\\E-shop2\\frontend\\src\\components\\Wishlist\\Wishlist.jsx":"96","F:\\Projects\\E-shop2\\frontend\\src\\components\\Route\\Event\\CountDown.jsx":"97","F:\\Projects\\E-shop2\\frontend\\src\\components\\Route\\ProductDetailsCard\\ProductDetailsCard.jsx":"98","F:\\Projects\\E-shop2\\frontend\\src\\components\\Products\\Ratings.jsx":"99","F:\\Projects\\E-shop2\\frontend\\src\\pages\\TrackOrderPage.jsx":"100","F:\\Projects\\E-shop2\\frontend\\src\\components\\Profile\\TrackOrder.jsx":"101","F:\\Projects\\E-shop2\\frontend\\src\\pages\\Shop\\ShopAllRefunds.jsx":"102","F:\\Projects\\E-shop2\\frontend\\src\\components\\Shop\\AllRefundOrders.jsx":"103","F:\\Projects\\E-shop2\\frontend\\src\\components\\Shop\\DashboardHero.jsx":"104","F:\\Projects\\E-shop2\\frontend\\src\\pages\\Shop\\ShopSettingsPage.jsx":"105","F:\\Projects\\E-shop2\\frontend\\src\\components\\Shop\\ShopSettings.jsx":"106","F:\\Projects\\E-shop2\\frontend\\src\\pages\\Shop\\ShopWithDrawMoneyPage.jsx":"107","F:\\Projects\\E-shop2\\frontend\\src\\components\\Shop\\WithDrawMoney.jsx":"108","F:\\Projects\\E-shop2\\frontend\\src\\pages\\Shop\\ShopInboxPage.jsx":"109","F:\\Projects\\E-shop2\\frontend\\src\\components\\Shop\\DashboardMessages.jsx":"110","F:\\Projects\\E-shop2\\frontend\\src\\pages\\UserInbox.jsx":"111"},{"size":301,"mtime":1691084764743,"results":"112","hashOfConfig":"113"},{"size":430,"mtime":1691234987430,"results":"114","hashOfConfig":"113"},{"size":362,"mtime":1691080302884,"results":"115","hashOfConfig":"113"},{"size":142,"mtime":1691235126088,"results":"116","hashOfConfig":"113"},{"size":212,"mtime":1691171587401,"results":"117","hashOfConfig":"113"},{"size":5835,"mtime":1691171691648,"results":"118","hashOfConfig":"113"},{"size":1037,"mtime":1691170417362,"results":"119","hashOfConfig":"113"},{"size":170,"mtime":1691235263976,"results":"120","hashOfConfig":"113"},{"size":8313,"mtime":1691899113473,"results":"121","hashOfConfig":"113"},{"size":53,"mtime":1692022269018,"results":"122","hashOfConfig":"113"},{"size":440,"mtime":1693673855915,"results":"123","hashOfConfig":"124"},{"size":362,"mtime":1691080302884,"results":"125","hashOfConfig":"124"},{"size":6952,"mtime":1700888797332,"results":"126","hashOfConfig":"124"},{"size":730,"mtime":1698471254081,"results":"127","hashOfConfig":"124"},{"size":108,"mtime":1695447198561,"results":"128","hashOfConfig":"124"},{"size":1300,"mtime":1699240721606,"results":"129","hashOfConfig":"124"},{"size":1187,"mtime":1699081753318,"results":"130","hashOfConfig":"124"},{"size":480,"mtime":1696570542304,"results":"131","hashOfConfig":"124"},{"size":383,"mtime":1696564996779,"results":"132","hashOfConfig":"124"},{"size":3151,"mtime":1699251346025,"results":"133","hashOfConfig":"124"},{"size":2176,"mtime":1697283008907,"results":"134","hashOfConfig":"124"},{"size":2175,"mtime":1697291137989,"results":"135","hashOfConfig":"124"},{"size":1854,"mtime":1697895565996,"results":"136","hashOfConfig":"124"},{"size":921,"mtime":1696354048641,"results":"137","hashOfConfig":"124"},{"size":1594,"mtime":1697290679989,"results":"138","hashOfConfig":"124"},{"size":1632,"mtime":1697283047694,"results":"139","hashOfConfig":"124"},{"size":800,"mtime":1697304793166,"results":"140","hashOfConfig":"124"},{"size":852,"mtime":1697392163715,"results":"141","hashOfConfig":"124"},{"size":1331,"mtime":1698471201959,"results":"142","hashOfConfig":"124"},{"size":549,"mtime":1696321177631,"results":"143","hashOfConfig":"124"},{"size":490,"mtime":1695450702052,"results":"144","hashOfConfig":"124"},{"size":1113,"mtime":1699089270516,"results":"145","hashOfConfig":"124"},{"size":647,"mtime":1695230683905,"results":"146","hashOfConfig":"124"},{"size":1589,"mtime":1700112419342,"results":"147","hashOfConfig":"124"},{"size":1322,"mtime":1699423867538,"results":"148","hashOfConfig":"124"},{"size":515,"mtime":1699604313756,"results":"149","hashOfConfig":"124"},{"size":1245,"mtime":1698468757904,"results":"150","hashOfConfig":"124"},{"size":1118,"mtime":1696313154624,"results":"151","hashOfConfig":"124"},{"size":813,"mtime":1695973641756,"results":"152","hashOfConfig":"124"},{"size":537,"mtime":1696352981639,"results":"153","hashOfConfig":"124"},{"size":554,"mtime":1696565154638,"results":"154","hashOfConfig":"124"},{"size":549,"mtime":1699426843635,"results":"155","hashOfConfig":"124"},{"size":522,"mtime":1699428583461,"results":"156","hashOfConfig":"124"},{"size":373,"mtime":1699605133819,"results":"157","hashOfConfig":"124"},{"size":877,"mtime":1698397068000,"results":"158","hashOfConfig":"124"},{"size":726,"mtime":1696573011182,"results":"159","hashOfConfig":"124"},{"size":696,"mtime":1696751277512,"results":"160","hashOfConfig":"124"},{"size":629,"mtime":1699067601899,"results":"161","hashOfConfig":"124"},{"size":686,"mtime":1696682207512,"results":"162","hashOfConfig":"124"},{"size":791,"mtime":1697180851239,"results":"163","hashOfConfig":"124"},{"size":686,"mtime":1696751280820,"results":"164","hashOfConfig":"124"},{"size":683,"mtime":1697174104859,"results":"165","hashOfConfig":"124"},{"size":682,"mtime":1696753536900,"results":"166","hashOfConfig":"124"},{"size":674,"mtime":1698473265943,"results":"167","hashOfConfig":"124"},{"size":409,"mtime":1699605499467,"results":"168","hashOfConfig":"124"},{"size":542,"mtime":1698397126769,"results":"169","hashOfConfig":"124"},{"size":11380,"mtime":1699685059327,"results":"170","hashOfConfig":"124"},{"size":5195,"mtime":1699347934861,"results":"171","hashOfConfig":"124"},{"size":26033,"mtime":1697282778488,"results":"172","hashOfConfig":"124"},{"size":1037,"mtime":1691170417362,"results":"173","hashOfConfig":"124"},{"size":3525,"mtime":1695440299148,"results":"174","hashOfConfig":"124"},{"size":3826,"mtime":1699078800766,"results":"175","hashOfConfig":"124"},{"size":13138,"mtime":1699675237410,"results":"176","hashOfConfig":"124"},{"size":4730,"mtime":1699080225800,"results":"177","hashOfConfig":"124"},{"size":2844,"mtime":1700891860466,"results":"178","hashOfConfig":"124"},{"size":8450,"mtime":1699864882527,"results":"179","hashOfConfig":"124"},{"size":8495,"mtime":1700890698383,"results":"180","hashOfConfig":"124"},{"size":5236,"mtime":1696353217488,"results":"181","hashOfConfig":"124"},{"size":14007,"mtime":1700111989228,"results":"182","hashOfConfig":"124"},{"size":1323,"mtime":1697219893250,"results":"183","hashOfConfig":"124"},{"size":8351,"mtime":1700110919229,"results":"184","hashOfConfig":"124"},{"size":1645,"mtime":1700892499317,"results":"185","hashOfConfig":"124"},{"size":2013,"mtime":1699676091776,"results":"186","hashOfConfig":"124"},{"size":2439,"mtime":1699603444481,"results":"187","hashOfConfig":"124"},{"size":928,"mtime":1699416693208,"results":"188","hashOfConfig":"124"},{"size":1862,"mtime":1699428467350,"results":"189","hashOfConfig":"124"},{"size":4285,"mtime":1698081376455,"results":"190","hashOfConfig":"124"},{"size":23049,"mtime":1699251862978,"results":"191","hashOfConfig":"124"},{"size":941,"mtime":1697283455502,"results":"192","hashOfConfig":"124"},{"size":4793,"mtime":1700892974459,"results":"193","hashOfConfig":"124"},{"size":7804,"mtime":1700038220162,"results":"194","hashOfConfig":"124"},{"size":14418,"mtime":1699674555893,"results":"195","hashOfConfig":"124"},{"size":2880,"mtime":1697174310643,"results":"196","hashOfConfig":"124"},{"size":10140,"mtime":1701405508021,"results":"197","hashOfConfig":"124"},{"size":8901,"mtime":1700108593364,"results":"198","hashOfConfig":"124"},{"size":6557,"mtime":1700894374000,"results":"199","hashOfConfig":"124"},{"size":2480,"mtime":1696679868590,"results":"200","hashOfConfig":"124"},{"size":2368,"mtime":1699433612985,"results":"201","hashOfConfig":"124"},{"size":6448,"mtime":1697172472932,"results":"202","hashOfConfig":"124"},{"size":1136,"mtime":1699676022379,"results":"203","hashOfConfig":"124"},{"size":767,"mtime":1700792083039,"results":"204","hashOfConfig":"124"},{"size":591,"mtime":1697392409954,"results":"205","hashOfConfig":"124"},{"size":1089,"mtime":1698474203678,"results":"206","hashOfConfig":"124"},{"size":551,"mtime":1697305148945,"results":"207","hashOfConfig":"124"},{"size":5331,"mtime":1699417824328,"results":"208","hashOfConfig":"124"},{"size":3952,"mtime":1699425603239,"results":"209","hashOfConfig":"124"},{"size":3383,"mtime":1701404732057,"results":"210","hashOfConfig":"124"},{"size":6836,"mtime":1700893762535,"results":"211","hashOfConfig":"124"},{"size":1136,"mtime":1699011502379,"results":"212","hashOfConfig":"124"},{"size":359,"mtime":1699016593118,"results":"213","hashOfConfig":"124"},{"size":1965,"mtime":1699028753713,"results":"214","hashOfConfig":"124"},{"size":659,"mtime":1699018396819,"results":"215","hashOfConfig":"124"},{"size":2525,"mtime":1699019025525,"results":"216","hashOfConfig":"124"},{"size":5595,"mtime":1700108357539,"results":"217","hashOfConfig":"124"},{"size":609,"mtime":1699076150429,"results":"218","hashOfConfig":"124"},{"size":5719,"mtime":1699075684229,"results":"219","hashOfConfig":"124"},{"size":637,"mtime":1699077278331,"results":"220","hashOfConfig":"124"},{"size":1609,"mtime":1699078069676,"results":"221","hashOfConfig":"124"},{"size":633,"mtime":1699082291532,"results":"222","hashOfConfig":"124"},{"size":12716,"mtime":1700106827600,"results":"223","hashOfConfig":"124"},{"size":12534,"mtime":1699414353083,"results":"224","hashOfConfig":"124"},{"filePath":"225","messages":"226","suppressedMessages":"227","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},"1dk2x8z",{"filePath":"229","messages":"230","suppressedMessages":"231","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"232","messages":"233","suppressedMessages":"234","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"235","messages":"236","suppressedMessages":"237","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"238","messages":"239","suppressedMessages":"240","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"241","messages":"242","suppressedMessages":"243","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"244","messages":"245","suppressedMessages":"246","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"247","messages":"248","suppressedMessages":"249","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"250","messages":"251","suppressedMessages":"252","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"253","messages":"254","suppressedMessages":"255","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"256","messages":"257","suppressedMessages":"258","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"259","usedDeprecatedRules":"260"},"evqj55",{"filePath":"261","messages":"262","suppressedMessages":"263","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"260"},{"filePath":"264","messages":"265","suppressedMessages":"266","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"267","messages":"268","suppressedMessages":"269","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"270","usedDeprecatedRules":"260"},{"filePath":"271","messages":"272","suppressedMessages":"273","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"260"},{"filePath":"274","messages":"275","suppressedMessages":"276","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"260"},{"filePath":"277","messages":"278","suppressedMessages":"279","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"260"},{"filePath":"280","messages":"281","suppressedMessages":"282","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"260"},{"filePath":"283","messages":"284","suppressedMessages":"285","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"260"},{"filePath":"286","messages":"287","suppressedMessages":"288","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"260"},{"filePath":"289","messages":"290","suppressedMessages":"291","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"260"},{"filePath":"292","messages":"293","suppressedMessages":"294","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"260"},{"filePath":"295","messages":"296","suppressedMessages":"297","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"260"},{"filePath":"298","messages":"299","suppressedMessages":"300","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"260"},{"filePath":"301","messages":"302","suppressedMessages":"303","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"260"},{"filePath":"304","messages":"305","suppressedMessages":"306","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"260"},{"filePath":"307","messages":"308","suppressedMessages":"309","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"260"},{"filePath":"310","messages":"311","suppressedMessages":"312","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"260"},{"filePath":"313","messages":"314","suppressedMessages":"315","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"260"},{"filePath":"316","messages":"317","suppressedMessages":"318","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"319","usedDeprecatedRules":"260"},{"filePath":"320","messages":"321","suppressedMessages":"322","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"323","usedDeprecatedRules":"260"},{"filePath":"324","messages":"325","suppressedMessages":"326","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"327","usedDeprecatedRules":"260"},{"filePath":"328","messages":"329","suppressedMessages":"330","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"260"},{"filePath":"331","messages":"332","suppressedMessages":"333","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"334","usedDeprecatedRules":"260"},{"filePath":"335","messages":"336","suppressedMessages":"337","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"338","usedDeprecatedRules":"260"},{"filePath":"339","messages":"340","suppressedMessages":"341","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"342","usedDeprecatedRules":"260"},{"filePath":"343","messages":"344","suppressedMessages":"345","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"346","usedDeprecatedRules":"260"},{"filePath":"347","messages":"348","suppressedMessages":"349","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"350","usedDeprecatedRules":"260"},{"filePath":"351","messages":"352","suppressedMessages":"353","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"260"},{"filePath":"354","messages":"355","suppressedMessages":"356","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"357","usedDeprecatedRules":"260"},{"filePath":"358","messages":"359","suppressedMessages":"360","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"361","usedDeprecatedRules":"260"},{"filePath":"362","messages":"363","suppressedMessages":"364","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"260"},{"filePath":"365","messages":"366","suppressedMessages":"367","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"260"},{"filePath":"368","messages":"369","suppressedMessages":"370","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"260"},{"filePath":"371","messages":"372","suppressedMessages":"373","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"260"},{"filePath":"374","messages":"375","suppressedMessages":"376","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"260"},{"filePath":"377","messages":"378","suppressedMessages":"379","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"260"},{"filePath":"380","messages":"381","suppressedMessages":"382","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"260"},{"filePath":"383","messages":"384","suppressedMessages":"385","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"260"},{"filePath":"386","messages":"387","suppressedMessages":"388","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"260"},{"filePath":"389","messages":"390","suppressedMessages":"391","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"260"},{"filePath":"392","messages":"393","suppressedMessages":"394","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"260"},{"filePath":"395","messages":"396","suppressedMessages":"397","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"260"},{"filePath":"398","messages":"399","suppressedMessages":"400","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"260"},{"filePath":"401","messages":"402","suppressedMessages":"403","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"260"},{"filePath":"404","messages":"405","suppressedMessages":"406","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"260"},{"filePath":"407","messages":"408","suppressedMessages":"409","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"260"},{"filePath":"410","messages":"411","suppressedMessages":"412","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"260"},{"filePath":"413","messages":"414","suppressedMessages":"415","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"416","usedDeprecatedRules":"260"},{"filePath":"417","messages":"418","suppressedMessages":"419","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"260"},{"filePath":"420","messages":"421","suppressedMessages":"422","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"260"},{"filePath":"423","messages":"424","suppressedMessages":"425","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"426","usedDeprecatedRules":"260"},{"filePath":"427","messages":"428","suppressedMessages":"429","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"430","usedDeprecatedRules":"260"},{"filePath":"431","messages":"432","suppressedMessages":"433","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"434","usedDeprecatedRules":"260"},{"filePath":"435","messages":"436","suppressedMessages":"437","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"438","messages":"439","suppressedMessages":"440","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"260"},{"filePath":"441","messages":"442","suppressedMessages":"443","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"444","messages":"445","suppressedMessages":"446","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"447","usedDeprecatedRules":"260"},{"filePath":"448","messages":"449","suppressedMessages":"450","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"451","usedDeprecatedRules":"260"},{"filePath":"452","messages":"453","suppressedMessages":"454","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"455","usedDeprecatedRules":"260"},{"filePath":"456","messages":"457","suppressedMessages":"458","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"260"},{"filePath":"459","messages":"460","suppressedMessages":"461","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"462","messages":"463","suppressedMessages":"464","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"260"},{"filePath":"465","messages":"466","suppressedMessages":"467","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"260"},{"filePath":"468","messages":"469","suppressedMessages":"470","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"471","usedDeprecatedRules":"260"},{"filePath":"472","messages":"473","suppressedMessages":"474","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"260"},{"filePath":"475","messages":"476","suppressedMessages":"477","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"260"},{"filePath":"478","messages":"479","suppressedMessages":"480","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"481","usedDeprecatedRules":"260"},{"filePath":"482","messages":"483","suppressedMessages":"484","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"485","usedDeprecatedRules":"260"},{"filePath":"486","messages":"487","suppressedMessages":"488","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"489","messages":"490","suppressedMessages":"491","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"492","usedDeprecatedRules":"260"},{"filePath":"493","messages":"494","suppressedMessages":"495","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"496","usedDeprecatedRules":"260"},{"filePath":"497","messages":"498","suppressedMessages":"499","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"500","usedDeprecatedRules":"260"},{"filePath":"501","messages":"502","suppressedMessages":"503","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"504","messages":"505","suppressedMessages":"506","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"507","usedDeprecatedRules":"260"},{"filePath":"508","messages":"509","suppressedMessages":"510","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"511","messages":"512","suppressedMessages":"513","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"260"},{"filePath":"514","messages":"515","suppressedMessages":"516","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"517","usedDeprecatedRules":"260"},{"filePath":"518","messages":"519","suppressedMessages":"520","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"260"},{"filePath":"521","messages":"522","suppressedMessages":"523","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"260"},{"filePath":"524","messages":"525","suppressedMessages":"526","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"260"},{"filePath":"527","messages":"528","suppressedMessages":"529","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"260"},{"filePath":"530","messages":"531","suppressedMessages":"532","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"260"},{"filePath":"533","messages":"534","suppressedMessages":"535","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"260"},{"filePath":"536","messages":"537","suppressedMessages":"538","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"260"},{"filePath":"539","messages":"540","suppressedMessages":"541","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"542","usedDeprecatedRules":"260"},{"filePath":"543","messages":"544","suppressedMessages":"545","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"546","messages":"547","suppressedMessages":"548","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"549","messages":"550","suppressedMessages":"551","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"260"},{"filePath":"552","messages":"553","suppressedMessages":"554","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"260"},{"filePath":"555","messages":"556","suppressedMessages":"557","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"558","usedDeprecatedRules":"260"},{"filePath":"559","messages":"560","suppressedMessages":"561","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"260"},{"filePath":"562","messages":"563","suppressedMessages":"564","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"565","usedDeprecatedRules":"260"},{"filePath":"566","messages":"567","suppressedMessages":"568","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"569","usedDeprecatedRules":"260"},{"filePath":"570","messages":"571","suppressedMessages":"572","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"260"},{"filePath":"573","messages":"574","suppressedMessages":"575","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"576","usedDeprecatedRules":"260"},{"filePath":"577","messages":"578","suppressedMessages":"579","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"260"},{"filePath":"580","messages":"581","suppressedMessages":"582","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"583","usedDeprecatedRules":"260"},{"filePath":"584","messages":"585","suppressedMessages":"586","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"260"},{"filePath":"587","messages":"588","suppressedMessages":"589","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"590","usedDeprecatedRules":"260"},{"filePath":"591","messages":"592","suppressedMessages":"593","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"594","usedDeprecatedRules":"260"},"F:\\Projects\\NLNHTTT\\frontend\\src\\index.js",[],[],[],"F:\\Projects\\NLNHTTT\\frontend\\src\\App.js",[],[],"F:\\Projects\\NLNHTTT\\frontend\\src\\reportWebVitals.js",[],[],"F:\\Projects\\NLNHTTT\\frontend\\src\\Routes.js",[],[],"F:\\Projects\\NLNHTTT\\frontend\\src\\pages\\Login.jsx",[],[],"F:\\Projects\\NLNHTTT\\frontend\\src\\components\\Login\\Login.jsx",[],[],"F:\\Projects\\NLNHTTT\\frontend\\src\\styles\\styles.js",[],[],"F:\\Projects\\NLNHTTT\\frontend\\src\\pages\\SignupPage.jsx",[],[],"F:\\Projects\\NLNHTTT\\frontend\\src\\components\\Signup\\Signup.jsx",[],[],"F:\\Projects\\NLNHTTT\\frontend\\src\\server.js",[],[],"F:\\Projects\\E-shop2\\frontend\\src\\index.js",["595"],[],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createRoot } from 'react-dom/client';\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Provider } from \"react-redux\";\nimport Store from \"./redux/store\";\n\nconst root = document.getElementById('root');\n\nconst rootElement = createRoot(root);\n\nrootElement.render(\n  <Provider store={Store}>\n    <App />\n  </Provider>\n);\n\nreportWebVitals();\n",[],"F:\\Projects\\E-shop2\\frontend\\src\\reportWebVitals.js",[],[],"F:\\Projects\\E-shop2\\frontend\\src\\App.js",[],[],"F:\\Projects\\E-shop2\\frontend\\src\\redux\\store.js",["596"],[],"import { configureStore, createReducer } from \"@reduxjs/toolkit\"\r\nimport { userReducer } from \"./reducers/user\";\r\nimport { sellerReducer } from \"./reducers/seller\";\r\nimport { productReducer } from \"./reducers/product\";\r\nimport { eventReducer } from \"./reducers/event\";\r\nimport { cartReducer } from \"./reducers/cart\";\r\nimport { wishlistReducer } from \"./reducers/wishlist\";\r\nimport { orderReducer } from \"./reducers/order\";\r\n\r\nconst Store = configureStore({\r\n    reducer: {\r\n        user: userReducer,\r\n        seller: sellerReducer,\r\n        products: productReducer,\r\n        events: eventReducer,\r\n        cart: cartReducer,\r\n        wishlist: wishlistReducer,\r\n        order: orderReducer,\r\n    },\r\n});\r\n\r\nexport default Store;","F:\\Projects\\E-shop2\\frontend\\src\\server.js",[],[],"F:\\Projects\\E-shop2\\frontend\\src\\routes\\Routes.js",[],[],"F:\\Projects\\E-shop2\\frontend\\src\\routes\\ShopRoutes.js",[],[],"F:\\Projects\\E-shop2\\frontend\\src\\routes\\SellerProtectedRoute.js",[],[],"F:\\Projects\\E-shop2\\frontend\\src\\routes\\ProtectedRoute.js",[],[],"F:\\Projects\\E-shop2\\frontend\\src\\redux\\actions\\user.js",[],[],"F:\\Projects\\E-shop2\\frontend\\src\\redux\\actions\\product.js",[],[],"F:\\Projects\\E-shop2\\frontend\\src\\redux\\actions\\event.js",[],[],"F:\\Projects\\E-shop2\\frontend\\src\\redux\\reducers\\user.js",[],[],"F:\\Projects\\E-shop2\\frontend\\src\\redux\\reducers\\seller.js",[],[],"F:\\Projects\\E-shop2\\frontend\\src\\redux\\reducers\\event.js",[],[],"F:\\Projects\\E-shop2\\frontend\\src\\redux\\reducers\\product.js",[],[],"F:\\Projects\\E-shop2\\frontend\\src\\redux\\reducers\\cart.js",[],[],"F:\\Projects\\E-shop2\\frontend\\src\\redux\\reducers\\wishlist.js",[],[],"F:\\Projects\\E-shop2\\frontend\\src\\redux\\reducers\\order.js",[],[],"F:\\Projects\\E-shop2\\frontend\\src\\pages\\Login.jsx",["597"],[],"import React, { useEffect } from 'react'\r\nimport Login from \"../components/Login/Login.jsx\";\r\nimport { useSelector } from 'react-redux';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst LoginPage = () => {\r\n    const navigate = useNavigate();\r\n    const { isAuthenticated } = useSelector((state) => state.user);\r\n\r\n    useEffect(() => {\r\n        if (isAuthenticated === true) {\r\n            navigate(\"/\");\r\n        }\r\n    }, [])\r\n    \r\n    return (\r\n        <div>\r\n            <Login />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoginPage","F:\\Projects\\E-shop2\\frontend\\src\\pages\\SignupPage.jsx",["598"],[],"import React, { useEffect } from 'react'\r\nimport Signup from \"../components/Signup/Signup\"\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst SignupPage = () => {\r\n  const navigate = useNavigate();\r\n    const { isAuthenticated } = useSelector((state) => state.user);\r\n\r\n    useEffect(() => {\r\n        if (isAuthenticated) {\r\n            navigate(\"/\");\r\n        }\r\n    }, [])\r\n  return (\r\n    <Signup />\r\n  )\r\n}\r\n\r\nexport default SignupPage","F:\\Projects\\E-shop2\\frontend\\src\\pages\\ActivationPage.jsx",["599"],[],"import axios from \"axios\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { server } from \"../server\";\r\n\r\nconst ActivationPage = () => {\r\n  const { activation_token } = useParams();\r\n  const [error, setError] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (activation_token) {\r\n      const sendRequest = async () => {\r\n        await axios\r\n          .post(`${server}/user/activation`, {\r\n            activation_token,\r\n          })\r\n          .then((res) => {\r\n            console.log(res);\r\n          })\r\n          .catch((err) => {\r\n            setError(true);\r\n          });\r\n      };\r\n      sendRequest();\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        width: \"100%\",\r\n        height: \"100vh\",\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n      }}\r\n    >\r\n      {error ? (\r\n        <p>Your token is expired!</p>\r\n      ) : (\r\n        <p>Your account has been created successfully!</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ActivationPage;\r\n","F:\\Projects\\E-shop2\\frontend\\src\\pages\\HomePage.jsx",[],[],"F:\\Projects\\E-shop2\\frontend\\src\\pages\\ProductsPage.jsx",["600"],[],"import React, { useEffect, useState } from \"react\";\r\nimport Header from \"../components/Layout/Header\";\r\nimport styles from \"../styles/styles\";\r\nimport { useSearchParams } from \"react-router-dom\";\r\nimport { productData } from \"../static/data\";\r\nimport ProductCard from \"../components/Route/ProductCard/ProductCard\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst ProductsPage = () => {\r\n  const [searchParams] = useSearchParams();\r\n  const categoryData = searchParams.get('category');\r\n  const [data, setData] = useState([]);\r\n  const { allProducts } = useSelector((state) => state.products)\r\n\r\n  useEffect(() => {\r\n    if (categoryData === null) {\r\n      const sortedData = [...(allProducts || [])].sort((a, b) => b.sold_out - a.sold_out);\r\n      setData(sortedData);\r\n    } else {\r\n      const filteredData = (allProducts || []).filter((i) => i.category === categoryData);\r\n      setData(filteredData);\r\n    }\r\n    \r\n  }, [allProducts, categoryData]);\r\n  \r\n  return (\r\n    <div>\r\n      <Header activeHandling={3} />\r\n      <br />\r\n      <br />\r\n      <div className={`${styles.section}`}>\r\n        <div className=\"grid grid-cols-1 gap-[20px] md:grid-cols-2 md:gap-[25px] lg:grid-cols-4 lg:gap-[25px] xl:grid-cols-5 xl:gap-[30px] mb-12\">\r\n          {data && data.map((i, index) => <ProductCard data={i} key={index} />)}\r\n        </div>\r\n        {data && data.length === 0 ? (\r\n          <h1 className=\"text-center w-full pb-[100px] text-[20px]\">\r\n            No products found!\r\n          </h1>\r\n        ) : null}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductsPage;\r\n","F:\\Projects\\E-shop2\\frontend\\src\\pages\\BestSellingPage.jsx",["601"],[],"import React, { useEffect, useState } from \"react\";\r\nimport Header from \"../components/Layout/Header\";\r\nimport styles from \"../styles/styles\";\r\nimport { productData } from \"../static/data\";\r\nimport ProductCard from \"../components/Route/ProductCard/ProductCard\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Loader from \"../components/Layout/Loader\";\r\n\r\nconst BestSellingPage = () => {\r\n  const [data, setData] = useState([]);\r\n  const { allProducts, isLoading } = useSelector((state) => state.products);\r\n\r\n  useEffect(() => {\r\n    const allProductsData = allProducts ? [...allProducts] : [];\r\n    const sortedData = allProductsData?.sort((a, b) => b.sold_out - a.sold_out);\r\n    setData(sortedData);\r\n  }, [allProducts]);\r\n\r\n  return (\r\n    <>\r\n      {isLoading ? (\r\n        <Loader />\r\n      ) : (\r\n        <div>\r\n          <Header activeHandling={2} />\r\n          <br />\r\n          <br />\r\n          <div className={`${styles.section}`}>\r\n            <div className=\"grid grid-cols-1 gap-[20px] md:grid-cols-2 md:gap-[25px] lg:grid-cols-4 lg:gap-[25px] xl:grid-cols-5 xl:gap-[30px] mb-12\">\r\n              {data &&\r\n                data.map((i, index) => <ProductCard data={i} key={index} />)}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BestSellingPage;\r\n","F:\\Projects\\E-shop2\\frontend\\src\\pages\\EventsPage.jsx",["602","603"],[],"import React from 'react'\r\nimport Header from '../components/Layout/Header'\r\nimport EventCard from '../components/Route/Event/EventCard'\r\nimport { useSelector } from 'react-redux';\r\nimport Loader from \"../components/Layout/Loader\"\r\n\r\nconst EventsPage = () => {\r\n  const { allEvents, isLoading } = useSelector((state) => state.events);\r\n  return (\r\n    <div>\r\n        <Header activeHandling={4} />\r\n        <EventCard active={true} data={allEvents && allEvents[0]} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default EventsPage","F:\\Projects\\E-shop2\\frontend\\src\\pages\\ProductDetailsPage.jsx",["604"],[],"import React, { useEffect, useState } from \"react\";\r\nimport Header from \"../components/Layout/Header\";\r\nimport ProductDetails from \"../components/Products/ProductDetails\";\r\nimport Footer from \"../components/Layout/Footer\";\r\nimport { useParams, useSearchParams } from \"react-router-dom\";\r\nimport SuggestedProduct from \"../components/Products/SuggestedProduct\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst ProductDetailsPage = () => {\r\n  const { allProducts } = useSelector((state) => state.products);\r\n  const { allEvents } = useSelector((state) => state.events);\r\n  const [data, setData] = useState(null);\r\n  const { id } = useParams();\r\n  const [searchParams] = useSearchParams();\r\n  const eventData = searchParams.get(\"isEvent\");\r\n\r\n  useEffect(() => {\r\n    if (eventData !== null) {\r\n      const data = allEvents && allEvents.find((i) => i._id === id);\r\n      setData(data);\r\n    } else {\r\n      const data = allProducts && allProducts.find((i) => i._id === id);\r\n      setData(data);\r\n    }\r\n  }, [allProducts, allEvents]);\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <ProductDetails data={data} />\r\n      {data && <SuggestedProduct data={data} />}\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductDetailsPage;\r\n","F:\\Projects\\E-shop2\\frontend\\src\\pages\\SellerActivationPage.jsx",["605"],[],"import axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { server } from \"../server\";\r\n\r\nconst SellerActivationPage = () => {\r\n  const { activation_token } = useParams();\r\n  const [error, setError] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (activation_token) {\r\n      const sendRequest = async () => {\r\n        try {\r\n          const response = await axios.post(`${server}/shop/activation`, {\r\n            activation_token,\r\n          });\r\n          console.log(response);\r\n        } catch (err) {\r\n          setError(true);\r\n        }\r\n      };\r\n      sendRequest();\r\n    }\r\n  }, []); // Include activation_token as a dependency\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        width: \"100%\",\r\n        height: \"100vh\",\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n      }}\r\n    >\r\n      {error ? (\r\n        <p>Your token is expired!</p>\r\n      ) : (\r\n        <p>Your account has been created successfully!</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SellerActivationPage;\r\n","F:\\Projects\\E-shop2\\frontend\\src\\pages\\ProfilePage.jsx",[],[],"F:\\Projects\\E-shop2\\frontend\\src\\pages\\ShopCreate.jsx",["606"],[],"import React, { useEffect } from 'react'\r\nimport { useSelector } from 'react-redux';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport ShopCreate from \"../components/Shop/ShopCreate\";\r\n\r\nconst ShopCreatePage = () => {\r\n  const navigate = useNavigate();\r\n  const { isSeller, seller } = useSelector((state) => state.seller);\r\n\r\n  useEffect(() => {\r\n    if(isSeller === true){\r\n      navigate(`/shop/${seller._id}`);\r\n    }\r\n  }, [])\r\n  return (\r\n    <div>\r\n        <ShopCreate />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ShopCreatePage","F:\\Projects\\E-shop2\\frontend\\src\\pages\\ShopLoginPage.jsx",["607"],[],"import React, { useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport ShopLogin from \"../components/Shop/ShopLogin\";\r\n\r\nconst ShopLoginPage = () => {\r\n  const navigate = useNavigate();\r\n  const { isSeller, isLoading } = useSelector((state) => state.seller);\r\n\r\n  useEffect(() => {\r\n    if (isSeller === true) {\r\n      navigate(`/dashboard`);\r\n    }\r\n  }, [isLoading, isSeller]);\r\n\r\n  return (\r\n    <div>\r\n      <ShopLogin />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ShopLoginPage;\r\n","F:\\Projects\\E-shop2\\frontend\\src\\pages\\PaymentPage.jsx",[],[],"F:\\Projects\\E-shop2\\frontend\\src\\pages\\CheckoutPage.jsx",[],[],"F:\\Projects\\E-shop2\\frontend\\src\\pages\\OrderDetailsPage.jsx",[],[],"F:\\Projects\\E-shop2\\frontend\\src\\pages\\OrderSuccessPage.jsx",[],[],"F:\\Projects\\E-shop2\\frontend\\src\\pages\\Shop\\ShopHomePage.jsx",[],[],"F:\\Projects\\E-shop2\\frontend\\src\\pages\\Shop\\ShopCreateProduct.jsx",[],[],"F:\\Projects\\E-shop2\\frontend\\src\\pages\\Shop\\ShopDashboardPage.jsx",[],[],"F:\\Projects\\E-shop2\\frontend\\src\\pages\\Shop\\ShopAllProduct.jsx",[],[],"F:\\Projects\\E-shop2\\frontend\\src\\pages\\Shop\\ShopPreviewPage.jsx",[],[],"F:\\Projects\\E-shop2\\frontend\\src\\pages\\Shop\\ShopCreateEvent.jsx",[],[],"F:\\Projects\\E-shop2\\frontend\\src\\pages\\Shop\\ShopAllCoupons.jsx",[],[],"F:\\Projects\\E-shop2\\frontend\\src\\pages\\Shop\\ShopAllEvents.jsx",[],[],"F:\\Projects\\E-shop2\\frontend\\src\\pages\\Shop\\ShopAllOrder.jsx",[],[],"F:\\Projects\\E-shop2\\frontend\\src\\pages\\Shop\\ShopOrderDetails.jsx",[],[],"F:\\Projects\\E-shop2\\frontend\\src\\components\\Layout\\Loader.jsx",[],[],"F:\\Projects\\E-shop2\\frontend\\src\\components\\Checkout\\Checkout.jsx",[],[],"F:\\Projects\\E-shop2\\frontend\\src\\components\\Login\\Login.jsx",[],[],"F:\\Projects\\E-shop2\\frontend\\src\\static\\data.js",["608","609","610","611"],[],"// navigation Data\r\nexport const navItems = [\r\n    {\r\n      title: \"Home\",\r\n      url: \"/\",\r\n    },\r\n    {\r\n      title: \"Best Selling\",\r\n      url: \"/best-selling\",\r\n    },\r\n    {\r\n      title: \"Products\",\r\n      url: \"/products\",\r\n    },\r\n    {\r\n      title: \"Events\",\r\n      url: \"/events\",\r\n    },\r\n  ];\r\n  \r\n  // branding data\r\n  export const brandingData = [\r\n    {\r\n      id: 1,\r\n      title: \"Free Shipping\",\r\n      Description: \"From all orders over 100$\",\r\n      icon: (\r\n        <svg\r\n          width=\"36\"\r\n          height=\"36\"\r\n          viewBox=\"0 0 36 36\"\r\n          fill=\"none\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n        >\r\n          <path\r\n            d=\"M1 1H5.63636V24.1818H35\"\r\n            stroke=\"#FFBB38\"\r\n            stroke-width=\"2\"\r\n            stroke-miterlimit=\"10\"\r\n            stroke-linecap=\"square\"\r\n          ></path>\r\n          <path\r\n            d=\"M8.72763 35.0002C10.4347 35.0002 11.8185 33.6163 11.8185 31.9093C11.8185 30.2022 10.4347 28.8184 8.72763 28.8184C7.02057 28.8184 5.63672 30.2022 5.63672 31.9093C5.63672 33.6163 7.02057 35.0002 8.72763 35.0002Z\"\r\n            stroke=\"#FFBB38\"\r\n            stroke-width=\"2\"\r\n            stroke-miterlimit=\"10\"\r\n            stroke-linecap=\"square\"\r\n          ></path>\r\n          <path\r\n            d=\"M31.9073 35.0002C33.6144 35.0002 34.9982 33.6163 34.9982 31.9093C34.9982 30.2022 33.6144 28.8184 31.9073 28.8184C30.2003 28.8184 28.8164 30.2022 28.8164 31.9093C28.8164 33.6163 30.2003 35.0002 31.9073 35.0002Z\"\r\n            stroke=\"#FFBB38\"\r\n            stroke-width=\"2\"\r\n            stroke-miterlimit=\"10\"\r\n            stroke-linecap=\"square\"\r\n          ></path>\r\n          <path\r\n            d=\"M34.9982 1H11.8164V18H34.9982V1Z\"\r\n            stroke=\"#FFBB38\"\r\n            stroke-width=\"2\"\r\n            stroke-miterlimit=\"10\"\r\n            stroke-linecap=\"square\"\r\n          ></path>\r\n          <path\r\n            d=\"M11.8164 7.18164H34.9982\"\r\n            stroke=\"#FFBB38\"\r\n            stroke-width=\"2\"\r\n            stroke-miterlimit=\"10\"\r\n            stroke-linecap=\"square\"\r\n          ></path>\r\n        </svg>\r\n      ),\r\n    },\r\n    {\r\n      id: 2,\r\n      title: \"Daily Surprise Offers\",\r\n      Description: \"Save up to 25% off\",\r\n      icon: (\r\n        <svg\r\n          width=\"32\"\r\n          height=\"34\"\r\n          viewBox=\"0 0 32 34\"\r\n          fill=\"none\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n        >\r\n          <path\r\n            d=\"M31 17.4502C31 25.7002 24.25 32.4502 16 32.4502C7.75 32.4502 1 25.7002 1 17.4502C1 9.2002 7.75 2.4502 16 2.4502C21.85 2.4502 26.95 5.7502 29.35 10.7002\"\r\n            stroke=\"#FFBB38\"\r\n            stroke-width=\"2\"\r\n            stroke-miterlimit=\"10\"\r\n          ></path>\r\n          <path\r\n            d=\"M30.7 2L29.5 10.85L20.5 9.65\"\r\n            stroke=\"#FFBB38\"\r\n            stroke-width=\"2\"\r\n            stroke-miterlimit=\"10\"\r\n            stroke-linecap=\"square\"\r\n          ></path>\r\n        </svg>\r\n      ),\r\n    },\r\n    {\r\n      id: 4,\r\n      title: \"Affordable Prices\",\r\n      Description: \"Get Factory direct price\",\r\n      icon: (\r\n        <svg\r\n          width=\"32\"\r\n          height=\"35\"\r\n          viewBox=\"0 0 32 35\"\r\n          fill=\"none\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n        >\r\n          <path\r\n            d=\"M7 13H5.5C2.95 13 1 11.05 1 8.5V1H7\"\r\n            stroke=\"#FFBB38\"\r\n            stroke-width=\"2\"\r\n            stroke-miterlimit=\"10\"\r\n          ></path>\r\n          <path\r\n            d=\"M25 13H26.5C29.05 13 31 11.05 31 8.5V1H25\"\r\n            stroke=\"#FFBB38\"\r\n            stroke-width=\"2\"\r\n            stroke-miterlimit=\"10\"\r\n          ></path>\r\n          <path\r\n            d=\"M16 28V22\"\r\n            stroke=\"#FFBB38\"\r\n            stroke-width=\"2\"\r\n            stroke-miterlimit=\"10\"\r\n          ></path>\r\n          <path\r\n            d=\"M16 22C11.05 22 7 17.95 7 13V1H25V13C25 17.95 20.95 22 16 22Z\"\r\n            stroke=\"#FFBB38\"\r\n            stroke-width=\"2\"\r\n            stroke-miterlimit=\"10\"\r\n            stroke-linecap=\"square\"\r\n          ></path>\r\n          <path\r\n            d=\"M25 34H7C7 30.7 9.7 28 13 28H19C22.3 28 25 30.7 25 34Z\"\r\n            stroke=\"#FFBB38\"\r\n            stroke-width=\"2\"\r\n            stroke-miterlimit=\"10\"\r\n            stroke-linecap=\"square\"\r\n          ></path>\r\n        </svg>\r\n      ),\r\n    },\r\n    {\r\n      id: 5,\r\n      title: \"Secure Payments\",\r\n      Description: \"100% protected payments\",\r\n      icon: (\r\n        <svg\r\n          width=\"32\"\r\n          height=\"38\"\r\n          viewBox=\"0 0 32 38\"\r\n          fill=\"none\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n        >\r\n          <path\r\n            d=\"M22.6654 18.667H9.33203V27.0003H22.6654V18.667Z\"\r\n            stroke=\"#FFBB38\"\r\n            stroke-width=\"2\"\r\n            stroke-miterlimit=\"10\"\r\n            stroke-linecap=\"square\"\r\n          ></path>\r\n          <path\r\n            d=\"M12.668 18.6663V13.6663C12.668 11.833 14.168 10.333 16.0013 10.333C17.8346 10.333 19.3346 11.833 19.3346 13.6663V18.6663\"\r\n            stroke=\"#FFBB38\"\r\n            stroke-width=\"2\"\r\n            stroke-miterlimit=\"10\"\r\n            stroke-linecap=\"square\"\r\n          ></path>\r\n          <path\r\n            d=\"M31 22C31 30.3333 24.3333 37 16 37C7.66667 37 1 30.3333 1 22V5.33333L16 2L31 5.33333V22Z\"\r\n            stroke=\"#FFBB38\"\r\n            stroke-width=\"2\"\r\n            stroke-miterlimit=\"10\"\r\n            stroke-linecap=\"square\"\r\n          ></path>\r\n        </svg>\r\n      ),\r\n    },\r\n  ];\r\n  \r\n  // categories data\r\n  export const categoriesData = [\r\n    {\r\n      id: 1,\r\n      title: \"Computers and Laptops\",\r\n      subTitle: \"\",\r\n      image_Url:\r\n        \"https://cdn.shopify.com/s/files/1/1706/9177/products/NEWAppleMacbookProwithM1ProChip14InchLaptop2021ModelMKGQ3LL_A_16GB_1TBSSD_custommacbd.jpg?v=1659592838\",\r\n    },\r\n    {\r\n      id: 2,\r\n      title: \"Apple iPad\",\r\n      subTitle: \"\",\r\n      image_Url:\r\n        \"https://product.hstatic.net/1000379792/product/ipad-pro-m1-trang-uy-tin-hai-phong-1_0868b1cefbe74bc28b62904a1139f9d4.jpg\",\r\n    },\r\n    {\r\n      id: 3,\r\n      title: \"Mouse\",\r\n      subTitle: \"\",\r\n      image_Url:\r\n        \"https://m.media-amazon.com/images/I/6145+V0UrwL._AC_SL1500_.jpg\",\r\n    },\r\n    {\r\n      id: 4,\r\n      title: \"MacBook Air (intel)\",\r\n      subTitle: \"\",\r\n      image_Url:\r\n        \"https://m.media-amazon.com/images/I/71jG+e7roXL._AC_SL1500_.jpg\",\r\n    },\r\n    {\r\n      id: 5,\r\n      title: \"Airpods Pro\",\r\n      subTitle: \"\",\r\n      image_Url:\r\n        \"https://product.hstatic.net/1000379792/product/airpods-pro-2-chinh-hang-hai-phong_86cba167c4d045dca8d374cb8b3a2f4d_1024x1024.jpg\",\r\n    },\r\n    {\r\n      id: 6,\r\n      title: \"Apple Watch\",\r\n      subTitle: \"\",\r\n      image_Url:\r\n        \"https://i5.walmartimages.com/seo/Apple-Watch-SE-1st-Gen-GPS-40mm-Space-Gray-Aluminum-Case-with-Midnight-Sport-Band-Regular_f243bd02-11e4-41fc-aecd-63190edc5e35.3a24d00e2b8799042fd91bc7794d7cc2.jpeg?odnHeight=2000&odnWidth=2000&odnBg=FFFFFF\",\r\n    },\r\n    {\r\n      id: 7,\r\n      title: \"Earpods\",\r\n      subTitle: \"\",\r\n      image_Url: \"https://tintuc.dienthoaigiakho.vn/wp-content/uploads/2021/12/637743701653896255_concept-earpods-2021-cover.jpg\",\r\n    },\r\n    {\r\n      id: 8,\r\n      title: \"Mobile and Tablets\",\r\n      subTitle: \"\",\r\n      image_Url:\r\n        \"https://st-troy.mncdn.com/mnresize/1500/1500/Content/media/ProductImg/original/mpwp3tua-apple-iphone-14-256gb-mavi-mpwp3tua-637986832343472449.jpg\",\r\n    },\r\n    {\r\n      id: 9,\r\n      title: \"Music and Gaming\",\r\n      subTitle: \"\",\r\n      image_Url:\r\n        \"https://static.vecteezy.com/system/resources/previews/011/996/555/original/3d-black-headphone-illustration-ecommerce-icon-png.png\",\r\n    },\r\n    {\r\n      id: 10,\r\n      title: \"Others\",\r\n      subTitle: \"\",\r\n      image_Url:\r\n        \"https://searchspring.com/wp-content/uploads/2022/10/Hero-Image-Platform-Others-2.png\",\r\n    },\r\n  ];\r\n  \r\n  // product Data\r\n  export const productData = [\r\n    {\r\n      id: 1,\r\n      category:\"Computers and Laptops\",\r\n      name: \"MacBook pro M2 chicest 256gb ssd 8gb ram space-gray color with apple 1 year warranty\",\r\n      description:\r\n        \"Product details are a crucial part of any eCommerce website or online marketplace. These details help the potential customers to make an informed decision about the product they are interested in buying. A well-written product description can also be a powerful marketing tool that can help to increase sales.Product details typically include information about the product's features, specifications, dimensions, weight, materials, and other relevant information that can help customers to understand the product better. The product details section should also include high-quality images and videos of the product, as well as customer reviews and ratings.\",\r\n      image_Url: [\r\n        {\r\n          public_id: \"test\",\r\n          url: \"https://m.media-amazon.com/images/I/71jG+e7roXL._AC_SL1500_.jpg\",\r\n        },\r\n        {\r\n          public_id: \"test\",\r\n          url: \"https://m.media-amazon.com/images/I/71jG+e7roXL._AC_SL1500_.jpg\",\r\n        },\r\n      ],\r\n      shop: {\r\n        name: \"Apple inc.\",\r\n        shop_avatar: {\r\n          public_id: \"test\",\r\n          url: \"https://www.hatchwise.com/wp-content/uploads/2022/05/amazon-logo-1024x683.png\",\r\n        },\r\n        ratings: 4.2,\r\n      },\r\n      price: 1099,\r\n      discount_price: 1049,\r\n      rating: 4,\r\n      total_sell: 35,\r\n      stock: 10,\r\n    },\r\n    {\r\n      id: 2,\r\n      category:\"Mobile and Tablets\",\r\n      name: \"Iphone 14 pro max 256 gb ssd and 8 gb ram silver colour\",\r\n      description:\r\n        \"Product details are a crucial part of any eCommerce website or online marketplace. These details help the potential customers to make an informed decision about the product they are interested in buying. A well-written product description can also be a powerful marketing tool that can help to increase sales.Product details typically include information about the product's features, specifications, dimensions, weight, materials, and other relevant information that can help customers to understand the product better. The product details section should also include high-quality images and videos of the product, as well as customer reviews and ratings.\",\r\n      image_Url: [\r\n        {\r\n          public_id: \"test\",\r\n          url: \"https://m.media-amazon.com/images/I/31Vle5fVdaL.jpg\",\r\n        },\r\n        {\r\n          public_id: \"test\",\r\n          url: \"https://m.media-amazon.com/images/I/31Vle5fVdaL.jpg\",\r\n        },\r\n      ],\r\n      shop: {\r\n        name: \"Amazon Ltd\",\r\n        shop_avatar: {\r\n          public_id: \"test\",\r\n          url: \"https://www.hatchwise.com/wp-content/uploads/2022/05/amazon-logo-1024x683.png\",\r\n        },\r\n        ratings: 4.2,\r\n      },\r\n      discount_price: 1099,\r\n      rating: 5,\r\n      total_sell: 80,\r\n      stock: 10,\r\n      category:\"Mobile & Tablets\"\r\n    },\r\n    {\r\n      id: 1,\r\n      category:\"Computers and Laptop\",\r\n      name: \"MacBook pro M2 chicest 256gb ssd 8gb ram space gray color with apple 1 year warranty\",\r\n      description:\r\n        \"Product details are a crucial part of any eCommerce website or online marketplace. These details help the potential customers to make an informed decision about the product they are interested in buying. A well-written product description can also be a powerful marketing tool that can help to increase sales.Product details typically include information about the product's features, specifications, dimensions, weight, materials, and other relevant information that can help customers to understand the product better. The product details section should also include high-quality images and videos of the product, as well as customer reviews and ratings.\",\r\n      image_Url: [\r\n        {\r\n          public_id: \"test\",\r\n          url: \"https://m.media-amazon.com/images/I/71jG+e7roXL._AC_SL1500_.jpg\",\r\n        },\r\n        {\r\n          public_id: \"test\",\r\n          url: \"https://m.media-amazon.com/images/I/71jG+e7roXL._AC_SL1500_.jpg\",\r\n        },\r\n      ],\r\n      shop: {\r\n        name: \"Apple inc.\",\r\n        shop_avatar: {\r\n          public_id: \"test\",\r\n          url: \"https://www.hatchwise.com/wp-content/uploads/2022/05/amazon-logo-1024x683.png\",\r\n        },\r\n        ratings: 4.2,\r\n      },\r\n      price: 1099,\r\n      discount_price: 1049,\r\n      rating: 4,\r\n      total_sell: 75,\r\n      stock: 10,\r\n      category:\"Computers & Laptop\"\r\n    },\r\n    {\r\n      id: 4,\r\n      category:\"Others\",\r\n      name: \"New Fashionable Watch for men 2023 with multiple colors\",\r\n      description:\r\n        \"Product details are a crucial part of any eCommerce website or online marketplace. These details help the potential customers to make an informed decision about the product they are interested in buying. A well-written product description can also be a powerful marketing tool that can help to increase sales.Product details typically include information about the product's features, specifications, dimensions, weight, materials, and other relevant information that can help customers to understand the product better. The product details section should also include high-quality images and videos of the product, as well as customer reviews and ratings.\",\r\n      image_Url: [\r\n        {\r\n          public_id: \"test\",\r\n          url: \"https://i0.wp.com/eccocibd.com/wp-content/uploads/2022/01/1802NL02_1.png?fit=550%2C550&ssl=1\",\r\n        },\r\n        {\r\n          public_id: \"test\",\r\n          url: \"https://i0.wp.com/eccocibd.com/wp-content/uploads/2022/01/1802NL02_1.png?fit=550%2C550&ssl=1\",\r\n        },\r\n      ],\r\n      shop: {\r\n        name: \"Shahriar Watch House\",\r\n        shop_avatar: {\r\n          public_id: \"test\",\r\n          url: \"https://www.hatchwise.com/wp-content/uploads/2022/05/amazon-logo-1024x683.png\",\r\n        },\r\n        ratings: 4.2,\r\n      category:\"Others\"\r\n      },\r\n      price: 100,\r\n      discount_price: 79,\r\n      rating: 4,\r\n      total_sell: 12,\r\n      stock: 10,\r\n    },\r\n    {\r\n      id: 5,\r\n      category:\"Airpods\",\r\n      name: \"Airpods Pro\",\r\n      description:\r\n        \"Product details are a crucial part of any eCommerce website or online marketplace. These details help the potential customers to make an informed decision about the product they are interested in buying. A well-written product description can also be a powerful marketing tool that can help to increase sales.Product details typically include information about the product's features, specifications, dimensions, weight, materials, and other relevant information that can help customers to understand the product better. The product details section should also include high-quality images and videos of the product, as well as customer reviews and ratings.\",\r\n      image_Url: [\r\n        {\r\n          public_id: \"test\",\r\n          url: \"https://product.hstatic.net/1000379792/product/airpods-pro-2-chinh-hang-hai-phong_86cba167c4d045dca8d374cb8b3a2f4d_1024x1024.jpg\",\r\n        },\r\n        {\r\n          public_id: \"test\",\r\n          url: \"https://product.hstatic.net/1000379792/product/airpods-pro-2-chinh-hang-hai-phong_86cba167c4d045dca8d374cb8b3a2f4d_1024x1024.jpg\",\r\n        },\r\n      ],\r\n      shop: {\r\n        name: \"Alisha Shoes Mart\",\r\n        shop_avatar: {\r\n          public_id: \"test\",\r\n          url: \"https://www.hatchwise.com/wp-content/uploads/2022/05/amazon-logo-1024x683.png\",\r\n        },\r\n        ratings: 4.2,\r\n      },\r\n      price: 120,\r\n      discount_price: 89,\r\n      rating: 5,\r\n      total_sell: 49,\r\n      stock: 10,\r\n      category:\"Airpods Pro\"\r\n    },\r\n    {\r\n      id: 6,\r\n      category:\"iPad (WiFi)\",\r\n      name: \"iPad (WiFi)\",\r\n      description:\r\n        \"Product details are a crucial part of any eCommerce website or online marketplace. These details help the potential customers to make an informed decision about the product they are interested in buying. A well-written product description can also be a powerful marketing tool that can help to increase sales.Product details typically include information about the product's features, specifications, dimensions, weight, materials, and other relevant information that can help customers to understand the product better. The product details section should also include high-quality images and videos of the product, as well as customer reviews and ratings.\",\r\n      image_Url: [\r\n        {\r\n          public_id: \"test\",\r\n          url: \"https://product.hstatic.net/1000379792/product/ipad-pro-m1-trang-uy-tin-hai-phong-1_0868b1cefbe74bc28b62904a1139f9d4.jpg\",\r\n        },\r\n        {\r\n          public_id: \"test\",\r\n          url: \"https://product.hstatic.net/1000379792/product/ipad-pro-m1-trang-uy-tin-hai-phong-1_0868b1cefbe74bc28b62904a1139f9d4.jpg\",\r\n        },\r\n      ],\r\n      shop: {\r\n        name: \"Alisha Shoes Mart\",\r\n        shop_avatar: {\r\n          public_id: \"test\",\r\n          url: \"https://www.hatchwise.com/wp-content/uploads/2022/05/amazon-logo-1024x683.png\",\r\n        },\r\n        ratings: 4.2,\r\n      },\r\n      price: 120,\r\n      discount_price: 89,\r\n      rating: 5,\r\n      total_sell: 49,\r\n      stock: 10,\r\n      category:\"iPad (WiFi)\"\r\n    },\r\n    {\r\n      id: 1,\r\n      name: \"Gaming Headphone Asus with multiple color and free delivery\",\r\n      description:\r\n        \"Product details are a crucial part of any eCommerce website or online marketplace. These details help the potential customers to make an informed decision about the product they are interested in buying. A well-written product description can also be a powerful marketing tool that can help to increase sales.Product details typically include information about the product's features, specifications, dimensions, weight, materials, and other relevant information that can help customers to understand the product better. The product details section should also include high-quality images and videos of the product, as well as customer reviews and ratings.\",\r\n      image_Url: [\r\n        {\r\n          public_id: \"test\",\r\n          url: \"https://www.startech.com.bd/image/cache/catalog/headphone/havit/h763d/h763d-02-500x500.jpg\",\r\n        },\r\n        {\r\n          public_id: \"test\",\r\n          url: \"https://eratablet.com/wp-content/uploads/2022/08/H51ba6537405f4948972e293927673546u.jpg\",\r\n        },\r\n      ],\r\n      shop: {\r\n        name: \"Asus Ltd\",\r\n        shop_avatar: {\r\n          public_id: \"test\",\r\n          url: \"https://www.hatchwise.com/wp-content/uploads/2022/05/amazon-logo-1024x683.png\",\r\n        },\r\n        ratings: 4.2,\r\n      },\r\n      price: 300,\r\n      discount_price: 239,\r\n      rating: 4.5,\r\n      reviews: [\r\n        {\r\n          user: {\r\n            // user object will be here\r\n          },\r\n          comment: \"IT's so cool!\",\r\n          rating: 5,\r\n        },\r\n      ],\r\n      total_sell: 20,\r\n      stock: 10,\r\n      category:\"Music and Gaming\"\r\n    },\r\n    {\r\n      id: 4,\r\n      name: \"New Fashionable Watch for men 2023 with multiple colors\",\r\n      description:\r\n        \"Product details are a crucial part of any eCommerce website or online marketplace. These details help the potential customers to make an informed decision about the product they are interested in buying. A well-written product description can also be a powerful marketing tool that can help to increase sales.Product details typically include information about the product's features, specifications, dimensions, weight, materials, and other relevant information that can help customers to understand the product better. The product details section should also include high-quality images and videos of the product, as well as customer reviews and ratings.\",\r\n      image_Url: [\r\n        {\r\n          public_id: \"test\",\r\n          url: \"https://i0.wp.com/eccocibd.com/wp-content/uploads/2022/01/1802NL02_1.png?fit=550%2C550&ssl=1\",\r\n        },\r\n        {\r\n          public_id: \"test\",\r\n          url: \"https://i0.wp.com/eccocibd.com/wp-content/uploads/2022/01/1802NL02_1.png?fit=550%2C550&ssl=1\",\r\n        },\r\n      ],\r\n      shop: {\r\n        name: \"Shahriar Watch House\",\r\n        shop_avatar: {\r\n          public_id: \"test\",\r\n          url: \"https://www.hatchwise.com/wp-content/uploads/2022/05/amazon-logo-1024x683.png\",\r\n        },\r\n        ratings: 4.2,\r\n      },\r\n      price: 100,\r\n      discount_price: 79,\r\n      rating: 4,\r\n      total_sell: 62,\r\n      stock: 10,\r\n    },\r\n    {\r\n      id: 1,\r\n      name: \"Gaming Headphone Asus with multiple color and free delivery\",\r\n      description:\r\n        \"Product details are a crucial part of any eCommerce website or online marketplace. These details help the potential customers to make an informed decision about the product they are interested in buying. A well-written product description can also be a powerful marketing tool that can help to increase sales.Product details typically include information about the product's features, specifications, dimensions, weight, materials, and other relevant information that can help customers to understand the product better. The product details section should also include high-quality images and videos of the product, as well as customer reviews and ratings.\",\r\n      image_Url: [\r\n        {\r\n          public_id: \"test\",\r\n          url: \"https://www.startech.com.bd/image/cache/catalog/headphone/havit/h763d/h763d-02-500x500.jpg\",\r\n        },\r\n        {\r\n          public_id: \"test\",\r\n          url: \"https://eratablet.com/wp-content/uploads/2022/08/H51ba6537405f4948972e293927673546u.jpg\",\r\n        },\r\n      ],\r\n      shop: {\r\n        name: \"Asus Ltd\",\r\n        shop_avatar: {\r\n          public_id: \"test\",\r\n          url: \"https://www.hatchwise.com/wp-content/uploads/2022/05/amazon-logo-1024x683.png\",\r\n        },\r\n        ratings: 4.2,\r\n      },\r\n      price: 300,\r\n      discount_price: 239,\r\n      rating: 4.5,\r\n      reviews: [\r\n        {\r\n          user: {\r\n            // user object will be here\r\n          },\r\n          comment: \"IT's so cool!\",\r\n          rating: 5,\r\n        },\r\n      ],\r\n      total_sell: 20,\r\n      stock: 10,\r\n    },\r\n    {\r\n      id: 2,\r\n      category:\"Mobile and Tablets\",\r\n      name: \"Iphone 14 pro max 256 gb ssd and 8 gb ram silver color\",\r\n      description:\r\n        \"Product details are a crucial part of any eCommerce website or online marketplace. These details help the potential customers to make an informed decision about the product they are interested in buying. A well-written product description can also be a powerful marketing tool that can help to increase sales.Product details typically include information about the product's features, specifications, dimensions, weight, materials, and other relevant information that can help customers to understand the product better. The product details section should also include high-quality images and videos of the product, as well as customer reviews and ratings.\",\r\n      image_Url: [\r\n        {\r\n          public_id: \"test\",\r\n          url: \"https://m.media-amazon.com/images/I/31Vle5fVdaL.jpg\",\r\n        },\r\n        {\r\n          public_id: \"test\",\r\n          url: \"https://m.media-amazon.com/images/I/31Vle5fVdaL.jpg\",\r\n        },\r\n      ],\r\n      shop: {\r\n        name: \"Amazon Ltd\",\r\n        shop_avatar: {\r\n          public_id: \"test\",\r\n          url: \"https://www.hatchwise.com/wp-content/uploads/2022/05/amazon-logo-1024x683.png\",\r\n        },\r\n        ratings: 4.2,\r\n      },\r\n      discount_price: 1099,\r\n      rating: 5,\r\n      total_sell: 20,\r\n      stock: 10,\r\n    },\r\n    {\r\n      id: 1,\r\n      category:\"Music and Gaming\",\r\n      name: \"Gaming Headphone Asus with multiple color and free delivery\",\r\n      description:\r\n        \"Product details are a crucial part of any eCommerce website or online marketplace. These details help the potential customers to make an informed decision about the product they are interested in buying. A well-written product description can also be a powerful marketing tool that can help to increase sales.Product details typically include information about the product's features, specifications, dimensions, weight, materials, and other relevant information that can help customers to understand the product better. The product details section should also include high-quality images and videos of the product, as well as customer reviews and ratings.\",\r\n      image_Url: [\r\n        {\r\n          public_id: \"test\",\r\n          url: \"https://www.startech.com.bd/image/cache/catalog/headphone/havit/h763d/h763d-02-500x500.jpg\",\r\n        },\r\n        {\r\n          public_id: \"test\",\r\n          url: \"https://eratablet.com/wp-content/uploads/2022/08/H51ba6537405f4948972e293927673546u.jpg\",\r\n        },\r\n      ],\r\n      shop: {\r\n        name: \"Asus Ltd\",\r\n        shop_avatar: {\r\n          public_id: \"test\",\r\n          url: \"https://www.hatchwise.com/wp-content/uploads/2022/05/amazon-logo-1024x683.png\",\r\n        },\r\n        ratings: 4.2,\r\n      },\r\n      price: 300,\r\n      discount_price: 239,\r\n      rating: 4.5,\r\n      reviews: [\r\n        {\r\n          user: {\r\n            // user object will be here\r\n          },\r\n          comment: \"IT's so cool!\",\r\n          rating: 5,\r\n        },\r\n      ],\r\n      total_sell: 20,\r\n      stock: 10,\r\n    },\r\n  ];\r\n  \r\n  export const footerProductLinks = [\r\n    {\r\n      name: \"About us\",\r\n      link: \"/about\"\r\n    },\r\n    {\r\n      name: \"Careers\",\r\n      link: \"/carrers\"\r\n    },\r\n    {\r\n      name: \"Store Locations\",\r\n    },\r\n    {\r\n      name: \"Our Blog\",\r\n    },\r\n    {\r\n      name: \"Reviews\",\r\n    },\r\n  ];\r\n  \r\n  export const footercompanyLinks = [\r\n    {\r\n      name: \"Game & Video\",\r\n    },\r\n    {\r\n      name: \"Phone &Tablets\",\r\n    },\r\n    {\r\n      name: \"Computers & Laptop\",\r\n    },\r\n    {\r\n      name: \"Sport Watches\",\r\n    },\r\n    {\r\n      name: \"Events\",\r\n    },\r\n  ];\r\n  \r\n  export const footerSupportLinks = [\r\n    {\r\n      name: \"FAQ\",\r\n    },\r\n    {\r\n      name: \"Reviews\",\r\n    },\r\n    {\r\n      name: \"Contact Us\",\r\n    },\r\n    {\r\n      name: \"Shipping\",\r\n    },\r\n    {\r\n      name: \"Live chat\",\r\n    },\r\n  ];\r\n  ","F:\\Projects\\E-shop2\\frontend\\src\\styles\\styles.js",[],[],"F:\\Projects\\E-shop2\\frontend\\src\\components\\Layout\\Footer.jsx",[],[],"F:\\Projects\\E-shop2\\frontend\\src\\components\\Shop\\ShopInfo.jsx",["612"],[],"import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { backend_url, server } from \"../../server\";\r\nimport styles from \"../../styles/styles\";\r\nimport axios from \"axios\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport { getAllProductsShop } from \"../../redux/actions/product\";\r\nimport Loader from \"../Layout/Loader\";\r\n\r\nconst ShopInfo = ({ isOwner }) => {\r\n  const [data, setData] = useState({});\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const { products } = useSelector((state) => state.products);\r\n  const { id } = useParams();\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getAllProductsShop(id));\r\n    setIsLoading(true);\r\n    axios\r\n      .get(`${server}/shop/get-shop-info/${id}`)\r\n      .then((res) => {\r\n        setData(res.data.shop);\r\n        setIsLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        setIsLoading(false);\r\n      });\r\n  }, []);\r\n\r\n  const logoutHandler = async () => {\r\n    axios.get(`${server}/shop/logout`, {\r\n      withCredentials: true,\r\n    });\r\n    window.location.reload();\r\n  };\r\n\r\n  const totalReviewsLength =\r\n    products &&\r\n    products.reduce((acc, product) => acc + product.reviews.length, 0);\r\n\r\n  const totalRatings =\r\n    products &&\r\n    products.reduce(\r\n      (acc, product) =>\r\n        acc + product.reviews.reduce((sum, review) => sum + review.rating, 0),\r\n      0\r\n    );\r\n\r\n  const averageRating = totalRatings / totalReviewsLength || 0;\r\n\r\n  return (\r\n    <>\r\n      {isLoading ? (\r\n        <Loader />\r\n      ) : (\r\n        <div>\r\n          <div className=\"w-full py-5\">\r\n            <div className=\"w-full flex item-center justify-center\">\r\n              <img\r\n                src={`${backend_url}${data.avatar}`}\r\n                alt=\"\"\r\n                className=\"w-[150px] h-[150px] object-cover rounded-full\"\r\n              />\r\n            </div>\r\n            <h3 className=\"text-center py-2 text-[20px]\">{data.name}</h3>\r\n            <p className=\"text-[16px] text-[#000000a6] p-[10px] flex items-center\">\r\n              {data.description}\r\n            </p>\r\n          </div>\r\n\r\n          <div className=\"p-3\">\r\n            <h5 className=\"font-[600]\">Address</h5>\r\n            <h4 className=\"text-[#000000a6]\">{data.address}</h4>\r\n          </div>\r\n\r\n          <div className=\"p-3\">\r\n            <h5 className=\"font-[600]\">Phone number</h5>\r\n            <h4 className=\"text-[#000000a6]\">{data.phoneNumber}</h4>\r\n          </div>\r\n\r\n          <div className=\"p-3\">\r\n            <h5 className=\"font-[600]\">Total products</h5>\r\n            <h4 className=\"text-[#000000a6]\">{products && products.length}</h4>\r\n          </div>\r\n          <div className=\"p-3\">\r\n            <h5 className=\"font-[600]\">Shop ratings</h5>\r\n            <h4 className=\"text-[#000000b0]\">{averageRating}/5</h4>\r\n          </div>\r\n\r\n          <div className=\"p-3\">\r\n            <h5 className=\"font-[600]\">Joined on</h5>\r\n            <h4 className=\"text-[#000000b0]\">\r\n              {data?.createdAt?.slice(0, 10)}\r\n            </h4>\r\n          </div>\r\n\r\n          {isOwner && (\r\n            <div className=\"py-3 px-4\">\r\n              <Link to=\"/settings\">\r\n                <div\r\n                  className={`${styles.button} !w-full !h-[42px] !rounded-[5px]`}\r\n                >\r\n                  <span className=\"text-white\">Edit shop</span>\r\n                </div>\r\n              </Link>\r\n              <div\r\n                className={`${styles.button} !w-full !h-[42px] !rounded-[5px]`}\r\n                onClick={logoutHandler}\r\n              >\r\n                <span className=\"text-white\">Log out</span>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ShopInfo;\r\n","F:\\Projects\\E-shop2\\frontend\\src\\components\\Layout\\Header.jsx",["613"],[],"import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styles from \"../../styles/styles\";\r\nimport { categoriesData, productData } from \"../../static/data\";\r\nimport {\r\n  AiOutlineSearch,\r\n  AiOutlineHeart,\r\n  AiOutlineShoppingCart,\r\n} from \"react-icons/ai\";\r\nimport { IoIosArrowForward, IoIosArrowDown } from \"react-icons/io\";\r\nimport { BiMenu, BiMenuAltLeft } from \"react-icons/bi\";\r\nimport { CgProfile } from \"react-icons/cg\";\r\nimport DropDown from \"./DropDown\";\r\nimport Navbar from \"./Navbar\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { backend_url } from \"../../server\";\r\nimport Cart from \"../cart/Cart\";\r\nimport Wishlist from \"../Wishlist/Wishlist\";\r\nimport { RxCross1 } from \"react-icons/rx\";\r\n\r\nconst Header = ({ activeHandling }) => {\r\n  const { isAuthenticated, user } = useSelector((state) => state.user);\r\n  const { isSeller } = useSelector((state) => state.seller);\r\n  const { wishlist } = useSelector((state) => state.wishlist);\r\n  const { cart } = useSelector((state) => state.cart);\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [searchData, setSearchData] = useState(null);\r\n  const [active, setActive] = useState(false);\r\n  const [dropDown, setDropDown] = useState(false);\r\n  const [openCart, setOpenCart] = useState(false);\r\n  const [openWishlist, setOpenWishlist] = useState(false);\r\n  const [open, setOpen] = useState(false);\r\n  const { allProducts } = useSelector((state) => state.products);\r\n\r\n  const handleSearchChange = (e) => {\r\n    const term = e.target.value;\r\n    setSearchTerm(term);\r\n\r\n    const filteredProducts =\r\n      allProducts &&\r\n      allProducts.filter((product) =>\r\n        product.name.toLowerCase().includes(term.toLowerCase())\r\n      );\r\n    setSearchData(filteredProducts);\r\n  };\r\n\r\n  window.addEventListener(\"scroll\", () => {\r\n    if (window.scrollY > 70) {\r\n      setActive(true);\r\n    } else {\r\n      setActive(false);\r\n    }\r\n  });\r\n\r\n  return (\r\n    // eslint-disable-next-line no-undef\r\n    <>\r\n      <div className={`${styles.section}`}>\r\n        <div className=\"hidden 800px:h-[50px] 800px:my-[20px] 800px:flex items-center justify-between\">\r\n          <div>\r\n            <Link to=\"http://localhost:3000\">\r\n              <img\r\n                width=\"140px\"\r\n                src=\"https://upload.wikimedia.org/wikipedia/commons/e/e1/DotShop_gTLD_logo.svg\"\r\n                alt=\"\"\r\n              />\r\n            </Link>\r\n          </div>\r\n          {/* search box */}\r\n          <div className=\"w-[50%] relative\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Search product\"\r\n              value={searchTerm}\r\n              onChange={handleSearchChange}\r\n              className=\"h-[40px] w-full px-2 border-[#0e7490] border-[2px] rounded-md\"\r\n            />\r\n            <AiOutlineSearch\r\n              size={30}\r\n              className=\"absolute right-2 top-1.5 cursor-pointer\"\r\n            />\r\n            {searchData && searchData.length !== 0 ? (\r\n              <div className=\"absolute min-h-[30vh] bg-slate-50 shadow-sm-2 z-[9] p-4\">\r\n                {searchData &&\r\n                  searchData.map((i, index) => {\r\n                    return (\r\n                      <Link to={`/product/${i._id}`}>\r\n                        <div className=\"w-full flax items-start-py-3\">\r\n                          <img\r\n                            src={`${backend_url}${i.images[0]}`}\r\n                            alt=\"\"\r\n                            className=\"w-[40px] h-[40px] mr-[10px]\"\r\n                          />\r\n                          <h1>{i.name}</h1>\r\n                        </div>\r\n                      </Link>\r\n                    );\r\n                  })}\r\n              </div>\r\n            ) : null}\r\n          </div>\r\n\r\n          <div className={`${styles.button}`}>\r\n            <Link to={`${isSeller ? \"/dashboard\" : \"/shop-create\"}`}>\r\n              <h1 className=\"text-[#fff] flex items-center\">\r\n                {isSeller ? \"Dashboard\" : \"Seller\"}{\" \"}\r\n                <IoIosArrowForward className=\"ml-1\" />\r\n              </h1>\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div\r\n        className={`${\r\n          active === true ? \"shadow-sm fixed top-0 left-0 z-10\" : null\r\n        } transition hidden 800px:flex items-center justify-between w-full bg-[#0e7490] h-[70px]`}\r\n      >\r\n        <div\r\n          className={`${styles.section} relative ${styles.normalFlex} justify-between`}\r\n        >\r\n          {/* Categories */}\r\n          <div onClick={() => setDropDown(!dropDown)}>\r\n            <div className=\"relative h-[60px] mt-[10px] w-[270px] hidden 1000px:block\">\r\n              <BiMenuAltLeft\r\n                site={30}\r\n                className=\"absolute top-3 left-2 w-[30px] h-[30px]\"\r\n              />\r\n              <button\r\n                className={`h-[100%] w-full flex justify-between items-center pl-10 bg-white font-sans text-lg font-[500] select-none rounded-t-md`}\r\n              >\r\n                Categories\r\n              </button>\r\n              <IoIosArrowDown\r\n                size={20}\r\n                className=\"absolute right-2 top-4 cursor-pointer\"\r\n                onClick={() => setDropDown(!dropDown)}\r\n              />\r\n              {dropDown ? (\r\n                <DropDown\r\n                  categoriesData={categoriesData}\r\n                  setDropDown={setDropDown}\r\n                />\r\n              ) : null}\r\n            </div>\r\n          </div>\r\n\r\n          {/* Naivetes */}\r\n          <div className={`${styles.normalFlex}`}>\r\n            <Navbar active={activeHandling} />\r\n          </div>\r\n\r\n          <div className=\"flex\">\r\n            <div className={`${styles.normalFlex}`}>\r\n              <div\r\n                className=\"relative cursor-pointer mr-[15px] \"\r\n                onClick={() => setOpenWishlist(true)}\r\n              >\r\n                <AiOutlineHeart size={30} color=\"rgb(255 255 255 / 83%)\" />\r\n                <span className=\"absolute right-0 top-0 rounded-full bg-[#3bc177] w-4 h-4 top right p-0 text-white font-mono text-[12px] leading-tight text-center\">\r\n                  {wishlist && wishlist.length}\r\n                </span>\r\n              </div>\r\n            </div>\r\n\r\n            <div className={`${styles.normalFlex}`}>\r\n              <div\r\n                className=\"relative cursor-pointer mr-[15px]\"\r\n                onClick={() => setOpenCart(true)}\r\n              >\r\n                <AiOutlineShoppingCart\r\n                  size={30}\r\n                  color=\"rgb(255 255 255 / 83%)\"\r\n                />\r\n                <span className=\"absolute right-0 top-0 rounded-full bg-[#3bc177] w-4 h-4 top right p-0 text-white font-mono text-[14px] leading-tight text-center\">\r\n                  {cart && cart.length}\r\n                </span>\r\n              </div>\r\n            </div>\r\n\r\n            <div className={`${styles.normalFlex}`}>\r\n              <div className=\"relative cursor-pointer mr-[15px]\">\r\n                {isAuthenticated ? (\r\n                  <Link to=\"/profile\">\r\n                    <img\r\n                      src={`${backend_url}${user.avatar}`}\r\n                      className=\"w-[35px] h-[35px] rounded-full\"\r\n                      alt=\"\"\r\n                    />\r\n                  </Link>\r\n                ) : (\r\n                  <Link to=\"/login\">\r\n                    <CgProfile size={30} color=\"rgb(255 255 255 / 83%)\" />\r\n                  </Link>\r\n                )}\r\n              </div>\r\n            </div>\r\n\r\n            {/* Cart popup */}\r\n            {openCart ? <Cart setOpenCart={setOpenCart} /> : null}\r\n\r\n            {/* Wishlist popup */}\r\n            {openWishlist ? (\r\n              <Wishlist setOpenWishlist={setOpenWishlist} />\r\n            ) : null}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* mobile header */}\r\n      <div className=\"w-full h-[60px] bg-[#fff] z-50 top-0 left-0 shadow-sm 800px:hidden\">\r\n        <div className=\"w-full flex items-center justify-between\">\r\n          <div>\r\n            <BiMenu size={40} className=\"ml-4\" onClick={() => setOpen(true)} />\r\n          </div>\r\n          <div>\r\n            <Link to=\"/\">\r\n              <img\r\n                src=\"https://upload.wikimedia.org/wikipedia/commons/e/e1/DotShop_gTLD_logo.svg\"\r\n                alt=\"\"\r\n                className=\"mt-3 cursor-pointer\"\r\n              />\r\n            </Link>\r\n          </div>\r\n          <div>\r\n            <div\r\n              className=\"relative mr-[20px]\"\r\n              onClick={() => setOpenCart(true)}\r\n            >\r\n              <AiOutlineShoppingCart size={30} />\r\n              <span class=\"absolute right-0 top-0 rounded-full bg-[#3bc177] w-4 h-4 top right p-0 m-0 text-white font-mono text-[12px]  leading-tight text-center\">\r\n                {cart && cart.length}\r\n              </span>\r\n            </div>\r\n          </div>\r\n          {/* Cart popup */}\r\n          {openCart ? <Cart setOpenCart={setOpenCart} /> : null}\r\n\r\n          {/* Wishlist popup */}\r\n          {openWishlist ? <Wishlist setOpenWishlist={setOpenWishlist} /> : null}\r\n        </div>\r\n\r\n        {/* header sidebar */}\r\n        {open && (\r\n          <div\r\n            className={`${\r\n              active === true ? \"shadow-sm fixed top-0 left-0 z-10\" : null\r\n            } w-full h-[60px] bg-[#fff] z-50 top-0 left-0 shadow-sm 800px:hidden`}\r\n          >\r\n            <div className=\"fixed w-[70%] bg-[#fff] h-screen top-0 left-0 z-10 overflow-y-scroll\">\r\n              <div className=\"w-full justify-between flex pr-3\">\r\n                <div>\r\n                  <div\r\n                    className=\"relative mr-[15px]\"\r\n                    onClick={() => setOpenWishlist(true) || setOpen(false)}\r\n                  >\r\n                    <AiOutlineHeart size={30} className=\"mt-5 ml-3\" />\r\n                    <span class=\"absolute right-0 top-0 rounded-full bg-[#3bc177] w-4 h-4 top right p-0 m-0 text-white font-mono text-[12px]  leading-tight text-center\">\r\n                      {wishlist && wishlist.length}\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n                <RxCross1\r\n                  size={30}\r\n                  className=\"ml-4 mt-5\"\r\n                  onClick={() => setOpen(false)}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"my-8 w-[92%] m-auto h-[40px relative]\">\r\n                <input\r\n                  type=\"search\"\r\n                  placeholder=\"Search Product...\"\r\n                  className=\"h-[40px] w-full px-2 border-[#0e7490] border-[2px] rounded-md\"\r\n                  value={searchTerm}\r\n                  onChange={handleSearchChange}\r\n                />\r\n\r\n                {searchData && (\r\n                  <div className=\"absolute bg-[#fff] z-10 shadow w-full left-0 p-3\">\r\n                    {searchData.map((i) => {\r\n                      const d = i.name;\r\n\r\n                      const Product_name = d.replace(/\\s+/g, \"-\");\r\n                      return (\r\n                        <Link to={`/product/${Product_name}`}>\r\n                          <div className=\"flex items-center\">\r\n                            <img\r\n                              src={i.image_Url[0]?.url}\r\n                              alt=\"\"\r\n                              className=\"w-[50px] mr-2\"\r\n                            />\r\n                            <h5>{i.name}</h5>\r\n                          </div>\r\n                        </Link>\r\n                      );\r\n                    })}\r\n                  </div>\r\n                )}\r\n              </div>\r\n\r\n              <Navbar active={activeHandling} />\r\n              <div className={`${styles.button} ml-4 !rounded-[4px]`}>\r\n                <Link to=\"/shop-create\">\r\n                  <h1 className=\"text-[#fff] flex items-center\">\r\n                    Seller <IoIosArrowForward className=\"ml-1\" />\r\n                  </h1>\r\n                </Link>\r\n              </div>\r\n              <br />\r\n              <br />\r\n              <br />\r\n\r\n              <div className=\"flex w-full justify-center\">\r\n                {isAuthenticated ? (\r\n                  <div>\r\n                    <Link to=\"/profile\">\r\n                      <img\r\n                        src={`${backend_url}${user.avatar}`}\r\n                        alt=\"\"\r\n                        className=\"w-[60px] h-[60px] rounded-full border-[3px] border-[#0eae88]\"\r\n                      />\r\n                    </Link>\r\n                  </div>\r\n                ) : (\r\n                  <>\r\n                    <Link\r\n                      to=\"/login\"\r\n                      className=\"text-[18px] pr-[10px] text-[#000000b7]\"\r\n                    >\r\n                      Login /\r\n                    </Link>\r\n                    <Link\r\n                      to=\"/sign-up\"\r\n                      className=\"text-[18px] text-[#000000b7]\"\r\n                    >\r\n                      Sign up\r\n                    </Link>\r\n                  </>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","F:\\Projects\\E-shop2\\frontend\\src\\components\\Shop\\ShopProfileData.jsx",["614"],[],"import React, { useEffect, useState } from \"react\";\r\nimport ProductCard from \"../Route/ProductCard/ProductCard\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport styles from \"../../styles/styles\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getAllProductsShop } from \"../../redux/actions/product\";\r\nimport { backend_url } from \"../../server\";\r\nimport Ratings from \"../Products/Ratings\";\r\nimport { getAllEventsShop } from \"../../redux/actions/event\";\r\n\r\nconst ShopProfileData = ({ isOwner }) => {\r\n  const { products } = useSelector((state) => state.products);\r\n  const { events } = useSelector((state) => state.events);\r\n  const { id } = useParams();\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getAllProductsShop(id));\r\n    dispatch(getAllEventsShop(id));\r\n  }, [dispatch]);\r\n\r\n  const [active, setActive] = useState(1);\r\n\r\n  const allReviews = products?.map((product) => product.reviews).flat() || [];\r\n\r\n  return (\r\n    <div className=\"w-full\">\r\n      <div className=\"flex w-full items-center justify-between\">\r\n        <div className=\"w-full flex\">\r\n          <div className=\"flex items-center\" onClick={() => setActive(1)}>\r\n            <h5\r\n              className={`font-[600] text-[20px] ${\r\n                active === 1 ? \"text-red-500\" : \"text-[#333]\"\r\n              } cursor-pointer pr-[20px]`}\r\n            >\r\n              Shop products\r\n            </h5>\r\n          </div>\r\n\r\n          <div className=\"flex items-center\" onClick={() => setActive(2)}>\r\n            <h5\r\n              className={`font-[600] text-[20px] ${\r\n                active === 2 ? \"text-red-500\" : \"text-[#333]\"\r\n              } cursor-pointer pr-[20px]`}\r\n            >\r\n              Running events\r\n            </h5>\r\n          </div>\r\n\r\n          <div className=\"flex items-center\" onClick={() => setActive(3)}>\r\n            <h5\r\n              className={`font-[600] text-[20px] ${\r\n                active === 3 ? \"text-red-500\" : \"text-[#333]\"\r\n              } cursor-pointer pr-[20px]`}\r\n            >\r\n              Shop reviews\r\n            </h5>\r\n          </div>\r\n        </div>\r\n        <div>\r\n          {isOwner && (\r\n            <div>\r\n              <Link to=\"/dashboard\">\r\n                <div className={`${styles.button} !rounded-[4px] h-[42px]`}>\r\n                  <span className=\"text-[#fff]\">Go Dashboard</span>\r\n                </div>\r\n              </Link>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <br />\r\n\r\n      {active === 1 && (\r\n        <div className=\"grid grid-cols-1 gap-[20px] md:grid-cols-2 md:gap-[25px] lg:grid-cols-3 lg:gap-[25px] xl:grid-cols-4 xl:gap-[20px] mb-12 border-0\">\r\n          {products &&\r\n            products.map((i, index) => (\r\n              <ProductCard data={i} key={index} isShop={true} />\r\n            ))}\r\n        </div>\r\n      )}\r\n\r\n      {active === 2 && (\r\n        <div className=\"w-full\">\r\n          <div className=\"grid grid-cols-1 gap-[20px] md:grid-cols-2 md:gap-[25px] lg:grid-cols-3 lg:gap-[25px] xl:grid-cols-4 xl:gap-[20px] mb-12 border-0\">\r\n            {events &&\r\n              events.map((i, index) => (\r\n                <ProductCard\r\n                  data={i}\r\n                  key={index}\r\n                  isShop={true}\r\n                  isEvent={true}\r\n                />\r\n              ))}\r\n          </div>\r\n          {events && events.length === 0 && (\r\n            <h5 className=\"w-full text-center py-5 text-[18px]\">\r\n              No events have for this shop!\r\n            </h5>\r\n          )}\r\n        </div>\r\n      )}\r\n\r\n      {active === 3 && (\r\n        <div className=\"w-full\">\r\n          {allReviews &&\r\n            allReviews.map((item, index) => (\r\n              <div className=\"w-full flex my-4\">\r\n                <img\r\n                  src={`${backend_url}/${item.user.avatar}`}\r\n                  className=\"w-[50px] h-[50px] rounded-full\"\r\n                  alt=\"\"\r\n                />\r\n                <div className=\"pl-2\">\r\n                  <div className=\"flex w-full items-center\">\r\n                    <h1 className=\"font-[600] pr-2\">{item.user.name}</h1>\r\n                    <Ratings rating={item.rating} />\r\n                  </div>\r\n                  <p className=\"font-[400] text-[#000000a7]\">{item?.comment}</p>\r\n                  <p className=\"text-[#000000a7] text-[14px]\">{\"2days ago\"}</p>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          {allReviews && allReviews.length === 0 && (\r\n            <h5 className=\"w-full text-center py-5 text-[18px]\">\r\n              No reviews have for this shop!\r\n            </h5>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ShopProfileData;\r\n","F:\\Projects\\E-shop2\\frontend\\src\\components\\Shop\\AllEvents.jsx",["615"],[],"F:\\Projects\\E-shop2\\frontend\\src\\components\\Signup\\Signup.jsx",[],[],"F:\\Projects\\E-shop2\\frontend\\src\\components\\Shop\\ShopCreate.jsx",[],[],"F:\\Projects\\E-shop2\\frontend\\src\\components\\Shop\\ShopLogin.jsx",["616"],[],"import { React, useEffect, useState } from \"react\";\r\nimport { AiOutlineEye, AiOutlineEyeInvisible } from \"react-icons/ai\";\r\nimport styles from \"../../styles/styles\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { server } from \"../../server\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst ShopLogin = () => {\r\n  const navigate = useNavigate();\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [visible, setVisible] = useState(false);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    await axios\r\n      .post(\r\n        `${server}/shop/login-shop`,\r\n        {\r\n          email,\r\n          password,\r\n        },\r\n        { withCredentials: true }\r\n      )\r\n      .then((res) => {\r\n        toast.success(\"Login Success!\");\r\n        navigate(\"/dashboard\");\r\n        window.location.reload(true); \r\n      })\r\n      .catch((err) => {\r\n        toast.error(err.response.data.message);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-50 flex flex-col justify-center py-12 sm:px-6 lg:px-8\">\r\n      <div className=\"sm:mx-auto sm:w-full sm:max-w-md\">\r\n        <h2 className=\"mt-6 text-center text-3xl font-extrabold text-gray-900\">\r\n          Login to your shop\r\n        </h2>\r\n      </div>\r\n      <div className=\"mt-8 sm:mx-auto sm:w-full sm:max-w-md\">\r\n        <div className=\"bg-white py-8 px-4 shadow sm:rounded-lg sm:px-10\">\r\n          <form className=\"space-y-6\" onSubmit={handleSubmit}>\r\n            <div>\r\n              <label\r\n                htmlFor=\"email\"\r\n                className=\"block text-sm font-medium text-gray-700\"\r\n              >\r\n                Email address\r\n              </label>\r\n              <div className=\"mt-1\">\r\n                <input\r\n                  type=\"email\"\r\n                  name=\"email\"\r\n                  autoComplete=\"email\"\r\n                  required\r\n                  value={email}\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                  className=\"appearance-none block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <div>\r\n              <label\r\n                htmlFor=\"password\"\r\n                className=\"block text-sm font-medium text-gray-700\"\r\n              >\r\n                Password\r\n              </label>\r\n              <div className=\"mt-1 relative\">\r\n                <input\r\n                  type={visible ? \"text\" : \"password\"}\r\n                  name=\"password\"\r\n                  autoComplete=\"current-password\"\r\n                  required\r\n                  value={password}\r\n                  onChange={(e) => setPassword(e.target.value)}\r\n                  className=\"appearance-none block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm\"\r\n                />\r\n                {visible ? (\r\n                  <AiOutlineEye\r\n                    className=\"absolute right-2 top-2 cursor-pointer\"\r\n                    size={25}\r\n                    onClick={() => setVisible(false)}\r\n                  />\r\n                ) : (\r\n                  <AiOutlineEyeInvisible\r\n                    className=\"absolute right-2 top-2 cursor-pointer\"\r\n                    size={25}\r\n                    onClick={() => setVisible(true)}\r\n                  />\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className={`${styles.normalFlex} justify-between`}>\r\n              <div className={`${styles.normalFlex}`}>\r\n                <input\r\n                  type=\"checkbox\"\r\n                  name=\"remember-me\"\r\n                  id=\"remember-me\"\r\n                  className=\"h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded\"\r\n                />\r\n                <label\r\n                  htmlFor=\"remember-me\"\r\n                  className=\"ml-2 block text-sm text-gray-900\"\r\n                >\r\n                  Remember me\r\n                </label>\r\n              </div>\r\n              <div className=\"text-sm\">\r\n                <a\r\n                  href=\".forgot-password\"\r\n                  className=\"font-medium text-blue-600 hover:text-blue-500\"\r\n                >\r\n                  Forgot your password?\r\n                </a>\r\n              </div>\r\n            </div>\r\n            <div>\r\n              <button\r\n                type=\"submit\"\r\n                className=\"group relative w-full h-[40px] flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700\"\r\n              >\r\n                Submit\r\n              </button>\r\n            </div>\r\n            <div className={`${styles.normalFlex} w-full`}>\r\n              <h4>Not have any account?</h4>\r\n              <Link to=\"/shop-create\" className=\"text-blue-600 pl-2\">\r\n                Sign Up\r\n              </Link>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ShopLogin;\r\n","F:\\Projects\\E-shop2\\frontend\\src\\components\\Products\\ProductDetails.jsx",["617","618"],[],"import React, { useEffect, useState } from \"react\";\r\nimport { Link, useNavigate, useParams } from \"react-router-dom\";\r\nimport styles from \"../../styles/styles\";\r\nimport {\r\n  AiFillHeart,\r\n  AiOutlineHeart,\r\n  AiOutlineMessage,\r\n  AiOutlineShoppingCart,\r\n} from \"react-icons/ai\";\r\nimport { backend_url, server } from \"../../server\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getAllProductsShop } from \"../../redux/actions/product\";\r\nimport {\r\n  addToWishlist,\r\n  removeFromWishlist,\r\n} from \"../../redux/actions/wishlist\";\r\nimport { addToCart } from \"../../redux/actions/cart\";\r\nimport { toast } from \"react-toastify\";\r\nimport Ratings from \"./Ratings\";\r\nimport axios from \"axios\";\r\n\r\nconst ProductDetails = ({ data }) => {\r\n  const { products } = useSelector((state) => state.products);\r\n  const { wishlist } = useSelector((state) => state.wishlist);\r\n  const { seller } = useSelector((state) => state.seller);\r\n\r\n  const { cart } = useSelector((state) => state.cart);\r\n  const { user, isAuthenticated } = useSelector((state) => state.user);\r\n\r\n  const [count, setCount] = useState(1);\r\n  const [click, setClick] = useState(false);\r\n  const [select, setSelect] = useState(0);\r\n  const navigate = useNavigate();\r\n\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(getAllProductsShop(data && data?.shop._id));\r\n    if (wishlist && wishlist.find((i) => i._id === data?._id)) {\r\n      setClick(true);\r\n    } else {\r\n      setClick(false);\r\n    }\r\n  }, [data, wishlist]);\r\n\r\n  const incrementCount = () => {\r\n    setCount(count + 1);\r\n  };\r\n\r\n  const decrementCount = () => {\r\n    if (count > 1) {\r\n      setCount(count - 1);\r\n    }\r\n  };\r\n\r\n  const removeFromWishlistHandler = (data) => {\r\n    setClick(!click);\r\n    dispatch(removeFromWishlist(data));\r\n  };\r\n\r\n  const addToWishlistHandler = (data) => {\r\n    setClick(!click);\r\n    dispatch(addToWishlist(data));\r\n  };\r\n\r\n  const addToCartHandler = (id) => {\r\n    const isItemExists = cart && cart.find((i) => i._id === id);\r\n    if (isItemExists) {\r\n      toast.error(\"Item already in cart!\");\r\n    } else {\r\n      if (data.stock < count) {\r\n        toast.error(\"Product stock limited\");\r\n      } else {\r\n        const cartData = { ...data, qty: count };\r\n        dispatch(addToCart(cartData));\r\n        toast.success(\"Item added to cart successfully!\");\r\n      }\r\n    }\r\n  };\r\n\r\n  const totalReviewsLength =\r\n    products &&\r\n    products.reduce((acc, product) => acc + product.reviews.length, 0);\r\n\r\n  const totalRatings =\r\n    products &&\r\n    products.reduce(\r\n      (acc, product) =>\r\n        acc + product.reviews.reduce((sum, review) => sum + review.rating, 0),\r\n      0\r\n    );\r\n\r\n  const avg =  totalRatings / totalReviewsLength || 0;\r\n\r\n  const averageRating = avg.toFixed(2);\r\n\r\n  const handleMessageSubmit = async () => {\r\n    if (isAuthenticated) {\r\n      const groupTitle = data._id + user._id;\r\n      const userId = user._id;\r\n      const sellerId = data.shop._id;\r\n      await axios\r\n        .post(`${server}/conversation/create-new-conversation`, {\r\n          groupTitle,\r\n          userId,\r\n          sellerId,\r\n        })\r\n        .then((res) => {\r\n          navigate(`/inbox?${res.data.conversation._id}`);\r\n        })\r\n        .catch((error) => {\r\n          toast.error(error.response.data.message);\r\n        });\r\n    } else {\r\n      toast.error(\"Please login to create a conversation\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"bg-white\">\r\n      {data ? (\r\n        <div className={`${styles.section} w-[90%] 800px:w-[80%]`}>\r\n          <div className=\"w-full py-5 \">\r\n            <div className=\"block w-full 800px:flex\">\r\n              <div className=\"w-full mr-16 800px:w-[50%]\">\r\n                <img\r\n                  src={`${backend_url}${data && data.images[select]}`}\r\n                  alt=\"\"\r\n                  className=\"w-[80%]\"\r\n                />\r\n                <div className=\"w-full flex\">\r\n                  {data &&\r\n                    data.images.map((i, index) => (\r\n                      <div\r\n                        className={`${\r\n                          select === 0 ? \"border\" : \"null\"\r\n                        } cursor-pointer`}\r\n                      >\r\n                        <img\r\n                          src={`${backend_url}${i}`}\r\n                          alt=\"\"\r\n                          className=\"h-[200px] overflow-hidden mr-3 mt-3\"\r\n                          onClick={() => setSelect(index)}\r\n                        />\r\n                      </div>\r\n                    ))}\r\n                  <div\r\n                    className={`${\r\n                      select === 1 ? \"border\" : \"null\"\r\n                    } cursor-pointer`}\r\n                  ></div>\r\n                </div>\r\n              </div>\r\n              <div className=\"w-full 800px:w-[50%] pt-5\">\r\n                <h1 className={`${styles.productTitle}`}>{data.name}</h1>\r\n                <p>{data.description}</p>\r\n                <div className=\"flex pt-3\">\r\n                  <h4 className={`${styles.productDiscountPrice}`}>\r\n                    {data.discountPrice}$\r\n                  </h4>\r\n                  <h3 className={`${styles.price}`}>\r\n                    {data.originalPrice ? data.originalPrice + \"$\" : null}\r\n                  </h3>\r\n                </div>\r\n\r\n                <div className=\"flex items-center mt-12 justify-between pr-3\">\r\n                  <div>\r\n                    <button\r\n                      className=\"bg-gradient-to-r from-teal-400 to-teal-500 text-white font-bold rounded-l px-4 py-2 shadow-lg hover:opacity-75 transition duration-300 ease-in-out\"\r\n                      onClick={decrementCount}\r\n                    >\r\n                      -\r\n                    </button>\r\n                    <span className=\"bg-gray-200 text-gray-800 font-medium px-4 py-[10px]\">\r\n                      {count}\r\n                    </span>\r\n                    <button\r\n                      className=\"bg-gradient-to-r from-teal-400 to-teal-500 text-white font-bold rounded-r px-4 py-2 shadow-lg hover:opacity-75 transition duration-300 ease-in-out\"\r\n                      onClick={incrementCount}\r\n                    >\r\n                      +\r\n                    </button>\r\n                  </div>\r\n                  <div>\r\n                    {click ? (\r\n                      <AiFillHeart\r\n                        size={30}\r\n                        className=\"cursor_pointer\"\r\n                        onClick={() => removeFromWishlistHandler(data)}\r\n                        color={click ? \"red\" : \"#333\"}\r\n                        title=\"Remove from wishlist\"\r\n                      />\r\n                    ) : (\r\n                      <AiOutlineHeart\r\n                        size={30}\r\n                        className=\"cursor_pointer\"\r\n                        onClick={() => addToWishlistHandler(data)}\r\n                        color={click ? \"red\" : \"#333\"}\r\n                        title=\"Add from wishlist\"\r\n                      />\r\n                    )}\r\n                  </div>\r\n                </div>\r\n                <div\r\n                  className={`${styles.button} !mt-6 !rounded !h-11 flex items-center`}\r\n                  onClick={() => addToCartHandler(data._id)}\r\n                >\r\n                  <span className=\"text-white flex items-center\">\r\n                    Add to cart{\" \"}\r\n                    <AiOutlineShoppingCart\r\n                      className=\"ml-1\"\r\n                      onClick={() => addToCartHandler(data._id)}\r\n                    />\r\n                  </span>\r\n                </div>\r\n                <div className=\"flex items-center pt-8\">\r\n                  <Link to={`/shop/preview/${data?.shop._id}`}>\r\n                    <img\r\n                      src={`${backend_url}${seller.avatar}`}\r\n                      alt=\"\"\r\n                      className=\"w-[50px] h-[50px] rounded-full mr-2\"\r\n                    />\r\n                  </Link>\r\n                  <div className=\"pr-8\">\r\n                    <Link to={`/shop/preview/${data?.shop._id}`}>\r\n                      <h3 className={`${styles.shop_name} pb-1 pt-1`}>\r\n                        {data.shop.name}\r\n                      </h3>\r\n                    </Link>\r\n                    <h5 className=\"pb-3 text-[15px]\">\r\n                      ({averageRating}/5) Ratings\r\n                    </h5>\r\n                  </div>\r\n                  <div\r\n                    className={`${styles.button} bg-[#6443d1] mt-4 !rounded !h-11`}\r\n                    onClick={handleMessageSubmit}\r\n                  >\r\n                    <span className=\"text-white flex items-center\">\r\n                      Send Message <AiOutlineMessage className=\"ml-1\" />\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <ProductDetailsInfo\r\n            data={data}\r\n            products={products}\r\n            totalReviewsLength={totalReviewsLength}\r\n            averageRating={averageRating}\r\n          />\r\n          <br />\r\n          <br />\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst ProductDetailsInfo = ({\r\n  data,\r\n  products,\r\n  totalReviewsLength,\r\n  averageRating,\r\n}) => {\r\n  const [active, setActive] = useState(1);\r\n  const { seller } = useSelector((state) => state.seller);\r\n\r\n  return (\r\n    <div className=\"bg-[#f5f6fb] px-3 800px:px-10 py-2 rounded\">\r\n      <div className=\"w-full flex justify-between border-b pt-10 pb-2\">\r\n        <div className=\"relative\">\r\n          <h5\r\n            className={\r\n              \"text-[#000] text-[18px] px-1 leading-5 font-[600] cursor-pointer 800px:text-[20px]\"\r\n            }\r\n            onClick={() => setActive(1)}\r\n          >\r\n            Product Details\r\n          </h5>\r\n          {active === 1 ? (\r\n            <div className={`${styles.active_indicator}`} />\r\n          ) : null}\r\n        </div>\r\n        <div className=\"relative\">\r\n          <h5\r\n            className={\r\n              \"text-[#000] text-[18px] px-1 leading-5 font-[600] cursor-pointer 800px:text-[20px]\"\r\n            }\r\n            onClick={() => setActive(2)}\r\n          >\r\n            Product Reviews\r\n          </h5>\r\n          {active === 2 ? (\r\n            <div className={`${styles.active_indicator}`} />\r\n          ) : null}\r\n        </div>\r\n        <div className=\"relative\">\r\n          <h5\r\n            className={\r\n              \"text-[#000] text-[18px] px-1 leading-5 font-[600] cursor-pointer 800px:text-[20px]\"\r\n            }\r\n            onClick={() => setActive(3)}\r\n          >\r\n            Seller Information\r\n          </h5>\r\n          {active === 3 ? (\r\n            <div className={`${styles.active_indicator}`} />\r\n          ) : null}\r\n        </div>\r\n      </div>\r\n      {active === 1 ? (\r\n        <>\r\n          <p className=\"py-2 text-[18px] leading-8 pb-10 whitespace-pre-line\">\r\n            {data.description}\r\n          </p>\r\n        </>\r\n      ) : null}\r\n\r\n      {active === 2 ? (\r\n        <div className=\"w-full min-h-[40vh] flex flex-col items-center py-3 overflow-scroll\">\r\n          {data &&\r\n            data.reviews.map((item, index) => (\r\n              <div className=\"w-full flex my-2\">\r\n                <img\r\n                  src={`${backend_url}/${item.user.avatar}`}\r\n                  alt=\"\"\r\n                  className=\"w-[50px] h-[50px] rounded-full\"\r\n                />\r\n                <div className=\"pl-2\">\r\n                  <div className=\"w-full flex items-center\">\r\n                    <h1 className=\"font-[500] mr-3\">{item.user.name}</h1>\r\n                    <Ratings rating={data?.ratings} />\r\n                  </div>\r\n                  <p>{item.comment}</p>\r\n                </div>\r\n              </div>\r\n            ))}\r\n\r\n          <div className=\"w-full flex justify-center\">\r\n            {data && data.reviews.length === 0 && (\r\n              <h5>No reviews have for this product</h5>\r\n            )}\r\n          </div>\r\n        </div>\r\n      ) : null}\r\n\r\n      {active === 3 && (\r\n        <div className=\"w-full block 800px:flex p-5\">\r\n          <div className=\"w-full 800px:w-[50%]\">\r\n            <Link to={`/shop/preview/${data.shop_id}`}>\r\n              <div className=\"flex items-center\">\r\n                <img\r\n                  src={`${backend_url}${seller.avatar}`}\r\n                  className=\"w-[50px] h-[50px] rounded-full\"\r\n                  alt=\"\"\r\n                />\r\n                <div className=\"pl-3\">\r\n                  <h3 className={`${styles.shop_name}`}>{data.shop.name}</h3>\r\n                  <h5 className=\"pb-3 text-[15px]\">\r\n                    ({averageRating}/5) Ratings\r\n                  </h5>\r\n                </div>\r\n              </div>\r\n            </Link>\r\n            <p className=\"pt-2\">{data.shop.description}</p>\r\n          </div>\r\n          <div className=\"w-full 800px{w-[50%] mt-5 800px:mt-0 800px:flex flex-col items-end\">\r\n            <div className=\"text-left\">\r\n              <h5 className=\"font-[600]\">\r\n                Joined on:{\" \"}\r\n                <span className=\"font-[500]\">\r\n                  {data.shop?.createdAt?.slice(0, 10)}\r\n                </span>\r\n              </h5>\r\n              <h5 className=\"font-[600] pt-3\">\r\n                Total products:{\" \"}\r\n                <span className=\"font-[500]\">\r\n                  {products && products.length}\r\n                </span>\r\n              </h5>\r\n              <h5 className=\"font-[600] pt-3\">\r\n                Total reviews:{\" \"}\r\n                <span className=\"font-[500]\">{totalReviewsLength}</span>\r\n              </h5>\r\n              <Link to=\"/\">\r\n                <div\r\n                  className={`${styles.button} !rounded-[4px] !h-[39.5px] mt-3`}\r\n                >\r\n                  <h4 className=\"text-white\">Visit Shop</h4>\r\n                </div>\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductDetails;\r\n","F:\\Projects\\E-shop2\\frontend\\src\\components\\Products\\SuggestedProduct.jsx",["619","620"],[],"import React, { useEffect, useState } from 'react'\r\nimport { productData } from '../../static/data';\r\nimport styles from '../../styles/styles';\r\nimport ProductCard from '../Route/ProductCard/ProductCard';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst SuggestedProduct = ({ data }) => {\r\n    const { allProducts } = useSelector((state) => state.products);\r\n    const [productData, setProductData] = useState();\r\n\r\n    useEffect(() => {\r\n        const d = allProducts && allProducts.filter((i) => i.category === data.category);\r\n        setProductData(d);\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n          {data ? (\r\n            <div className={`p-4 ${styles.section}`}>\r\n              <h2\r\n                className={`${styles.heading} text-[25px] font-[500] border-b mb-5`}\r\n              >\r\n                Related Product\r\n              </h2>\r\n              <div className=\"grid grid-cols-1 gap-[20px] md:grid-cols-2 md:gap-[25px] lg:grid-cols-4 lg:gap-[25px] xl:grid-cols-5 xl:gap-[30px] mb-12\">\r\n                 {\r\n                    productData && productData.map((i,index) => (\r\n                        <ProductCard data={i} key={index} />\r\n                    ))\r\n                 }\r\n          </div>\r\n            </div>\r\n          ) : null}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SuggestedProduct","F:\\Projects\\E-shop2\\frontend\\src\\components\\UserOrderDetails.jsx",[],[],"F:\\Projects\\E-shop2\\frontend\\src\\components\\Route\\BestDeals\\BestDeals.jsx",[],[],"F:\\Projects\\E-shop2\\frontend\\src\\components\\Route\\Categories\\Categories.jsx",[],[],"F:\\Projects\\E-shop2\\frontend\\src\\components\\Route\\Event\\EventCard.jsx",[],[],"F:\\Projects\\E-shop2\\frontend\\src\\components\\Route\\Event\\Event.jsx",["621"],[],"import React, { useEffect } from 'react'\r\nimport styles from '../../../styles/styles'\r\nimport EventCard from \"./EventCard\"\r\nimport { useSelector } from 'react-redux'\r\n\r\nconst Event = () => {\r\n  const { allEvents, isLoading } = useSelector((state) => state.events);\r\n\r\n  return (\r\n    <div>\r\n      {\r\n        !isLoading && (\r\n          <div className={`${styles.section}`}>\r\n          <div className={`${styles.heading}`}>\r\n            <h1>Popular Events</h1>\r\n          </div>\r\n\r\n          <div className='w-full grid'>\r\n            {\r\n              allEvents.length !== 0 && (\r\n                <EventCard data={allEvents && allEvents[0]} />\r\n              )\r\n            }\r\n            <h4> {\r\n                allEvents?.length === 0 && (\r\n                  \"No Events have\"\r\n                )\r\n              }\r\n\r\n            </h4>\r\n          </div>\r\n      </div>\r\n        )\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Event","F:\\Projects\\E-shop2\\frontend\\src\\components\\Checkout\\CheckoutSteps.jsx",[],[],"F:\\Projects\\E-shop2\\frontend\\src\\components\\Profile\\ProfileSidebar.jsx",[],[],"F:\\Projects\\E-shop2\\frontend\\src\\components\\Profile\\ProfileContent.jsx",["622","623","624","625","626","627","628"],["629"],"import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { backend_url, server } from \"../../server\";\r\nimport { DataGrid } from \"@material-ui/data-grid\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  AiOutlineArrowRight,\r\n  AiOutlineCamera,\r\n  AiOutlineDelete,\r\n} from \"react-icons/ai\";\r\nimport styles from \"../../styles/styles\";\r\nimport { MdTrackChanges } from \"react-icons/md\";\r\nimport { RxCross1 } from \"react-icons/rx\";\r\nimport {\r\n  deleteUserAddress,\r\n  loadUser,\r\n  updateUserAddress,\r\n  updateUserInformation,\r\n} from \"../../redux/actions/user\";\r\nimport { Country, State } from \"country-state-city\";\r\nimport { toast } from \"react-toastify\";\r\nimport axios from \"axios\";\r\nimport { getAllOrdersOfUser } from \"../../redux/actions/order\";\r\n\r\nconst ProfileContent = ({ active }) => {\r\n  const { user, error, successMessage } = useSelector((state) => state.user);\r\n  const [name, setName] = useState(user && user.name);\r\n  const [email, setEmail] = useState(user && user.email);\r\n  const [phoneNumber, setPhoneNumber] = useState(user && user.phoneNumber);\r\n  const [password, setPassword] = useState(\"\");\r\n  const [avatar, setAvatar] = useState(null);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (error) {\r\n      toast.error(error);\r\n      dispatch({ type: \"clearErrors\" });\r\n    }\r\n    if (successMessage) {\r\n      toast.success(successMessage);\r\n      dispatch({ type: \"clearMessages\" });\r\n    }\r\n  }, [error, successMessage]);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    dispatch(updateUserInformation(name, email, phoneNumber, password));\r\n  };\r\n\r\n  const handleImage = async (e) => {\r\n    const file = e.target.files[0];\r\n    setAvatar(file);\r\n\r\n    const formData = new FormData();\r\n\r\n    formData.append(\"image\", e.target.files[0]);\r\n\r\n    await axios\r\n      .put(`${server}/user/update-avatar`, formData, {\r\n        headers: {\r\n          \"Content-Type\": \"multipart/form-data\",\r\n        },\r\n        withCredentials: true,\r\n      })\r\n      .then((response) => {\r\n        dispatch(loadUser());\r\n        toast.success(\"Avatar updated successfully\");\r\n      })\r\n      .catch((error) => {\r\n        toast.error(error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"w-full\">\r\n      {/* profile */}\r\n      {active === 1 && (\r\n        <>\r\n          <div className=\"flex justify-center w-full\">\r\n            <div className=\"relative\">\r\n              <img\r\n                src={`${backend_url}${user?.avatar}`}\r\n                className=\"w-[150px] h-[150px] rounded-full object-cover border-[3px] border-[#3ad132]\"\r\n                alt=\"\"\r\n              />\r\n              <div className=\"w-[30px] h-[30px] bg-[#E3E9EE] rounded-full flex items-center justify-center cursor-pointer absolute bottom-[5px] right-[5px]\">\r\n                <input\r\n                  type=\"file\"\r\n                  id=\"image\"\r\n                  className=\"hidden\"\r\n                  onChange={handleImage}\r\n                />\r\n                <label htmlFor=\"image\">\r\n                  <AiOutlineCamera />\r\n                </label>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <br />\r\n          <br />\r\n          <div className=\"w-full px-5\">\r\n            <form onSubmit={handleSubmit} aria-required={true}>\r\n              <div className=\"w-full 800px:flex block pb-3\">\r\n                <div className=\" w-[100%] 800px:w-[50%]\">\r\n                  <label className=\"block pb-2\">Full Name</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className={`${styles.input} !w-[95%] mb-4 800px:mb-0`}\r\n                    required\r\n                    value={name}\r\n                    onChange={(e) => setName(e.target.value)}\r\n                  />\r\n                </div>\r\n                <div className=\" w-[100%] 800px:w-[50%]\">\r\n                  <label className=\"block pb-2\">Email Address</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className={`${styles.input} !w-[95%] mb-1 800px:mb-0`}\r\n                    required\r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"w-full 800px:flex block pb-3\">\r\n                <div className=\" w-[100%] 800px:w-[50%]\">\r\n                  <label className=\"block pb-2\">Phone Number</label>\r\n                  <input\r\n                    type=\"number\"\r\n                    className={`${styles.input} !w-[95%] mb-4 800px:mb-0`}\r\n                    required\r\n                    value={phoneNumber}\r\n                    onChange={(e) => setPhoneNumber(e.target.value)}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\" w-[100%] 800px:w-[50%]\">\r\n                  <label className=\"block pb-2\">Enter your password</label>\r\n                  <input\r\n                    type=\"password\"\r\n                    className={`${styles.input} !w-[95%] mb-4 800px:mb-0`}\r\n                    required\r\n                    value={password}\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <input\r\n                className={`w-[250px] h-[40px] border border-[#3a24db] text-center text-[#3a24db] rounded-[3px] mt-8 cursor-pointer`}\r\n                required\r\n                value=\"Update\"\r\n                type=\"submit\"\r\n              />\r\n            </form>\r\n          </div>\r\n        </>\r\n      )}\r\n\r\n      {/* order  */}\r\n      {active === 2 && (\r\n        <div>\r\n          <AllOrders />\r\n        </div>\r\n      )}\r\n\r\n      {/* refund */}\r\n      {active === 3 && (\r\n        <div>\r\n          <AllRefundOrders />\r\n        </div>\r\n      )}\r\n\r\n      {/* Track order */}\r\n      {active === 5 && (\r\n        <div>\r\n          <TrackOrder />\r\n        </div>\r\n      )}\r\n\r\n      {/* Change password */}\r\n      {active === 6 && (\r\n        <div>\r\n          <ChangePassword />\r\n        </div>\r\n      )}\r\n\r\n      {/* User Address */}\r\n      {active === 7 && (\r\n        <div>\r\n          <Address />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst AllOrders = () => {\r\n  const { user } = useSelector((state) => state.user);\r\n  const { orders } = useSelector((state) => state.order);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getAllOrdersOfUser(user._id));\r\n  }, []);\r\n\r\n  const columns = [\r\n    { field: \"id\", headerName: \"Order ID\", minWidth: 150, flex: 0.7 },\r\n\r\n    {\r\n      field: \"status\",\r\n      headerName: \"Status\",\r\n      minWidth: 130,\r\n      flex: 0.7,\r\n      cellClassName: (params) => {\r\n        return params.getValue(params.id, \"status\") === \"Delivered\"\r\n          ? \"greenColor\"\r\n          : \"redColor\";\r\n      },\r\n    },\r\n    {\r\n      field: \"itemsQty\",\r\n      headerName: \"Items Qty\",\r\n      type: \"number\",\r\n      minWidth: 130,\r\n      flex: 0.7,\r\n    },\r\n\r\n    {\r\n      field: \"total\",\r\n      headerName: \"Total\",\r\n      type: \"number\",\r\n      minWidth: 130,\r\n      flex: 0.8,\r\n    },\r\n\r\n    {\r\n      field: \" \",\r\n      flex: 1,\r\n      minWidth: 150,\r\n      headerName: \"\",\r\n      type: \"number\",\r\n      sortable: false,\r\n      renderCell: (params) => {\r\n        return (\r\n          <>\r\n            <Link to={`/user/order/${params.id}`}>\r\n              <Button>\r\n                <AiOutlineArrowRight size={20} />\r\n              </Button>\r\n            </Link>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  const row = [];\r\n\r\n  orders &&\r\n    orders.forEach((item) => {\r\n      row.push({\r\n        id: item._id,\r\n        itemsQty: item.cart.length,\r\n        total: \"US$ \" + item.totalPrice,\r\n        status: item.status,\r\n      });\r\n    });\r\n\r\n  return (\r\n    <div className=\"pl-8 pt-1\">\r\n      <DataGrid\r\n        rows={row}\r\n        columns={columns}\r\n        pageSize={10}\r\n        disableSelectionOnClick\r\n        autoHeight\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst AllRefundOrders = () => {\r\n  const { orders } = useSelector((state) => state.order);\r\n  const { user } = useSelector((state) => state.user);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getAllOrdersOfUser(user._id));\r\n  }, [])\r\n\r\n  const eligibleOrders = orders && orders.filter((item) => item.status === \"Processing refund\");\r\n\r\n  const columns = [\r\n    { field: \"id\", headerName: \"Order ID\", minWidth: 150, flex: 0.7 },\r\n\r\n    {\r\n      field: \"status\",\r\n      headerName: \"Status\",\r\n      minWidth: 130,\r\n      flex: 0.7,\r\n      cellClassName: (params) => {\r\n        return params.getValue(params.id, \"status\") === \"Delivered\"\r\n          ? \"greenColor\"\r\n          : \"redColor\";\r\n      },\r\n    },\r\n    {\r\n      field: \"itemsQty\",\r\n      headerName: \"Items Qty\",\r\n      type: \"number\",\r\n      minWidth: 130,\r\n      flex: 0.7,\r\n    },\r\n\r\n    {\r\n      field: \"total\",\r\n      headerName: \"Total\",\r\n      type: \"number\",\r\n      minWidth: 130,\r\n      flex: 0.8,\r\n    },\r\n\r\n    {\r\n      field: \" \",\r\n      flex: 1,\r\n      minWidth: 150,\r\n      headerName: \"\",\r\n      type: \"number\",\r\n      sortable: false,\r\n      renderCell: (params) => {\r\n        return (\r\n          <>\r\n            <Link to={`/user/order/${params.id}`}>\r\n              <Button>\r\n                <AiOutlineArrowRight size={20} />\r\n              </Button>\r\n            </Link>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  const row = [];\r\n\r\n  eligibleOrders &&\r\n  eligibleOrders.forEach((item) => {\r\n      row.push({\r\n        id: item._id,\r\n        itemsQty: item.cart.length,\r\n        total: item.totalPrice + \"$\",\r\n        status: item.status,\r\n      });\r\n    });\r\n\r\n  return (\r\n    <div className=\"pl-8 pt-1\">\r\n      <DataGrid\r\n        rows={row}\r\n        columns={columns}\r\n        pageSize={10}\r\n        disableSelectionOnClick\r\n        autoHeight\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst TrackOrder = () => {\r\n  const { orders } = useSelector((state) => state.order);\r\n  const { user } = useSelector((state) => state.user);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getAllOrdersOfUser(user._id));\r\n  }, [])\r\n\r\n  const columns = [\r\n    { field: \"id\", headerName: \"Order ID\", minWidth: 150, flex: 0.7 },\r\n\r\n    {\r\n      field: \"status\",\r\n      headerName: \"Status\",\r\n      minWidth: 130,\r\n      flex: 0.7,\r\n      cellClassName: (params) => {\r\n        return params.getValue(params.id, \"status\") === \"Delivered\"\r\n          ? \"greenColor\"\r\n          : \"redColor\";\r\n      },\r\n    },\r\n    {\r\n      field: \"itemsQty\",\r\n      headerName: \"Items Qty\",\r\n      type: \"number\",\r\n      minWidth: 130,\r\n      flex: 0.7,\r\n    },\r\n\r\n    {\r\n      field: \"total\",\r\n      headerName: \"Total\",\r\n      type: \"number\",\r\n      minWidth: 130,\r\n      flex: 0.8,\r\n    },\r\n\r\n    {\r\n      field: \" \",\r\n      flex: 1,\r\n      minWidth: 150,\r\n      headerName: \"\",\r\n      type: \"number\",\r\n      sortable: false,\r\n      renderCell: (params) => {\r\n        return (\r\n          <>\r\n            <Link to={`/user/track/order/${params.id}`}>\r\n              <Button>\r\n                <MdTrackChanges size={20} />\r\n              </Button>\r\n            </Link>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  const row = [];\r\n\r\n  orders &&\r\n    orders.forEach((item) => {\r\n      row.push({\r\n        id: item._id,\r\n        itemsQty: item.cart.length,\r\n        total: item.totalPrice + \"$\",\r\n        status: item.status,\r\n      });\r\n    });\r\n\r\n  return (\r\n    <div className=\"pl-8 pt-1\">\r\n      <DataGrid\r\n        rows={row}\r\n        columns={columns}\r\n        pageSize={10}\r\n        disableSelectionOnClick\r\n        autoHeight\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst ChangePassword = () => {\r\n  const [oldPassword, setOldPassword] = useState(\"\");\r\n  const [newPassword, setNewPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n\r\n  const passwordChangeHandler = async (e) => {\r\n    e.preventDefault();\r\n\r\n    await axios.put(\r\n      `${server}/user/update-user-password`,\r\n      { oldPassword,\r\n      newPassword,\r\n      confirmPassword },\r\n      { withCredentials: true }\r\n    ).then((res) => {\r\n      toast.success(res.data.success);\r\n      setOldPassword(\"\");\r\n      setNewPassword(\"\");\r\n      setConfirmPassword(\"\");\r\n    }).catch((error) => {\r\n      toast.error(error.response.message);\r\n    })\r\n  };\r\n\r\n  return (\r\n    <div className=\"w-full px-5\">\r\n      <h1 className=\"block text-[25px] text-center font-[600] text-[#000000ba] pb-2\">\r\n        Change password\r\n      </h1>\r\n      <div className=\"w-full \">\r\n        {/* eslint-disable-next-line jsx-a11y/role-supports-aria-props */}\r\n        <form\r\n          aria-required\r\n          onSubmit={passwordChangeHandler}\r\n          className=\"flex flex-col items-center\"\r\n        >\r\n          <div className=\" w-[100%] 800px:w-[50%] mt-5\">\r\n            <label className=\"block pb-2\">Enter your old password</label>\r\n            <input\r\n              type=\"password\"\r\n              className={`${styles.input} !w-[95%] mb-4 800px:mb-0`}\r\n              required\r\n              value={oldPassword}\r\n              onChange={(e) => setOldPassword(e.target.value)}\r\n            />\r\n          </div>\r\n          <div className=\" w-[100%] 800px:w-[50%] mt-2\">\r\n            <label className=\"block pb-2\">Enter your new password</label>\r\n            <input\r\n              type=\"password\"\r\n              className={`${styles.input} !w-[95%] mb-4 800px:mb-0`}\r\n              required\r\n              value={newPassword}\r\n              onChange={(e) => setNewPassword(e.target.value)}\r\n            />\r\n          </div>\r\n          <div className=\" w-[100%] 800px:w-[50%] mt-2\">\r\n            <label className=\"block pb-2\">Enter your confirm password</label>\r\n            <input\r\n              type=\"password\"\r\n              className={`${styles.input} !w-[95%] mb-4 800px:mb-0`}\r\n              required\r\n              value={confirmPassword}\r\n              onChange={(e) => setConfirmPassword(e.target.value)}\r\n            />\r\n            <input\r\n              className={`w-[95%] h-[40px] border border-[#3a24db] text-center text-[#3a24db] rounded-[3px] mt-8 cursor-pointer`}\r\n              required\r\n              value=\"Update\"\r\n              type=\"submit\"\r\n            />\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Address = () => {\r\n  const [open, setOpen] = useState(false);\r\n  const [country, setCountry] = useState(\"\");\r\n  const [city, setCity] = useState(\"\");\r\n  // const [zipCode, setZipCode] = useState();\r\n  const [address1, setAddress1] = useState(\"\");\r\n  const [address2, setAddress2] = useState(\"\");\r\n  const [addressType, setAddressType] = useState(\"\");\r\n  const { user } = useSelector((state) => state.user);\r\n  const dispatch = useDispatch();\r\n\r\n  const addressTypeData = [\r\n    {\r\n      name: \"Default\",\r\n    },\r\n    {\r\n      name: \"Home\",\r\n    },\r\n    {\r\n      name: \"Office\",\r\n    },\r\n  ];\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (addressType === \"\" || country === \"\" || city === \"\") {\r\n      toast.error(\"Please fill all the fields!\");\r\n    } else {\r\n      dispatch(\r\n        updateUserAddress(\r\n          country,\r\n          city,\r\n          address1,\r\n          address2,\r\n          // zipCode,\r\n          addressType\r\n        )\r\n      );\r\n      setOpen(false);\r\n      setCountry(\"\");\r\n      setCity(\"\");\r\n      setAddress1(\"\");\r\n      setAddress2(\"\");\r\n      // setZipCode(null);\r\n      setAddressType(\"\");\r\n    }\r\n  };\r\n\r\n  const handleDelete = (item) => {\r\n    const id = item._id;\r\n    dispatch(deleteUserAddress(id));\r\n  };\r\n\r\n  return (\r\n    <div className=\"w-full px-5\">\r\n      {open && (\r\n        <div className=\"fixed w-full h-screen bg-[#0000004b] top-0 left-0 flex items-center justify-center \">\r\n          <div className=\"w-[35%] h-[80vh] bg-white rounded shadow relative overflow-y-scroll\">\r\n            <div className=\"w-full flex justify-end p-3\">\r\n              <RxCross1\r\n                size={30}\r\n                className=\"cursor-pointer\"\r\n                onClick={() => setOpen(false)}\r\n              />\r\n            </div>\r\n            <h1 className=\"text-center text-[25px] font-Poppins\">\r\n              Add New Address\r\n            </h1>\r\n            <div className=\"w-full\">\r\n              <form aria-required onSubmit={handleSubmit} className=\"w-full\">\r\n                <div className=\"w-full block p-4\">\r\n                  <div className=\"w-full pb-2\">\r\n                    <label className=\"block pb-2\">Country</label>\r\n                    <select\r\n                      name=\"\"\r\n                      id=\"\"\r\n                      value={country}\r\n                      onChange={(e) => setCountry(e.target.value)}\r\n                      className=\"w-[95%] border h-[40px] rounded-[5px]\"\r\n                    >\r\n                      <option value=\"\" className=\"block border pb-2\">\r\n                        choose your country\r\n                      </option>\r\n                      {Country &&\r\n                        Country.getAllCountries().map((item) => (\r\n                          <option\r\n                            className=\"block pb-2\"\r\n                            key={item.isoCode}\r\n                            value={item.isoCode}\r\n                          >\r\n                            {item.name}\r\n                          </option>\r\n                        ))}\r\n                    </select>\r\n                  </div>\r\n\r\n                  <div className=\"w-full pb-2\">\r\n                    <label className=\"block pb-2\">Choose your City</label>\r\n                    <select\r\n                      name=\"\"\r\n                      id=\"\"\r\n                      value={city}\r\n                      onChange={(e) => setCity(e.target.value)}\r\n                      className=\"w-[95%] border h-[40px] rounded-[5px]\"\r\n                    >\r\n                      <option value=\"\" className=\"block border pb-2\">\r\n                        choose your city\r\n                      </option>\r\n                      {State &&\r\n                        State.getStatesOfCountry(country).map((item) => (\r\n                          <option\r\n                            className=\"block pb-2\"\r\n                            key={item.isoCode}\r\n                            value={item.isoCode}\r\n                          >\r\n                            {item.name}\r\n                          </option>\r\n                        ))}\r\n                    </select>\r\n                  </div>\r\n\r\n                  <div className=\"w-full pb-2\">\r\n                    <label className=\"block pb-2\">Address 1</label>\r\n                    <input\r\n                      type=\"address\"\r\n                      className={`${styles.input}`}\r\n                      required\r\n                      value={address1}\r\n                      onChange={(e) => setAddress1(e.target.value)}\r\n                    />\r\n                  </div>\r\n                  <div className=\"w-full pb-2\">\r\n                    <label className=\"block pb-2\">Address 2</label>\r\n                    <input\r\n                      type=\"address\"\r\n                      className={`${styles.input}`}\r\n                      required\r\n                      value={address2}\r\n                      onChange={(e) => setAddress2(e.target.value)}\r\n                    />\r\n                  </div>\r\n\r\n                  {/* <div className=\"w-full pb-2\">\r\n                    <label className=\"block pb-2\">Zip Code</label>\r\n                    <input\r\n                      type=\"number\"\r\n                      className={`${styles.input}`}\r\n                      required\r\n                      // value={zipCode}\r\n                      // onChange={(e) => setZipCode(e.target.value)}\r\n                    />\r\n                  </div> */}\r\n\r\n                  <div className=\"w-full pb-2\">\r\n                    <label className=\"block pb-2\">Address Type</label>\r\n                    <select\r\n                      name=\"\"\r\n                      id=\"\"\r\n                      value={addressType}\r\n                      onChange={(e) => setAddressType(e.target.value)}\r\n                      className=\"w-[95%] border h-[40px] rounded-[5px]\"\r\n                    >\r\n                      <option value=\"\" className=\"block border pb-2\">\r\n                        Choose your Address Type\r\n                      </option>\r\n                      {addressTypeData &&\r\n                        addressTypeData.map((item) => (\r\n                          <option\r\n                            className=\"block pb-2\"\r\n                            key={item.name}\r\n                            value={item.name}\r\n                          >\r\n                            {item.name}\r\n                          </option>\r\n                        ))}\r\n                    </select>\r\n                  </div>\r\n\r\n                  <div className=\" w-full pb-2\">\r\n                    <input\r\n                      type=\"submit\"\r\n                      className={`${styles.input} mt-5 cursor-pointer`}\r\n                      required\r\n                      readOnly\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n      <div className=\"flex w-full items-center justify-between\">\r\n        <h1 className=\"text-[25px] font-[600] text-[#000000ba] pb-2\">\r\n          My Addresses\r\n        </h1>\r\n        <div\r\n          className={`${styles.button} !rounded-md`}\r\n          onClick={() => setOpen(true)}\r\n        >\r\n          <span className=\"text-[#fff]\">Add New</span>\r\n        </div>\r\n      </div>\r\n      <br />\r\n      {user &&\r\n        user.addresses.map((item, index) => (\r\n          <div\r\n            className=\"w-full bg-white h-min 800px:h-[70px] rounded-[4px] flex items-center px-3 shadow justify-between pr-10 mb-5\"\r\n            key={index}\r\n          >\r\n            <div className=\"flex items-center\">\r\n              <h5 className=\"pl-5 font-[600]\">{item.addressType}</h5>\r\n            </div>\r\n            <div className=\"pl-8 flex items-center\">\r\n              <h6 className=\"text-[12px] 800px:text-[unset]\">\r\n                {item.address1} {item.address2}\r\n              </h6>\r\n            </div>\r\n            <div className=\"pl-8 flex items-center\">\r\n              <h6 className=\"text-[12px] 800px:text-[unset]\">\r\n                {user && user.phoneNumber}\r\n              </h6>\r\n            </div>\r\n            <div className=\"min-w-[10%] flex items-center justify-between pl-8\">\r\n              <AiOutlineDelete\r\n                size={25}\r\n                className=\"cursor-pointer\"\r\n                onClick={() => handleDelete(item)}\r\n              />\r\n            </div>\r\n          </div>\r\n        ))}\r\n\r\n      {user && user.addresses.length === 0 && (\r\n        <h5 className=\"text-center pt-8 text-[18px]\">\r\n          You not have any saved address!\r\n        </h5>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileContent;\r\n","F:\\Projects\\E-shop2\\frontend\\src\\components\\Route\\FeaturedProduct\\FeaturedProduct.jsx",["630"],[],"import React, { useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport styles from \"../../../styles/styles\";\r\nimport ProductCard from \"../ProductCard/ProductCard\";\r\n\r\nconst FeaturedProduct = () => {\r\n  const {allProducts} = useSelector((state) => state.products);\r\n   \r\n  return (\r\n    <div>\r\n      <div className={`${styles.section}`}>\r\n        <div className={`${styles.heading}`}>\r\n          <h1>Featured Products</h1>\r\n        </div>\r\n        <div className=\"grid grid-cols-1 gap-[20px] md:grid-cols-2 md:gap-[25px] lg:grid-cols-4 lg:gap-[25px] xl:grid-cols-5 xl:gap-[30px] mb-12 border-0\">\r\n        {\r\n            allProducts && allProducts.length !== 0 &&(\r\n              <>\r\n               {allProducts && allProducts.map((i, index) => <ProductCard data={i} key={index} />)}\r\n              </>\r\n            )\r\n           }\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FeaturedProduct;\r\n","F:\\Projects\\E-shop2\\frontend\\src\\components\\Route\\ProductCard\\ProductCard.jsx",["631","632","633"],[],"F:\\Projects\\E-shop2\\frontend\\src\\components\\Shop\\CreateProduct.jsx",["634"],[],"import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { categoriesData } from \"../../static/data\";\r\nimport { AiOutlinePlusCircle } from \"react-icons/ai\";\r\nimport { createProduct } from \"../../redux/actions/product\";\r\nimport { toast } from \"react-toastify\"\r\n\r\nconst CreateProduct = () => {\r\n  const { seller } = useSelector((state) => state.seller);\r\n  const { success, error } = useSelector((state) => state.products);\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n\r\n  const [images, setImages] = useState([]);\r\n  const [name, setName] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [category, setCategory] = useState(\"\");\r\n  const [tags, setTags] = useState(\"\");\r\n  const [originalPrice, setOriginalPrice] = useState();\r\n  const [discountPrice, setDiscountPrice] = useState();\r\n  const [stock, setStock] = useState();\r\n\r\n  useEffect(() => {\r\n    if (error) {\r\n      toast.error(error);\r\n    }\r\n    if (success) {\r\n      toast.success(\"Product created successfully!\");\r\n      navigate(\"/dashboard-products\");\r\n      window.location.reload();\r\n    }\r\n  }, [dispatch, error, success]);\r\n\r\n  const handleImageChange = (e) => {\r\n    e.preventDefault();\r\n\r\n    let files = Array.from(e.target.files);\r\n    setImages((prevImages) => [...prevImages, ...files]);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const newForm = new FormData();\r\n\r\n    images.forEach((image) => {\r\n      newForm.append(\"images\", image);\r\n    });\r\n\r\n    newForm.append(\"name\", name);\r\n    newForm.append(\"description\", description);\r\n    newForm.append(\"category\", category);\r\n    newForm.append(\"tags\", tags);\r\n    newForm.append(\"originalPrice\", originalPrice);\r\n    newForm.append(\"discountPrice\", discountPrice);\r\n    newForm.append(\"stock\", stock);\r\n    newForm.append(\"shopId\", seller._id);\r\n    dispatch(createProduct(newForm));\r\n  };\r\n\r\n  return (\r\n    <div className=\"w-[90%] 800px:w-[50%] bg-white  shadow h-[80vh] rounded-[4px] p-3 overflow-y-scroll\">\r\n      <h5 className=\"text-[30px] font-Poppins text-center\">Create product</h5>\r\n      {/* create product form */}\r\n      <form onSubmit={handleSubmit}>\r\n        <br />\r\n        <div>\r\n          <label className=\"pb-2\">\r\n            Name <span className=\"text-red-500\">*</span>\r\n            <input\r\n              type=\"text\"\r\n              name=\"name\"\r\n              value={name}\r\n              className=\"mt-2 appearance-none block w-full px-3 h-[35px] border border-gray-300 rounded-[3px] placeholder-gray-400 focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm\"\r\n              onChange={(e) => setName(e.target.value)}\r\n              placeholder=\"Enter your product name...\"\r\n            />\r\n          </label>\r\n        </div>\r\n        <br />\r\n        <div>\r\n          <label className=\"pb-2\">\r\n            Description <span className=\"text-red-500\">*</span>\r\n          </label>\r\n          <textarea\r\n            cols=\"30\"\r\n            required\r\n            rows=\"8\"\r\n            type=\"text\"\r\n            name=\"description\"\r\n            value={description}\r\n            className=\"mt-2 appearance-none block w-full pt-2 px-3 border border-gray-300 rounded-[3px] placeholder-gray-400 focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm\"\r\n            onChange={(e) => setDescription(e.target.value)}\r\n            placeholder=\"Enter your product description...\"\r\n          ></textarea>\r\n        </div>\r\n        <br />\r\n        <div>\r\n          <label className=\"pb-2\">\r\n            Category <span className=\"text-red-500\">*</span>\r\n          </label>\r\n          <select\r\n            className=\"w-full mt-2 border h-[35px] rounded-[5px]\"\r\n            value={category}\r\n            onChange={(e) => setCategory(e.target.value)}\r\n          >\r\n            <option value=\"Choose a category\">Choose a category</option>\r\n            {categoriesData &&\r\n              categoriesData.map((i) => (\r\n                <option value={i.title} key={i.title}>\r\n                  {i.title}\r\n                </option>\r\n              ))}\r\n          </select>\r\n        </div>\r\n        <br />\r\n        <div>\r\n          <label className=\"pb-2\">Tags</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"tags\"\r\n            value={tags}\r\n            className=\"mt-2 appearance-none block w-full px-3 h-[35px] border border-gray-300 rounded-[3px] placeholder-gray-400 focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm\"\r\n            onChange={(e) => setTags(e.target.value)}\r\n            placeholder=\"Enter your product tags...\"\r\n          />\r\n        </div>\r\n        <br />\r\n        <div>\r\n          <label className=\"pb-2\">Original price</label>\r\n          <input\r\n            type=\"number\"\r\n            name=\"price\"\r\n            value={originalPrice}\r\n            className=\"mt-2 appearance-none block w-full px-3 h-[35px] border border-gray-300 rounded-[3px] placeholder-gray-400 focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm\"\r\n            onChange={(e) => setOriginalPrice(e.target.value)}\r\n            placeholder=\"Enter your product price...\"\r\n          />\r\n        </div>\r\n        <br />\r\n        <div>\r\n          <label className=\"pb-2\">\r\n            Price (with discount) <span className=\"text-red-500\">*</span>\r\n          </label>\r\n          <input\r\n            type=\"number\"\r\n            name=\"price\"\r\n            value={discountPrice}\r\n            className=\"mt-2 appearance-none block w-full px-3 h-[35px] border border-gray-300 rounded-[3px] placeholder-gray-400 focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm\"\r\n            onChange={(e) => setDiscountPrice(e.target.value)}\r\n            placeholder=\"Enter your product price with discount...\"\r\n          />\r\n        </div>\r\n        <br />\r\n        <div>\r\n          <label className=\"pb-2\">\r\n            Product stock <span className=\"text-red-500\">*</span>\r\n          </label>\r\n          <input\r\n            type=\"number\"\r\n            name=\"price\"\r\n            value={stock}\r\n            className=\"mt-2 appearance-none block w-full px-3 h-[35px] border border-gray-300 rounded-[3px] placeholder-gray-400 focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm\"\r\n            onChange={(e) => setStock(e.target.value)}\r\n            placeholder=\"Enter your product stock...\"\r\n          />\r\n        </div>\r\n        <br />\r\n        <div>\r\n          <label className=\"pb-2\">\r\n            Upload images <span className=\"text-red-500\">*</span>\r\n          </label>\r\n          <input\r\n            type=\"file\"\r\n            name=\"\"\r\n            id=\"upload\"\r\n            className=\"hidden\"\r\n            multiple\r\n            onChange={handleImageChange}\r\n          />\r\n        </div>\r\n        <div className=\"w-full flex items-center flex-wrap\">\r\n          <label htmlFor=\"upload\">\r\n            <AiOutlinePlusCircle size={30} className=\"mt-3\" color=\"#555\" />\r\n          </label>\r\n          {images &&\r\n            images.map((i) => (\r\n              <img\r\n                src={URL.createObjectURL(i)}\r\n                key={i}\r\n                alt=\"\"\r\n                className=\"h-[120px] w-[120px] object-cover m-2\"\r\n              />\r\n            ))}\r\n        </div>\r\n        <br />\r\n        <div>\r\n          <input\r\n            type=\"submit\"\r\n            value=\"Create\"\r\n            className=\"mt-2 cursor-pointer appearance-none text-center block w-full px-3 h-[35px] border border-gray-300 rounded-[3px] placeholder-gray-400 focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm\"\r\n          />\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreateProduct;\r\n","F:\\Projects\\E-shop2\\frontend\\src\\components\\Payment\\Payment.jsx",["635","636"],[],"import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport styles from \"../../styles/styles\";\r\nimport { useEffect } from \"react\";\r\nimport {\r\n  CardNumberElement,\r\n  CardCvcElement,\r\n  CardExpiryElement,\r\n  useStripe,\r\n  useElements,\r\n} from \"@stripe/react-stripe-js\";\r\nimport { PayPalScriptProvider, PayPalButtons } from \"@paypal/react-paypal-js\";\r\nimport { useSelector } from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport { server } from \"../../server\";\r\nimport { toast } from \"react-toastify\";\r\nimport { RxCross1 } from \"react-icons/rx\";\r\n\r\nconst Payment = () => {\r\n  const [orderData, setOrderData] = useState([]);\r\n  const [open, setOpen] = useState(false);\r\n  const { user } = useSelector((state) => state.user);\r\n  const navigate = useNavigate();\r\n  const stripe = useStripe();\r\n  const elements = useElements();\r\n\r\n  useEffect(() => {\r\n    const orderData = JSON.parse(localStorage.getItem(\"latestOrder\"));\r\n    setOrderData(orderData);\r\n  }, []);\r\n\r\n  const createOrder = (data, actions) => {\r\n    return actions.order\r\n      .create({\r\n        purchase_units: [\r\n          {\r\n            description: \"Sunflower\",\r\n            amount: {\r\n              currency_code: \"USD\",\r\n              value: orderData?.totalPrice,\r\n            },\r\n          },\r\n        ],\r\n        // not needed if a shipping address is actually needed\r\n        application_context: {\r\n          shipping_preference: \"NO_SHIPPING\",\r\n        },\r\n      })\r\n      .then((orderID) => {\r\n        return orderID;\r\n      });\r\n  };\r\n\r\n  const order = {\r\n    cart: orderData?.cart,\r\n    shippingAddress: orderData?.shippingAddress,\r\n    user: user && user,\r\n    totalPrice: orderData?.totalPrice,\r\n  };\r\n\r\n  const onApprove = async (data, actions) => {\r\n    return actions.order.capture().then(function (details) {\r\n      const { payer } = details;\r\n\r\n      let paymentInfo = payer;\r\n\r\n      if (paymentInfo !== undefined) {\r\n        paypalPaymentHandler(paymentInfo);\r\n      }\r\n    });\r\n  };\r\n\r\n  const paypalPaymentHandler = async (paymentInfo) => {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    order.paymentInfo = {\r\n      id: paymentInfo.payer_id,\r\n      status: \"succeeded\",\r\n      type: \"Paypal\",\r\n    };\r\n\r\n    await axios\r\n      .post(`${server}/order/create-order`, order, config)\r\n      .then((res) => {\r\n        setOpen(false);\r\n        navigate(\"/order/success\");\r\n        toast.success(\"Order successful!\");\r\n        localStorage.setItem(\"cartItems\", JSON.stringify([]));\r\n        localStorage.setItem(\"latestOrder\", JSON.stringify([]));\r\n        window.location.reload();\r\n      });\r\n  };\r\n\r\n  const paymentData = {\r\n    amount: Math.round(orderData?.totalPrice * 100),\r\n  };\r\n\r\n  const paymentHandler = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.post(\r\n        `${server}/payment/process`,\r\n        paymentData,\r\n        config\r\n      );\r\n\r\n      const client_secret = data.client_secret;\r\n\r\n      if (!stripe || !elements) return;\r\n      const result = await stripe.confirmCardPayment(client_secret, {\r\n        payment_method: {\r\n          card: elements.getElement(CardNumberElement),\r\n        },\r\n      });\r\n\r\n      if (result.error) {\r\n        toast.error(result.error.message);\r\n      } else {\r\n        if (result.paymentIntent.status === \"succeeded\") {\r\n          order.paymentInfo = {\r\n            id: result.paymentIntent.id,\r\n            status: result.paymentIntent.status,\r\n            type: \"Credit Card\",\r\n          };\r\n\r\n          await axios\r\n            .post(`${server}/order/create-order`, order, config)\r\n            .then((res) => {\r\n              setOpen(false);\r\n              navigate(\"/order/success\");\r\n              toast.success(\"Order successful!\");\r\n              localStorage.setItem(\"cartItems\", JSON.stringify([]));\r\n              localStorage.setItem(\"latestOrder\", JSON.stringify([]));\r\n              window.location.reload();\r\n            });\r\n        }\r\n      }\r\n    } catch (error) {\r\n      toast.error(error);\r\n    }\r\n  };\r\n\r\n  const cashOnDeliveryHandler = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    order.paymentInfo = {\r\n      type: \"Cash On Delivery\",\r\n    };\r\n\r\n    await axios\r\n    .post(`${server}/order/create-order`, order, config)\r\n    .then((res) => {\r\n      setOpen(false);\r\n      navigate(\"/order/success\");\r\n      toast.success(\"Order successful!\");\r\n      localStorage.setItem(\"cartItems\", JSON.stringify([]));\r\n      localStorage.setItem(\"latestOrder\", JSON.stringify([]));\r\n      window.location.reload();\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"w-full flex flex-col items-center py-8\">\r\n      <div className=\"w-[90%] 1000px:w-[70%] block 800px:flex\">\r\n        <div className=\"w-full 800px:w-[65%]\">\r\n          <PaymentInfo\r\n            user={user}\r\n            open={open}\r\n            setOpen={setOpen}\r\n            onApprove={onApprove}\r\n            createOrder={createOrder}\r\n            paymentHandler={paymentHandler}\r\n            cashOnDeliveryHandler={cashOnDeliveryHandler}\r\n          />\r\n        </div>\r\n        <div className=\"w-full 800px:w-[35%] 800px:mt-0 mt-8\">\r\n          <CartData orderData={orderData} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst PaymentInfo = ({\r\n  user,\r\n  open,\r\n  setOpen,\r\n  onApprove,\r\n  createOrder,\r\n  paymentHandler,\r\n  cashOnDeliveryHandler,\r\n}) => {\r\n  const [select, setSelect] = useState(1);\r\n\r\n  return (\r\n    <div className=\"w-full 800px:w-[95%] bg-[#fff] rounded-md p-5 pb-8\">\r\n      {/* select buttons */}\r\n      {/* <div>\r\n        <div className=\"flex w-full pb-5 border-b mb-2\">\r\n          <div\r\n            className=\"w-[25px] h-[25px] rounded-full bg-transparent border-[3px] border-[#1d1a1ab4] relative flex items-center justify-center\"\r\n            onClick={() => setSelect(1)}\r\n          >\r\n            {select === 1 ? (\r\n              <div className=\"w-[13px] h-[13px] bg-[#1d1a1acb] rounded-full\" />\r\n            ) : null}\r\n          </div>\r\n          <h4 className=\"text-[18px] pl-2 font-[600] text-[#000000b1]\">\r\n            Pay with Debit/credit card\r\n          </h4>\r\n        </div> */}\r\n\r\n        {/* pay with card */}\r\n        {/* {select === 1 ? (\r\n          <div className=\"w-full flex border-b\">\r\n            <form className=\"w-full\" onSubmit={paymentHandler}>\r\n              <div className=\"w-full flex pb-3\">\r\n                <div className=\"w-[50%]\">\r\n                  <label className=\"block pb-2\">Name On Card</label>\r\n                  <input\r\n                    required\r\n                    placeholder={user && user.name}\r\n                    className={`${styles.input} !w-[95%] text-[#444]`}\r\n                    value={user && user.name}\r\n                  />\r\n                </div>\r\n                <div className=\"w-[50%]\">\r\n                  <label className=\"block pb-2\">Exp Date</label>\r\n                  <CardExpiryElement\r\n                    className={`${styles.input}`}\r\n                    options={{\r\n                      style: {\r\n                        base: {\r\n                          fontSize: \"19px\",\r\n                          lineHeight: 1.5,\r\n                          color: \"#444\",\r\n                        },\r\n                        empty: {\r\n                          color: \"#3a120a\",\r\n                          backgroundColor: \"transparent\",\r\n                          \"::placeholder\": {\r\n                            color: \"#444\",\r\n                          },\r\n                        },\r\n                      },\r\n                    }}\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"w-full flex pb-3\">\r\n                <div className=\"w-[50%]\">\r\n                  <label className=\"block pb-2\">Card Number</label>\r\n                  <CardNumberElement\r\n                    className={`${styles.input} !h-[35px] !w-[95%]`}\r\n                    options={{\r\n                      style: {\r\n                        base: {\r\n                          fontSize: \"19px\",\r\n                          lineHeight: 1.5,\r\n                          color: \"#444\",\r\n                        },\r\n                        empty: {\r\n                          color: \"#3a120a\",\r\n                          backgroundColor: \"transparent\",\r\n                          \"::placeholder\": {\r\n                            color: \"#444\",\r\n                          },\r\n                        },\r\n                      },\r\n                    }}\r\n                  />\r\n                </div>\r\n                <div className=\"w-[50%]\">\r\n                  <label className=\"block pb-2\">CVV</label>\r\n                  <CardCvcElement\r\n                    className={`${styles.input} !h-[35px]`}\r\n                    options={{\r\n                      style: {\r\n                        base: {\r\n                          fontSize: \"19px\",\r\n                          lineHeight: 1.5,\r\n                          color: \"#444\",\r\n                        },\r\n                        empty: {\r\n                          color: \"#3a120a\",\r\n                          backgroundColor: \"transparent\",\r\n                          \"::placeholder\": {\r\n                            color: \"#444\",\r\n                          },\r\n                        },\r\n                      },\r\n                    }}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <input\r\n                type=\"submit\"\r\n                value=\"Submit\"\r\n                className={`${styles.button} !bg-[#f63b60] text-[#fff] h-[45px] rounded-[5px] cursor-pointer text-[18px] font-[600]`}\r\n              />\r\n            </form>\r\n          </div>\r\n        ) : null}\r\n      </div> */}\r\n\r\n      <br />\r\n      {/* paypal payment */}\r\n      <div>\r\n        <div className=\"flex w-full pb-5 border-b mb-2\">\r\n          <div\r\n            className=\"w-[25px] h-[25px] rounded-full bg-transparent border-[3px] border-[#1d1a1ab4] relative flex items-center justify-center\"\r\n            onClick={() => setSelect(1)}\r\n          >\r\n            {select === 1 ? (\r\n              <div className=\"w-[13px] h-[13px] bg-[#1d1a1acb] rounded-full\" />\r\n            ) : null}\r\n          </div>\r\n          <h4 className=\"text-[18px] pl-2 font-[600] text-[#000000b1]\">\r\n            Pay with Paypal\r\n          </h4>\r\n        </div>\r\n\r\n        {/* pay with payment */}\r\n        {select === 1 ? (\r\n          <div className=\"w-full flex border-b\">\r\n            <div\r\n              className={`${styles.button} !bg-[#f63b60] text-white h-[45px] rounded-[5px] cursor-pointer text-[18px] font-[600]`}\r\n              onClick={() => setOpen(true)}\r\n            >\r\n              Pay Now\r\n            </div>\r\n            {open && (\r\n              <div className=\"w-full fixed top-0 left-0 bg-[#00000039] h-screen flex items-center justify-center z-[99999]\">\r\n                <div className=\"w-full 800px:w-[40%] h-screen 800px:h-[80vh] bg-white rounded-[5px] shadow flex flex-col justify-center p-8 relative overflow-y-scroll\">\r\n                  <div className=\"w-full flex justify-end p-3\">\r\n                    <RxCross1\r\n                      size={30}\r\n                      className=\"cursor-pointer absolute top-3 right-3\"\r\n                      onClick={() => setOpen(false)}\r\n                    />\r\n                  </div>\r\n                    <PayPalScriptProvider\r\n                      options={{\r\n                        \"client-id\":\r\n                          \"Aczac4Ry9_QA1t4c7TKH9UusH3RTe6onyICPoCToHG10kjlNdI-qwobbW9JAHzaRQwFMn2-k660853jn\",\r\n                      }}\r\n                    >\r\n                      <PayPalButtons\r\n                        style={{ layout: \"vertical\" }}\r\n                        onApprove={onApprove}\r\n                        createOrder={createOrder}\r\n                      />\r\n                    </PayPalScriptProvider>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n\r\n      <br />\r\n      {/* cash on delivery */}\r\n      <div>\r\n        <div className=\"flex w-full pb-5 border-b mb-2\">\r\n          <div\r\n            className=\"w-[25px] h-[25px] rounded-full bg-transparent border-[3px] border-[#1d1a1ab4] relative flex items-center justify-center\"\r\n            onClick={() => setSelect(2)}\r\n          >\r\n            {select === 2 ? (\r\n              <div className=\"w-[13px] h-[13px] bg-[#1d1a1acb] rounded-full\" />\r\n            ) : null}\r\n          </div>\r\n          <h4 className=\"text-[18px] pl-2 font-[600] text-[#000000b1]\">\r\n            Cash on Delivery\r\n          </h4>\r\n        </div>\r\n\r\n        {/* cash on delivery */}\r\n        {select === 2 ? (\r\n          <div className=\"w-full flex\">\r\n            <form className=\"w-full\" onSubmit={cashOnDeliveryHandler}>\r\n              <input\r\n                type=\"submit\"\r\n                value=\"Confirm\"\r\n                className={`${styles.button} !bg-[#f63b60] text-[#fff] h-[45px] rounded-[5px] cursor-pointer text-[18px] font-[600]`}\r\n              />\r\n            </form>\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst CartData = ({ orderData }) => {\r\n  const shipping = orderData?.shipping?.toFixed(2);\r\n  return (\r\n    <div className=\"w-full bg-[#fff] rounded-md p-5 pb-8\">\r\n      <div className=\"flex justify-between\">\r\n        <h3 className=\"text-[16px] font-[400] text-[#000000a4]\">subtotal:</h3>\r\n        <h5 className=\"text-[18px] font-[600]\">${orderData?.subTotalPrice}</h5>\r\n      </div>\r\n      <br />\r\n      <div className=\"flex justify-between\">\r\n        <h3 className=\"text-[16px] font-[400] text-[#000000a4]\">shipping:</h3>\r\n        <h5 className=\"text-[18px] font-[600]\">${shipping}</h5>\r\n      </div>\r\n      <br />\r\n      <div className=\"flex justify-between border-b pb-3\">\r\n        <h3 className=\"text-[16px] font-[400] text-[#000000a4]\">Discount:</h3>\r\n        <h5 className=\"text-[18px] font-[600]\">{orderData?.discountPrice? \"$\" + orderData.discountPrice : \"-\"}</h5>\r\n      </div>\r\n      <h5 className=\"text-[18px] font-[600] text-end pt-3\">\r\n        ${orderData?.totalPrice}\r\n      </h5>\r\n      <br />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Payment;\r\n","F:\\Projects\\E-shop2\\frontend\\src\\components\\Shop\\AllProducts.jsx",["637","638"],[],"import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { deleteProduct, getAllProductsShop } from \"../../redux/actions/product\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { AiOutlineDelete, AiOutlineEye } from \"react-icons/ai\";\r\nimport Loader from \"../Layout/Loader\";\r\nimport { DataGrid } from \"@material-ui/data-grid\";\r\n\r\nconst AllProducts = () => {\r\n  const { products, isLoading } = useSelector((state) => state.products);\r\n  const { seller } = useSelector((state) => state.seller);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getAllProductsShop(seller._id));\r\n  }, [dispatch]);\r\n\r\n  const handleDelete = (id) => {\r\n    dispatch(deleteProduct(id));\r\n    window.location.reload();\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      field: \"id\",\r\n      headerName: \"Product Id\",\r\n      minWidth: 150,\r\n      flex: 0.7,\r\n    },\r\n    {\r\n      field: \"name\",\r\n      headerName: \"Name\",\r\n      minWidth: 150,\r\n      flex: 0.8,\r\n    },\r\n    {\r\n      field: \"price\",\r\n      headerName: \"Price\",\r\n      minWidth: 100,\r\n      flex: 0.6,\r\n    },\r\n    {\r\n      field: \"stock\",\r\n      headerName: \"Stock\",\r\n      type: \"number\",\r\n      minWidth: 100,\r\n      flex: 0.6,\r\n    },\r\n\r\n    {\r\n      field: \"sold\",\r\n      headerName: \"Sold out\",\r\n      type: \"number\",\r\n      minWidth: 100,\r\n      flex: 0.6,\r\n    },\r\n    {\r\n      field: \"Preview\",\r\n      flex: 0.6,\r\n      minWidth: 100,\r\n      headerName: \"\",\r\n      type: \"number\",\r\n      sortable: false,\r\n      renderCell: (params) => {\r\n        return (\r\n          <>\r\n            <Link to={`/product/${params.id}`}>\r\n              <Button>\r\n                <AiOutlineEye size={20} />\r\n              </Button>\r\n            </Link>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n\r\n    {\r\n      field: \"Delete\",\r\n      flex: 0.6,\r\n      minWidth: 120,\r\n      headerName: \"\",\r\n      type: \"number\",\r\n      sortable: false,\r\n      renderCell: (params) => {\r\n        return (\r\n          <>\r\n            <Button onClick={() => handleDelete(params.id)}>\r\n              <AiOutlineDelete size={20} />\r\n            </Button>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  const row = [];\r\n\r\n  products &&\r\n    products.forEach((item) => {\r\n      row.push({\r\n        id: item._id,\r\n        name: item.name,\r\n        price: item.discountPrice + \"$\",\r\n        stock: item.stock,\r\n        sold: 10,\r\n      });\r\n    });\r\n\r\n  return (\r\n    <>\r\n      {isLoading ? (\r\n        <Loader />\r\n      ) : (\r\n        <div className=\"w-full mx-8 pt-1 mt-10 bg-white\">\r\n          <DataGrid\r\n            rows={row}\r\n            columns={columns}\r\n            pageSize={10}\r\n            disableSelectionOnClick\r\n            autoHeight\r\n          />\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AllProducts;\r\n","F:\\Projects\\E-shop2\\frontend\\src\\components\\Shop\\CreateEvent.jsx",["639"],[],"F:\\Projects\\E-shop2\\frontend\\src\\components\\Shop\\AllCoupons.jsx",["640","641"],[],"import { Button } from \"@material-ui/core\";\r\nimport { DataGrid } from \"@material-ui/data-grid\";\r\nimport axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { AiOutlineDelete } from \"react-icons/ai\";\r\nimport { RxCross1 } from \"react-icons/rx\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport styles from \"../../styles/styles\";\r\nimport Loader from \"../Layout/Loader\";\r\nimport { server } from \"../../server\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst AllCoupons = () => {\r\n  const [open, setOpen] = useState(false);\r\n  const [name, setName] = useState(\"\");\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [coupons,setCoupons] = useState([]);\r\n  const [minAmount, setMinAmount] = useState(null);\r\n  const [maxAmount, setMaxAmount] = useState(null);\r\n  const [selectedProducts, setSelectedProducts] = useState(null);\r\n  const [value, setValue] = useState(null);\r\n  const { seller } = useSelector((state) => state.seller);\r\n  const { products } = useSelector((state) => state.products);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    axios\r\n      .get(`${server}/coupon/get-coupon/${seller._id}`, {\r\n        withCredentials: true,\r\n      })\r\n      .then((res) => {\r\n        setIsLoading(false);\r\n        setCoupons(res.data.couponCodes);\r\n      })\r\n      .catch((error) => {\r\n        setIsLoading(false);\r\n      });\r\n  }, [dispatch]);\r\n\r\n  const handleDelete = async (id) => {\r\n    axios.delete(`${server}/coupon/delete-coupon/${id}`,{withCredentials: true}).then((res) => {\r\n      toast.success(\"Coupon code deleted successfully!\")\r\n    })\r\n    window.location.reload();\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    await axios\r\n      .post(\r\n        `${server}/coupon/create-coupon-code`,\r\n        {\r\n          name,\r\n          minAmount,\r\n          maxAmount,\r\n          selectedProducts,\r\n          value,\r\n          shopId: seller._id,\r\n        },\r\n        { withCredentials: true }\r\n      )\r\n      .then((res) => {\r\n       toast.success(\"Coupon code created successfully!\");\r\n       setOpen(false);\r\n       window.location.reload();\r\n      })\r\n      .catch((error) => {\r\n        toast.error(error.response.data.message);\r\n      });\r\n  };\r\n\r\n  const columns = [\r\n    { field: \"id\", headerName: \"Id\", minWidth: 150, flex: 0.7 },\r\n    {\r\n      field: \"name\",\r\n      headerName: \"Coupon Code\",\r\n      minWidth: 180,\r\n      flex: 1.4,\r\n    },\r\n    {\r\n      field: \"price\",\r\n      headerName: \"Value\",\r\n      minWidth: 100,\r\n      flex: 0.6,\r\n    },\r\n    {\r\n      field: \"Delete\",\r\n      flex: 0.8,\r\n      minWidth: 120,\r\n      headerName: \"\",\r\n      type: \"number\",\r\n      sortable: false,\r\n      renderCell: (params) => {\r\n        return (\r\n          <>\r\n            <Button onClick={() => handleDelete(params.id)}>\r\n              <AiOutlineDelete size={20} />\r\n            </Button>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  const row = [];\r\n\r\n  coupons &&\r\n  coupons.forEach((item) => {\r\n      row.push({\r\n        id: item._id,\r\n        name: item.name,\r\n        price: item.value + \"%\",\r\n        sold: 10,\r\n      });\r\n    });\r\n\r\n  return (\r\n    <>\r\n      {isLoading ? (\r\n        <Loader />\r\n      ) : (\r\n        <div className=\"w-full mx-8 pt-1 mt-10 bg-white\">\r\n          <div className=\"w-full flex justify-end\">\r\n            <div\r\n              className={`${styles.button} !w-max !h-[45px] px-3 !rounded-[5px] mr-3 mb-3`}\r\n              onClick={() => setOpen(true)}\r\n            >\r\n              <span className=\"text-white\">Create Coupon Code</span>\r\n            </div>\r\n          </div>\r\n          <DataGrid\r\n            rows={row}\r\n            columns={columns}\r\n            pageSize={10}\r\n            disableSelectionOnClick\r\n            autoHeight\r\n          />\r\n          {open && (\r\n            <div className=\"fixed top-0 left-0 w-full h-screen bg-[#00000062] z-[20000] flex items-center justify-center\">\r\n              <div className=\"w-[90%] 800px:w-[40%] h-[80vh] bg-white rounded-md shadow p-4 overflow-y-scroll\">\r\n                <div className=\"w-full flex justify-end\">\r\n                  <RxCross1\r\n                    size={30}\r\n                    className=\"cursor-pointer\"\r\n                    onClick={() => setOpen(false)}\r\n                  />\r\n                </div>\r\n                <h5 className=\"text-[30px] font-Poppins text-center\">\r\n                  Create Coupon code\r\n                </h5>\r\n                {/* create coupon code */}\r\n                <form onSubmit={handleSubmit} aria-required={true}>\r\n                  <br />\r\n                  <div>\r\n                    <label className=\"pb-2\">\r\n                      Name <span className=\"text-red-500\">*</span>\r\n                    </label>\r\n                    <input\r\n                      type=\"text\"\r\n                      name=\"name\"\r\n                      required\r\n                      value={name}\r\n                      className=\"mt-2 appearance-none block w-full px-3 h-[35px] border border-gray-300 rounded-[3px] placeholder-gray-400 focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm\"\r\n                      onChange={(e) => setName(e.target.value)}\r\n                      placeholder=\"Enter your coupon code name...\"\r\n                    />\r\n                  </div>\r\n                  <br />\r\n                  <div>\r\n                    <label className=\"pb-2\">\r\n                      Discount Presentence{\" \"}\r\n                      <span className=\"text-red-500\">*</span>\r\n                    </label>\r\n                    <input\r\n                      type=\"text\"\r\n                      name=\"value\"\r\n                      value={value}\r\n                      required\r\n                      className=\"mt-2 appearance-none block w-full px-3 h-[35px] border border-gray-300 rounded-[3px] placeholder-gray-400 focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm\"\r\n                      onChange={(e) => setValue(e.target.value)}\r\n                      placeholder=\"Enter your coupon code value...\"\r\n                    />\r\n                  </div>\r\n                  <br />\r\n                  <div>\r\n                    <label className=\"pb-2\">Min Amount</label>\r\n                    <input\r\n                      type=\"number\"\r\n                      name=\"value\"\r\n                      value={minAmount}\r\n                      className=\"mt-2 appearance-none block w-full px-3 h-[35px] border border-gray-300 rounded-[3px] placeholder-gray-400 focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm\"\r\n                      onChange={(e) => setMinAmount(e.target.value)}\r\n                      placeholder=\"Enter your coupon code min amount...\"\r\n                    />\r\n                  </div>\r\n                  <br />\r\n                  <div>\r\n                    <label className=\"pb-2\">Max Amount</label>\r\n                    <input\r\n                      type=\"number\"\r\n                      name=\"value\"\r\n                      value={maxAmount}\r\n                      className=\"mt-2 appearance-none block w-full px-3 h-[35px] border border-gray-300 rounded-[3px] placeholder-gray-400 focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm\"\r\n                      onChange={(e) => setMaxAmount(e.target.value)}\r\n                      placeholder=\"Enter your coupon code max amount...\"\r\n                    />\r\n                  </div>\r\n                  <br />\r\n                  <div>\r\n                    <label className=\"pb-2\">Selected Product</label>\r\n                    <select\r\n                      className=\"w-full mt-2 border h-[35px] rounded-[5px]\"\r\n                      value={selectedProducts}\r\n                      onChange={(e) => setSelectedProducts(e.target.value)}\r\n                    >\r\n                      <option value=\"Choose your selected products\">\r\n                        Choose a selected product\r\n                      </option>\r\n                      {products &&\r\n                        products.map((i) => (\r\n                          <option value={i.name} key={i.name}>\r\n                            {i.name}\r\n                          </option>\r\n                        ))}\r\n                    </select>\r\n                  </div>\r\n                  <br />\r\n                  <div>\r\n                    <input\r\n                      type=\"submit\"\r\n                      value=\"Create\"\r\n                      className=\"mt-2 appearance-none block w-full px-3 h-[35px] border border-gray-300 rounded-[3px] placeholder-gray-400 focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm\"\r\n                    />\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AllCoupons;\r\n","F:\\Projects\\E-shop2\\frontend\\src\\components\\Shop\\OrderDetails.jsx",["642","643"],[],"F:\\Projects\\E-shop2\\frontend\\src\\components\\Shop\\Layout\\DashboardHeader.jsx",[],[],"F:\\Projects\\E-shop2\\frontend\\src\\components\\Shop\\AllOrders.jsx",["644"],[],"import { Button } from \"@material-ui/core\";\r\nimport { DataGrid } from \"@material-ui/data-grid\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Loader from \"../Layout/Loader\";\r\nimport { getAllOrdersOfShop } from \"../../redux/actions/order\";\r\nimport { AiOutlineArrowRight } from \"react-icons/ai\";\r\n\r\nconst AllOrders = () => {\r\n  const { orders, isLoading } = useSelector((state) => state.order);\r\n  const { seller } = useSelector((state) => state.seller);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getAllOrdersOfShop(seller._id));\r\n  }, [dispatch]);\r\n\r\n  const columns = [\r\n    { field: \"id\", headerName: \"Order ID\", minWidth: 150, flex: 0.7 },\r\n\r\n    {\r\n      field: \"status\",\r\n      headerName: \"Status\",\r\n      minWidth: 130,\r\n      flex: 0.7,\r\n      cellClassName: (params) => {\r\n        return params.getValue(params.id, \"status\") === \"Delivered\"\r\n          ? \"greenColor\"\r\n          : \"redColor\";\r\n      },\r\n    },\r\n    {\r\n      field: \"itemsQty\",\r\n      headerName: \"Items Qty\",\r\n      type: \"number\",\r\n      minWidth: 130,\r\n      flex: 0.7,\r\n    },\r\n\r\n    {\r\n      field: \"total\",\r\n      headerName: \"Total\",\r\n      type: \"number\",\r\n      minWidth: 130,\r\n      flex: 0.8,\r\n    },\r\n\r\n    {\r\n      field: \" \",\r\n      flex: 1,\r\n      minWidth: 150,\r\n      headerName: \"\",\r\n      type: \"number\",\r\n      sortable: false,\r\n      renderCell: (params) => {\r\n        return (\r\n          <>\r\n            <Link to={`/order/${params.id}`}>\r\n              <Button>\r\n                <AiOutlineArrowRight size={20} />\r\n              </Button>\r\n            </Link>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  const row = [];\r\n\r\n  orders &&\r\n    orders.forEach((item) => {\r\n      row.push({\r\n        id: item._id,\r\n        itemsQty: item.cart.length,\r\n        total: \"US$ \" + item.totalPrice,\r\n        status: item.status,\r\n      });\r\n    });\r\n\r\n  return (\r\n    <>\r\n      {isLoading ? (\r\n        <Loader />\r\n      ) : (\r\n        <div className=\"w-full mx-8 pt-1 mt-10 bg-white\">\r\n          <DataGrid\r\n            rows={row}\r\n            columns={columns}\r\n            pageSize={10}\r\n            disableSelectionOnClick\r\n            autoHeight\r\n          />\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AllOrders;\r\n","F:\\Projects\\E-shop2\\frontend\\src\\components\\Shop\\Layout\\DashboardSideBar.jsx",[],[],"F:\\Projects\\E-shop2\\frontend\\src\\components\\Layout\\DropDown.jsx",[],[],"F:\\Projects\\E-shop2\\frontend\\src\\components\\Layout\\Navbar.jsx",[],[],"F:\\Projects\\E-shop2\\frontend\\src\\redux\\actions\\wishlist.js",[],[],"F:\\Projects\\E-shop2\\frontend\\src\\redux\\actions\\order.js",[],[],"F:\\Projects\\E-shop2\\frontend\\src\\redux\\actions\\cart.js",[],[],"F:\\Projects\\E-shop2\\frontend\\src\\components\\cart\\Cart.jsx",[],[],"F:\\Projects\\E-shop2\\frontend\\src\\components\\Wishlist\\Wishlist.jsx",["645","646","647","648"],[],"import React, { useState } from \"react\";\r\nimport { RxCross1 } from \"react-icons/rx\";\r\nimport { BsCartPlus } from \"react-icons/bs\";\r\nimport styles from \"../../styles/styles\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { AiOutlineHeart } from \"react-icons/ai\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { removeFromWishlist } from \"../../redux/actions/wishlist\";\r\nimport { backend_url } from \"../../server\";\r\nimport { addToCart } from \"../../redux/actions/cart\";\r\n\r\nconst Wishlist = ({ setOpenWishlist }) => {\r\n  const { wishlist } = useSelector((state) => state.wishlist);\r\n  const { user, isAuthenticated } = useSelector((state) => state.user);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const removeFromWishlistHandler = (data) => {\r\n    dispatch(removeFromWishlist(data));\r\n  };\r\n\r\n  const addToCartHandler = (data) => {\r\n    const newData = {...data, qty:1};\r\n    dispatch(addToCart(newData));\r\n    setOpenWishlist(false);\r\n  }\r\n\r\n  return (\r\n    <div className=\"fixed top-0 left-0 w-full bg-[#0000004b] h-screen z-10\">\r\n      <div className=\"fixed top-0 right-0 h-full w-[80%] 800px:w-[25%] bg-white flex flex-col overflow-y-scroll justify-between shadow-sm\">\r\n        {wishlist && wishlist.length === 0 ? (\r\n          <div className=\"w-full h-screen flex items-center justify-center\">\r\n            <div className=\"flex w-full justify-end pt-5 pr-5 fixed top-3 right-3\">\r\n              <RxCross1\r\n                size={25}\r\n                className=\"cursor-pointer\"\r\n                onClick={() => setOpenWishlist(false)}\r\n              />\r\n            </div>\r\n            <h5>Wishlist items is empty!</h5>\r\n          </div>\r\n        ) : (\r\n          <>\r\n            <div>\r\n              <div className=\"flex w-full justify-end pt-5 pr-5\">\r\n                <RxCross1\r\n                  size={25}\r\n                  className=\"cursor-pointer\"\r\n                  onClick={() => setOpenWishlist(false)}\r\n                />\r\n              </div>\r\n\r\n              {/* Item length */}\r\n              <div className={`${styles.normalFlex} p-4`}>\r\n                <AiOutlineHeart size={25} />\r\n                <h5 className=\"pl-2 text-[20px] font-[500]\">\r\n                  {wishlist && wishlist.length}\r\n                </h5>\r\n              </div>\r\n\r\n              {/* cart Single Items */}\r\n              <br />\r\n              <div className=\"w-full border-t\">\r\n                {wishlist &&\r\n                  wishlist.map((i, index) => (\r\n                    <CartSingle\r\n                      key={index}\r\n                      data={i}\r\n                      removeFromWishlistHandler={removeFromWishlistHandler} addToCartHandler={addToCartHandler}\r\n                    />\r\n                  ))}\r\n              </div>\r\n            </div>\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst CartSingle = ({ data, removeFromWishlistHandler, addToCartHandler }) => {\r\n  const [value, setValue] = useState(1);\r\n  const totalPrice = data.discountPrice * value;\r\n\r\n  return (\r\n    <div className=\"border-b p-4\">\r\n      <div className=\"w-full 800px:flex items-center\">\r\n        <RxCross1\r\n          className=\"cursor-pointer 800px:mb-['unset'] 800px:ml-['unset'] mb-2 ml-2\"\r\n          onClick={() => removeFromWishlistHandler(data)}\r\n        />\r\n        <img\r\n          src={`${backend_url}${data?.images[0]}`}\r\n          alt=\"\"\r\n          className=\"w-[130px] h-min ml-2 mr-2 rounded-[5px]\"\r\n        />\r\n\r\n        <div className=\"pl-[5px]\">\r\n          <h1>{data.name}</h1>\r\n          <h4 className=\"font-[600] pt-3 800px:pt-[3px] text-[17px] text-[#d02222] font-Roboto\">\r\n            {totalPrice}$\r\n          </h4>\r\n        </div>\r\n        <div>\r\n          <BsCartPlus \r\n          size={20} \r\n          className=\"cursor-pointer\" \r\n          tile=\"Add to cart\"\r\n          onClick={() => addToCartHandler(data)} \r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Wishlist;\r\n","F:\\Projects\\E-shop2\\frontend\\src\\components\\Route\\Event\\CountDown.jsx",[],[],"F:\\Projects\\E-shop2\\frontend\\src\\components\\Route\\ProductDetailsCard\\ProductDetailsCard.jsx",["649"],[],"F:\\Projects\\E-shop2\\frontend\\src\\components\\Products\\Ratings.jsx",[],[],"F:\\Projects\\E-shop2\\frontend\\src\\pages\\TrackOrderPage.jsx",[],[],"F:\\Projects\\E-shop2\\frontend\\src\\components\\Profile\\TrackOrder.jsx",["650"],[],"import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { getAllOrdersOfUser } from \"../../redux/actions/order\";\r\n\r\nconst TrackOrder = () => {\r\n    const { orders } = useSelector((state) => state.order);\r\n    const { user } = useSelector((state) => state.user);\r\n    const dispatch = useDispatch();\r\n\r\n    const { id } = useParams();\r\n\r\n    useEffect(() => {\r\n        dispatch(getAllOrdersOfUser(user._id));\r\n    }, [dispatch]);\r\n\r\n  const data = orders && orders.find((item) => item._id === id);\r\n\r\n  return (\r\n    <div className=\"w-full h-[80vh] flex justify-center items-center\">\r\n      {\" \"}\r\n      <>\r\n        {data && data?.status === \"Processing\" ? (\r\n          <h1 className=\"text-[20px]\">Your order is processing in shop.</h1>\r\n        ) : data?.status === \"Transferred to delivery partner\" ? (\r\n          <h1 className=\"text-[20px]\">\r\n            Your order is on the way for delivery partner.\r\n          </h1>\r\n        ) : data?.status === \"Shipping\" ? (\r\n          <h1 className=\"text-[20px]\">\r\n            Your order is on the way with our delivery partner.\r\n          </h1>\r\n        ) : data?.status === \"Received\" ? (\r\n          <h1 className=\"text-[20px]\">\r\n            Your order is in your city. Our delivery man will deliver it.\r\n          </h1>\r\n        ) : data?.status === \"On the way\" ? (\r\n          <h1 className=\"text-[20px]\">\r\n            Our delivery man is going to deliver your order.\r\n          </h1>\r\n        ) : data?.status === \"Delivered\" ? (\r\n          <h1 className=\"text-[20px]\">Your order is delivered!</h1>\r\n        ) : data?.status === \"Processing refund\" ? (\r\n          <h1 className=\"text-[20px]\">Your refund is processing!</h1>\r\n        ) : data?.status === \"Refund success\" ? (\r\n          <h1 className=\"text-[20px]\">Your refund is success!</h1>\r\n        ) : null}\r\n      </>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TrackOrder","F:\\Projects\\E-shop2\\frontend\\src\\pages\\Shop\\ShopAllRefunds.jsx",[],[],"F:\\Projects\\E-shop2\\frontend\\src\\components\\Shop\\AllRefundOrders.jsx",["651"],[],"import { Button } from \"@material-ui/core\";\r\nimport { DataGrid } from \"@material-ui/data-grid\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Loader from \"../Layout/Loader\";\r\nimport { getAllOrdersOfShop } from \"../../redux/actions/order\";\r\nimport { AiOutlineArrowRight } from \"react-icons/ai\";\r\n\r\nconst AllRefundOrders = () => {\r\n  const { orders, isLoading } = useSelector((state) => state.order);\r\n  const { seller } = useSelector((state) => state.seller);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getAllOrdersOfShop(seller._id));\r\n  }, [dispatch]);\r\n\r\n  const refundOrders = orders && orders.filter((item) => item.status === \"Processing refund\"  || item.status === \"Refund success\");\r\n\r\n  const columns = [\r\n    { field: \"id\", headerName: \"Order ID\", minWidth: 150, flex: 0.7 },\r\n\r\n    {\r\n      field: \"status\",\r\n      headerName: \"Status\",\r\n      minWidth: 130,\r\n      flex: 0.7,\r\n      cellClassName: (params) => {\r\n        return params.getValue(params.id, \"status\") === \"Delivered\"\r\n          ? \"greenColor\"\r\n          : \"redColor\";\r\n      },\r\n    },\r\n    {\r\n      field: \"itemsQty\",\r\n      headerName: \"Items Qty\",\r\n      type: \"number\",\r\n      minWidth: 130,\r\n      flex: 0.7,\r\n    },\r\n\r\n    {\r\n      field: \"total\",\r\n      headerName: \"Total\",\r\n      type: \"number\",\r\n      minWidth: 130,\r\n      flex: 0.8,\r\n    },\r\n\r\n    {\r\n      field: \" \",\r\n      flex: 1,\r\n      minWidth: 150,\r\n      headerName: \"\",\r\n      type: \"number\",\r\n      sortable: false,\r\n      renderCell: (params) => {\r\n        return (\r\n          <>\r\n            <Link to={`/order/${params.id}`}>\r\n              <Button>\r\n                <AiOutlineArrowRight size={20} />\r\n              </Button>\r\n            </Link>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  const row = [];\r\n\r\n  refundOrders &&\r\n  refundOrders.forEach((item) => {\r\n      row.push({\r\n        id: item._id,\r\n        itemsQty: item.cart.length,\r\n        total: \"US$ \" + item.totalPrice,\r\n        status: item.status,\r\n      });\r\n    });\r\n\r\n  return (\r\n    <>\r\n      {isLoading ? (\r\n        <Loader />\r\n      ) : (\r\n        <div className=\"w-full mx-8 pt-1 mt-10 bg-white\">\r\n          <DataGrid\r\n            rows={row}\r\n            columns={columns}\r\n            pageSize={10}\r\n            disableSelectionOnClick\r\n            autoHeight\r\n          />\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AllRefundOrders;\r\n","F:\\Projects\\E-shop2\\frontend\\src\\components\\Shop\\DashboardHero.jsx",["652"],[],"import React, { useEffect, useState } from \"react\";\r\nimport { AiOutlineArrowRight, AiOutlineMoneyCollect } from \"react-icons/ai\";\r\nimport styles from \"../../styles/styles\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { MdBorderClear } from \"react-icons/md\";\r\nimport { DataGrid } from \"@material-ui/data-grid\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getAllOrdersOfShop } from \"../../redux/actions/order\";\r\nimport { getAllProductsShop } from \"../../redux/actions/product\";\r\nimport { Button } from \"@material-ui/core\";\r\n\r\nconst DashboardHero = () => {\r\n  const dispatch = useDispatch();\r\n  const { orders } = useSelector((state) => state.order);\r\n  const { seller } = useSelector((state) => state.seller);\r\n  const { products } = useSelector((state) => state.products);\r\n  const [deliveredOrder, setDeliveredOrder] = useState(null);\r\n\r\n  useEffect(() => {\r\n    dispatch(getAllOrdersOfShop(seller._id));\r\n    dispatch(getAllProductsShop(seller._id));\r\n\r\n    const orderData =\r\n      orders && orders.filter((item) => item.status === \"Delivered\");\r\n    setDeliveredOrder(orderData);\r\n  }, [dispatch]);\r\n\r\n  const totalEarningWithoutTax =\r\n    deliveredOrder ?\r\n    deliveredOrder.reduce((acc, item) => acc + item.totalPrice, 0) : 0;\r\n\r\n  const serviceCharge = totalEarningWithoutTax * 0.1 || 0;\r\n  const availableBalance = (totalEarningWithoutTax - serviceCharge).toFixed(2) || 0;\r\n\r\n  const columns = [\r\n    { field: \"id\", headerName: \"Order ID\", minWidth: 150, flex: 0.7 },\r\n\r\n    {\r\n      field: \"status\",\r\n      headerName: \"Status\",\r\n      minWidth: 130,\r\n      flex: 0.7,\r\n      cellClassName: (params) => {\r\n        return params.getValue(params.id, \"status\") === \"Delivered\"\r\n          ? \"greenColor\"\r\n          : \"redColor\";\r\n      },\r\n    },\r\n    {\r\n      field: \"itemsQty\",\r\n      headerName: \"Items Qty\",\r\n      type: \"number\",\r\n      minWidth: 130,\r\n      flex: 0.7,\r\n    },\r\n\r\n    {\r\n      field: \"total\",\r\n      headerName: \"Total\",\r\n      type: \"number\",\r\n      minWidth: 130,\r\n      flex: 0.8,\r\n    },\r\n\r\n    {\r\n      field: \" \",\r\n      flex: 1,\r\n      minWidth: 150,\r\n      headerName: \"\",\r\n      type: \"number\",\r\n      sortable: false,\r\n      renderCell: (params) => {\r\n        return (\r\n          <>\r\n            <Link to={`/order/${params.id}`}>\r\n              <Button>\r\n                <AiOutlineArrowRight size={20} />\r\n              </Button>\r\n            </Link>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  const row = [];\r\n\r\n  orders &&\r\n    orders.forEach((item) => {\r\n      row.push({\r\n        id: item._id,\r\n        itemsQty: item.cart.reduce((acc, item) => acc + item.qty, 0),\r\n        total: item.totalPrice + \"$\",\r\n        status: item.status,\r\n      });\r\n    });\r\n\r\n  return (\r\n    <div className=\"w-full p-8\">\r\n      <h3 className=\"text-[22px] font-Poppins pb-2\">Overview</h3>\r\n      <div className=\"w-full block 800px:flex items-center justify-between\">\r\n        <div className=\"w-full mb-4 800px:w-[30%] min-h-[20vh] bg-white shadow rounded px-2 py-5\">\r\n          <div className=\"flex items-center\">\r\n            <AiOutlineMoneyCollect\r\n              size={30}\r\n              className=\"mr-2\"\r\n              fill=\"#00000085\"\r\n            />\r\n            <h3\r\n              className={`${styles.productTitle} !text-[18px] leading-5 !font-[400] text-[#00000085]`}\r\n            >\r\n              Account balance{\" \"}\r\n              <span className=\"text-[16px]\">(with 10% service charge)</span>\r\n            </h3>\r\n          </div>\r\n          <h5 className=\"pt-2 pl-[36px] text-[22px] font-[500]\">\r\n            ${availableBalance}\r\n          </h5>\r\n          <Link to=\"/dashboard-withdraw-money\">\r\n            <h5 className=\"pt-4 pl-2 text-[#077f9c]\">Withdraw money</h5>\r\n          </Link>\r\n        </div>\r\n\r\n        <div className=\"w-full mb-4 800px:w-[30%] min-h-[20vh] bg-white shadow rounded px-2 py-5\">\r\n          <div className=\"flex items-center\">\r\n            <MdBorderClear size={30} className=\"mr-2\" fill=\"#00000085\" />\r\n            <h3\r\n              className={`${styles.productTitle} !text-[18px] leading-5 !font-[400] text-[#00000085]`}\r\n            >\r\n              All orders\r\n            </h3>\r\n          </div>\r\n          <h5 className=\"pt-2 pl-[36px] text-[22px] font-[500]\">{orders && orders.length}</h5>\r\n          <Link to=\"/dashboard-orders\">\r\n            <h5 className=\"pt-4 pl-2 text-[#077f9c]\">View orders</h5>\r\n          </Link>\r\n        </div>\r\n\r\n        <div className=\"w-full mb-4 800px:w-[30%] min-h-[20vh] bg-white shadow rounded px-2 py-5\">\r\n          <div className=\"flex items-center\">\r\n            <AiOutlineMoneyCollect\r\n              size={30}\r\n              className=\"mr-2\"\r\n              fill=\"#00000085\"\r\n            />\r\n            <h3\r\n              className={`${styles.productTitle} !text-[18px] leading-5 !font-[400] text-[#00000085]`}\r\n            >\r\n              All products\r\n            </h3>\r\n          </div>\r\n          <h5 className=\"pt-2 pl-[36px] text-[22px] font-[500]\">{products && products.length}</h5>\r\n          <Link to=\"/dashboard-products\">\r\n            <h5 className=\"pt-4 pl-2 text-[#077f9c]\">View products</h5>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n\r\n      <br />\r\n      <h3 className=\"text-[22px] font-Poppins pb-2\">Latest orders</h3>\r\n      <div className=\"w-full min-h-[45vh] bg-white rounded\">\r\n        <DataGrid\r\n            rows={row}\r\n            columns={columns}\r\n            pageSize={10}\r\n            disableSelectionOnClick\r\n            autoHeight\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DashboardHero;\r\n","F:\\Projects\\E-shop2\\frontend\\src\\pages\\Shop\\ShopSettingsPage.jsx",[],[],"F:\\Projects\\E-shop2\\frontend\\src\\components\\Shop\\ShopSettings.jsx",["653"],[],"import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { backend_url, server } from \"../../server\";\r\nimport { AiOutlineCamera } from \"react-icons/ai\";\r\nimport styles from \"../../styles/styles\";\r\nimport axios from \"axios\";\r\nimport { loadSeller } from \"../../redux/actions/user\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst ShopSettings = () => {\r\n  const { seller } = useSelector((state) => state.seller);\r\n  const [avatar, setAvatar] = useState();\r\n  const [name, setName] = useState(seller && seller.name);\r\n  const [description, setDescription] = useState(\r\n    seller && seller.description ? seller.description : \"\"\r\n  );\r\n  const [address, setAddress] = useState(seller && seller.address);\r\n  const [phoneNumber, setPhoneNumber] = useState(seller && seller.phoneNumber);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleImage = async (e) => {\r\n    e.preventDefault();\r\n    const file = e.target.files[0];\r\n    setAvatar(file);\r\n\r\n    const formData = new FormData();\r\n\r\n    formData.append(\"image\", e.target.files[0]);\r\n\r\n    await axios.put(`${server}/shop/update-shop-avatar`, formData, {\r\n        headers: {\r\n            \"Content-Type\": \"multipart/form-data\"\r\n        },\r\n        withCredentials: true,\r\n    }).then((res) => {\r\n        dispatch(loadSeller());\r\n        toast.success(\"Avatar updated successfully\");\r\n    }).catch((error) => {\r\n        toast.error(error.response.data.message);\r\n    })\r\n  };\r\n\r\n  const updateHandler = async (e) => {\r\n    e.preventDefault();\r\n\r\n    await axios.put(`${server}/shop/update-shop-info`, {\r\n        name,\r\n        address,\r\n        description,\r\n        phoneNumber,\r\n    }, {withCredentials: true}).then((res) => {\r\n        toast.success(\"Shop info updated successfully\");\r\n        dispatch(loadSeller());\r\n    }).catch((error) => {\r\n        toast.error(error.response.data.message);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"w-full min-h-screen flex flex-col items-center\">\r\n      <div className=\"flex w-full 800px:w-[80%] flex-col justify-center my-5\">\r\n        <div className=\"w-full flex items-center justify-center\">\r\n          <div className=\"relative\">\r\n            <img\r\n              src={avatar ? URL.createObjectURL(avatar) : `${backend_url}/${seller.avatar}`}\r\n              alt=\"\"\r\n              className=\"w-[150px] h-[150px] rounded-full cursor-pointer\"\r\n            />\r\n            <div className=\"w-[30px] h-[30px] bg-[#E3E9EE] rounded-full flex items-center justify-center cursor-pointer absolute bottom-[6px] right-[15px]\">\r\n              <input\r\n                type=\"file\"\r\n                id=\"image\"\r\n                className=\"hidden\"\r\n                onChange={handleImage}\r\n              />\r\n              <label htmlFor=\"image\">\r\n                <AiOutlineCamera />\r\n              </label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* shop info */}\r\n        <form\r\n          aria-aria-required={true}\r\n          className=\"flex flex-col items-center\"\r\n          onSubmit={updateHandler}\r\n        >\r\n          <div className=\"w-[100%] flex items-center flex-col 800px:w-[50%] mt-5\">\r\n            <div className=\"w-full pl-[3%]\">\r\n              <label className=\"block pb-2\">Shop name</label>\r\n            </div>\r\n            <input\r\n              type=\"name\"\r\n              placeholder={`${seller.name}`}\r\n              value={name}\r\n              onChange={(e) => setName(e.target.value)}\r\n              className={`${styles.input} !w-[95%] mb-4 800px:mb-0`}\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"w-[100%] flex items-center flex-col 800px:w-[50%] mt-5\">\r\n            <div className=\"w-full pl-[3%]\">\r\n              <label className=\"block pb-2\">Shop description</label>\r\n            </div>\r\n            <input\r\n              type=\"name\"\r\n              placeholder={`${\r\n                seller?.description\r\n                  ? seller.description\r\n                  : \"Enter your shop description\"\r\n              }`}\r\n              value={description}\r\n              onChange={(e) => setDescription(e.target.value)}\r\n              className={`${styles.input} !w-[95%] mb-4 800px:mb-0`}\r\n            />\r\n          </div>\r\n          <div className=\"w-[100%] flex items-center flex-col 800px:w-[50%] mt-5\">\r\n            <div className=\"w-full pl-[3%]\">\r\n              <label className=\"block pb-2\">Shop address</label>\r\n            </div>\r\n            <input\r\n              type=\"name\"\r\n              placeholder={seller?.address}\r\n              value={address}\r\n              onChange={(e) => setAddress(e.target.value)}\r\n              className={`${styles.input} !w-[95%] mb-4 800px:mb-0`}\r\n              required\r\n            />\r\n          </div>\r\n\r\n          <div className=\"w-[100%] flex items-center flex-col 800px:w-[50%] mt-5\">\r\n            <div className=\"w-full pl-[3%]\">\r\n              <label className=\"block pb-2\">Shop phone number</label>\r\n            </div>\r\n            <input\r\n              type=\"number\"\r\n              placeholder={seller?.phoneNumber}\r\n              value={phoneNumber}\r\n              onChange={(e) => setPhoneNumber(e.target.value)}\r\n              className={`${styles.input} !w-[95%] mb-4 800px:mb-0`}\r\n              required\r\n            />\r\n          </div>\r\n\r\n          <div className=\"w-[100%] flex items-center flex-col 800px:w-[50%] mt-5\">\r\n            <input\r\n              type=\"submit\"\r\n              value=\"Update shop\"\r\n              className={`${styles.input} !w-[95%] mb-4 800px:mb-0`}\r\n              required\r\n              readOnly\r\n            />\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ShopSettings;\r\n","F:\\Projects\\E-shop2\\frontend\\src\\pages\\Shop\\ShopWithDrawMoneyPage.jsx",[],[],"F:\\Projects\\E-shop2\\frontend\\src\\components\\Shop\\WithDrawMoney.jsx",["654"],[],"import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getAllOrdersOfShop } from \"../../redux/actions/order\";\r\nimport { getAllProductsShop } from \"../../redux/actions/product\";\r\nimport styles from \"../../styles/styles\";\r\n\r\nconst WithDrawMoney = () => {\r\n  const dispatch = useDispatch();\r\n  const { seller } = useSelector((state) => state.seller);\r\n  const { orders } = useSelector((state) => state.order);\r\n  const [deliveredOrder, setDeliveredOrder] = useState(null);\r\n\r\n  useEffect(() => {\r\n    dispatch(getAllOrdersOfShop(seller._id));\r\n    dispatch(getAllProductsShop(seller._id));\r\n\r\n    const orderData =\r\n      orders && orders.filter((item) => item.status === \"Delivered\");\r\n    setDeliveredOrder(orderData);\r\n  }, [dispatch]);\r\n\r\n  const totalEarningWithoutTax =\r\n    deliveredOrder &&\r\n    deliveredOrder.reduce((acc, item) => acc + item.totalPrice, 0);\r\n\r\n  const serviceCharge = totalEarningWithoutTax * 0.1;\r\n  const availableBalance = totalEarningWithoutTax - serviceCharge.toFixed(2);\r\n  return (\r\n    <div className=\"w-full h-[90vh] p-8\">\r\n      <div className=\"w-full bg-white h-full rounded flex items-center justify-center flex-col\">\r\n        <h5 className=\"text-[20px] pb-4\">\r\n          Available balance: ${availableBalance}\r\n        </h5>\r\n        <div\r\n          className={`${styles.button} text-white !h-[42px] !rounded`}\r\n        //   onClick={() => (availableBalance < 50 ? error() : setOpen(true))}\r\n        >\r\n          Withdraw\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WithDrawMoney;\r\n","F:\\Projects\\E-shop2\\frontend\\src\\pages\\Shop\\ShopInboxPage.jsx",[],[],"F:\\Projects\\E-shop2\\frontend\\src\\components\\Shop\\DashboardMessages.jsx",["655","656"],["657","658"],"import axios from \"axios\";\r\nimport React, { useEffect, useReducer, useRef, useState } from \"react\";\r\nimport { backend_url, server } from \"../../server\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { AiOutlineArrowRight, AiOutlineSend } from \"react-icons/ai\";\r\nimport styles from \"../../styles/styles\";\r\nimport { TfiGallery } from \"react-icons/tfi\";\r\nimport socketIO from \"socket.io-client\";\r\nimport { format } from \"timeago.js\";\r\nconst ENDPOINT = \"http://localhost:4000/\";\r\nconst socketId = socketIO(ENDPOINT, { transports: [\"websocket\"] });\r\n\r\nconst DashboardMessages = () => {\r\n  const { seller, isLoading } = useSelector((state) => state.seller);\r\n  const [conversations, setConversations] = useState([]);\r\n  const [arrivalMessage, setArrivalMessage] = useState(null);\r\n  const [currentChat, setCurrentChat] = useState();\r\n  const [messages, setMessages] = useState([]);\r\n  const [newMessage, setNewMessage] = useState(\"\");\r\n  const [userData, setUserData] = useState(null);\r\n  const [onlineUsers, setOnlineUsers] = useState([]);\r\n  const [activeStatus, setActiveStatus] = useState(false);\r\n  const [open, setOpen] = useState(false);\r\n  const [images, setImages] = useState();\r\n  const scrollRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    socketId.on(\"getMessage\", (data) => {\r\n      setArrivalMessage({\r\n        sender: data.senderId,\r\n        text: data.text,\r\n        createdAt: Date.now(),\r\n      });\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    arrivalMessage &&\r\n      currentChat?.members.includes(arrivalMessage.sender) &&\r\n      setMessages((prev) => [...prev, arrivalMessage]);\r\n  }, [arrivalMessage, currentChat]);\r\n\r\n  useEffect(() => {\r\n    const getConversation = async () => {\r\n      try {\r\n        const response = await axios.get(\r\n          `${server}/conversation/get-all-conversation-seller/${seller?._id}`,\r\n          {\r\n            withCredentials: true,\r\n          }\r\n        );\r\n\r\n        setConversations(response.data.conversations);\r\n      } catch (error) {\r\n        // console.log(error);\r\n      }\r\n    };\r\n    getConversation();\r\n  }, [seller, messages]);\r\n\r\n  useEffect(() => {\r\n    if (seller) {\r\n      const userId = seller?._id;\r\n      socketId.emit(\"addUser\", userId);\r\n      socketId.on(\"getUsers\", (data) => {\r\n        setOnlineUsers(data);\r\n      });\r\n    }\r\n  }, [seller]);\r\n\r\n  const onlineCheck = (chat) => {\r\n    const chatMembers = chat.members.find((member) => member !== seller?._id);\r\n    const online = onlineUsers.find((user) => user.userId === chatMembers);\r\n\r\n    return online ? true : false;\r\n  };\r\n\r\n  // get messages\r\n  useEffect(() => {\r\n    const getMessage = async () => {\r\n      try {\r\n        const response = await axios.get(\r\n          `${server}/message/get-all-messages/${currentChat?._id}`\r\n        );\r\n        setMessages(response.data.messages);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    };\r\n    getMessage();\r\n  }, [currentChat]);\r\n\r\n  // create new message\r\n  const sendMessageHandler = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const message = {\r\n      sender: seller._id,\r\n      text: newMessage,\r\n      conversationId: currentChat._id,\r\n    };\r\n    const receiverId = currentChat.members.find(\r\n      (member) => member.id !== seller._id\r\n    );\r\n\r\n    socketId.emit(\"sendMessage\", {\r\n      senderId: seller._id,\r\n      receiverId,\r\n      text: newMessage,\r\n    });\r\n\r\n    try {\r\n      if (newMessage !== \"\") {\r\n        await axios\r\n          .post(`${server}/message/create-new-message`, message)\r\n          .then((res) => {\r\n            setMessages([...messages, res.data.message]);\r\n            updateLastMessage();\r\n          })\r\n          .catch((error) => {\r\n            console.log(error);\r\n          });\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const updateLastMessage = async () => {\r\n    socketId.emit(\"updateLastMessage\", {\r\n      lastMessage: newMessage,\r\n      lastMessageId: seller._id,\r\n    });\r\n\r\n    await axios\r\n      .put(`${server}/conversation/update-last-message/${currentChat._id}`, {\r\n        lastMessage: newMessage,\r\n        lastMessageId: seller._id,\r\n      })\r\n      .then((res) => {\r\n        console.log(res.data.conversation);\r\n        setNewMessage(\"\");\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const handleImageUpload = async (e) => {\r\n    const file = e.target.files[0];\r\n    setImages(file);\r\n    imageSendingHandler(file);\r\n  };\r\n\r\n  const imageSendingHandler = async (e) => {\r\n    const formData = new FormData();\r\n\r\n    formData.append(\"sender\", seller._id);\r\n    formData.append(\"text\", newMessage);\r\n    formData.append(\"images\", e);\r\n    formData.append(\"conversationId\", currentChat._id);\r\n\r\n    const receiverId = currentChat.members.find(\r\n      (member) => member !== seller._id\r\n    );\r\n\r\n    socketId.emit(\"sendMessage\", {\r\n      senderId: seller._id,\r\n      receiverId,\r\n      images: e,\r\n    });\r\n\r\n    try {\r\n      await axios\r\n        .post(`${server}/message/create-new-message`, formData)\r\n        .then((res) => {\r\n          setImages();\r\n          setMessages([...messages, res.data.message]);\r\n          updateLastMessageForImage();\r\n        });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const updateLastMessageForImage = async () => {\r\n    await axios.put(\r\n      `${server}/conversation/update-last-message/${currentChat._id}`,\r\n      {\r\n        lastMessage: \"Photo\",\r\n        lastMessageId: seller._id,\r\n      }\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    scrollRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n  }, [messages]);\r\n\r\n  return (\r\n    <div className=\"w-[90%] bg-white m-5 h-[85vh] overflow-y-scroll rounded\">\r\n      {!open && (\r\n        <>\r\n          <h1 className=\"text-center text-[30px] py-3 font-Poppins\">\r\n            All Messages\r\n          </h1>\r\n          {/* All messages list */}\r\n          {conversations &&\r\n            conversations.map((item, index) => (\r\n              <MessageList\r\n                data={item}\r\n                key={index}\r\n                index={index}\r\n                setOpen={setOpen}\r\n                setCurrentChat={setCurrentChat}\r\n                me={seller._id}\r\n                setUserData={setUserData}\r\n                userData={userData}\r\n                online={onlineCheck(item)}\r\n                setActiveStatus={setActiveStatus}\r\n                isLoading={isLoading}\r\n              />\r\n            ))}\r\n        </>\r\n      )}\r\n\r\n      {open && (\r\n        <SellerInbox\r\n          setOpen={setOpen}\r\n          newMessage={newMessage}\r\n          setNewMessage={setNewMessage}\r\n          sendMessageHandler={sendMessageHandler}\r\n          messages={messages}\r\n          sellerId={seller._id}\r\n          userData={userData}\r\n          activeStatus={activeStatus}\r\n          scrollRef={scrollRef}\r\n          setMessages={setMessages}\r\n          handleImageUpload={handleImageUpload}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst MessageList = ({\r\n  data,\r\n  index,\r\n  setOpen,\r\n  setCurrentChat,\r\n  me,\r\n  setUserData,\r\n  online,\r\n  setActiveStatus,\r\n  isLoading,\r\n}) => {\r\n  const [user, setUser] = useState([]);\r\n  const navigate = useNavigate();\r\n  const handleClick = (id) => {\r\n    navigate(`/dashboard-messages?${id}`);\r\n    setOpen(true);\r\n  };\r\n  const [active, setActive] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const userId = data.members && data.members.find((user) => user !== me);\r\n\r\n    const getUser = async () => {\r\n      try {\r\n        const res = await axios.get(`${server}/user/user-info/${userId}`);\r\n        setUser(res.data.user);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    };\r\n    getUser();\r\n  }, [me, data]);\r\n\r\n  return (\r\n    <div\r\n      className={`w-full flex p-3 px-3 ${\r\n        active === index ? \"bg-[#00000010]\" : \"bg-transparent\"\r\n      }  cursor-pointer`}\r\n      onClick={(e) =>\r\n        setActive(index) ||\r\n        handleClick(data._id) ||\r\n        setCurrentChat(data) ||\r\n        setUserData(user) ||\r\n        setActiveStatus(online)\r\n      }\r\n    >\r\n      <div className=\"relative\">\r\n        <img\r\n          src={`${backend_url}${user?.avatar}`}\r\n          alt=\"\"\r\n          className=\"w-[50px] h-[50px] rounded-full\"\r\n        />\r\n        {online ? (\r\n          <div className=\"w-[12px] h-[12px] bg-green-400 rounded-full absolute top-[2px] right-[2px]\" />\r\n        ) : (\r\n          <div className=\"w-[12px] h-[12px] bg-[#c7b9b9] rounded-full absolute top-[2px] right-[2px]\" />\r\n        )}\r\n      </div>\r\n      <div className=\"pl-3\">\r\n        <h1 className=\"text-[18px]\">{user?.name}</h1>\r\n        <p className=\"text-[16px] text-[#000c]\">\r\n          {data?.lastMessageId !== user?._id\r\n            ? \"You:\"\r\n            : (user?.name && user?.name.split(\" \")[0] + \": \") || \"\"}{\" \"}\r\n          {data?.lastMessage}\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst SellerInbox = ({\r\n  scrollRef,\r\n  setOpen,\r\n  newMessage,\r\n  setNewMessage,\r\n  sendMessageHandler,\r\n  messages,\r\n  sellerId,\r\n  userData,\r\n  activeStatus,\r\n  handleImageUpload,\r\n}) => {\r\n  return (\r\n    <div className=\"w-full min-h-full flex flex-col justify-between\">\r\n      {/* message header */}\r\n      <div className=\"w-full flex p-3 items-center justify-between bg-slate-200\">\r\n        <div className=\"flex\">\r\n          <img\r\n            src={`${backend_url}${userData?.avatar}`}\r\n            alt=\"\"\r\n            className=\"w-[60px] h-[60px] rounded-full\"\r\n          />\r\n          <div className=\"pl-3\">\r\n            <h1 className=\"text-[18px] font-[600]\">{userData?.name}</h1>\r\n            <h1>{activeStatus ? \"Active Now\" : \"\"}</h1>\r\n          </div>\r\n        </div>\r\n        <AiOutlineArrowRight\r\n          size={20}\r\n          className=\"cursor-pointer\"\r\n          onClick={() => setOpen(false)}\r\n        />\r\n      </div>\r\n\r\n      {/* messages */}\r\n      <div className=\"px-3 h-[65vh] py-3 overflow-y-scroll\">\r\n        {messages &&\r\n          messages.map((item, index) => (\r\n            <div\r\n              className={`flex w-full my-2 ${\r\n                item.sender === sellerId ? \"justify-end\" : \"justify-start\"\r\n              }`}\r\n              ref={scrollRef}\r\n            >\r\n              {item.sender !== sellerId && (\r\n                <img\r\n                  src={`${backend_url}${userData?.avatar}`}\r\n                  className=\"w-[40px] h-[40px] rounded-full mr-3\"\r\n                  alt=\"\"\r\n                />\r\n              )}\r\n              {item.images && (\r\n                // eslint-disable-next-line jsx-a11y/alt-text\r\n                <img\r\n                  src={`${backend_url}${item.images}`}\r\n                  className=\"w-[300px] h-[300px] object-cover rounded-[10px] mr-2\"\r\n                />\r\n              )}\r\n              {item.text !== \"\" && (\r\n                <div>\r\n                  <div\r\n                    className={`w-max p-2 rounded ${\r\n                      item.sender === sellerId\r\n                        ? \"bg-[#38c776] text-[#fff] h-min\"\r\n                        : \"bg-[#857d7d2c] text-[#000] h-min\"\r\n                    }`}\r\n                  >\r\n                    <p>{item.text}</p>\r\n                  </div>\r\n\r\n                  <p className=\"text-[12px] text-[#000000d3] pt-1\">\r\n                    {format(item.createdAt)}\r\n                  </p>\r\n                </div>\r\n              )}\r\n            </div>\r\n          ))}\r\n      </div>\r\n\r\n      {/* send message input */}\r\n      {/* eslint-disable-next-line jsx-a11y/role-supports-aria-props */}\r\n      <form\r\n        aria-required={true}\r\n        className=\"p-3 relative w-full flex justify-between items-center\"\r\n        onSubmit={sendMessageHandler}\r\n      >\r\n        <div className=\"w-[30px]\">\r\n          <input\r\n            type=\"file\"\r\n            name=\"\"\r\n            id=\"image\"\r\n            className=\"hidden\"\r\n            onChange={handleImageUpload}\r\n          />\r\n          <label htmlFor=\"image\">\r\n            <TfiGallery className=\"cursor-pointer\" size={20} />\r\n          </label>\r\n        </div>\r\n        <div className=\"w-full\">\r\n          <input\r\n            type=\"text\"\r\n            required\r\n            placeholder=\"Enter your message...\"\r\n            value={newMessage}\r\n            onChange={(e) => setNewMessage(e.target.value)}\r\n            className={`${styles.input}`}\r\n          />\r\n          <input type=\"submit\" value=\"Send\" className=\"hidden\" id=\"send\" />\r\n          <label htmlFor=\"send\">\r\n            <AiOutlineSend\r\n              size={20}\r\n              className=\"absolute right-4 top-5 cursor-pointer\"\r\n            />\r\n          </label>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DashboardMessages;\r\n","F:\\Projects\\E-shop2\\frontend\\src\\pages\\UserInbox.jsx",["659","660"],["661","662"],"import React, { useEffect, useRef, useState } from \"react\";\r\nimport Header from \"../components/Layout/Header\";\r\nimport { useSelector } from \"react-redux\";\r\nimport socketIO from \"socket.io-client\";\r\nimport { format } from \"timeago.js\";\r\nimport { backend_url, server } from \"../server\";\r\nimport axios from \"axios\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { AiOutlineArrowRight, AiOutlineSend } from \"react-icons/ai\";\r\nimport { TfiGallery } from \"react-icons/tfi\";\r\nimport styles from \"../styles/styles\";\r\nconst ENDPOINT = \"http://localhost:4000/\";\r\nconst socketId = socketIO(ENDPOINT, { transports: [\"websocket\"] });\r\n\r\nconst UserInbox = () => {\r\n  const { user, loading } = useSelector((state) => state.user);\r\n  const [conversations, setConversations] = useState([]);\r\n  const [arrivalMessage, setArrivalMessage] = useState(null);\r\n  const [currentChat, setCurrentChat] = useState();\r\n  const [messages, setMessages] = useState([]);\r\n  const [newMessage, setNewMessage] = useState(\"\");\r\n  const [userData, setUserData] = useState(null);\r\n  const [onlineUsers, setOnlineUsers] = useState([]);\r\n  const [images, setImages] = useState();\r\n  const [activeStatus, setActiveStatus] = useState(false);\r\n  const [open, setOpen] = useState(false);\r\n  const scrollRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    socketId.on(\"getMessage\", (data) => {\r\n      setArrivalMessage({\r\n        sender: data.senderId,\r\n        text: data.text,\r\n        createdAt: Date.now(),\r\n      });\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    arrivalMessage &&\r\n      currentChat?.members.includes(arrivalMessage.sender) &&\r\n      setMessages((prev) => [...prev, arrivalMessage]);\r\n  }, [arrivalMessage, currentChat]);\r\n\r\n  useEffect(() => {\r\n    const getConversation = async () => {\r\n      try {\r\n        const response = await axios.get(\r\n          `${server}/conversation/get-all-conversation-user/${user?._id}`,\r\n          {\r\n            withCredentials: true,\r\n          }\r\n        );\r\n\r\n        setConversations(response.data.conversations);\r\n      } catch (error) {\r\n        // console.log(error);\r\n      }\r\n    };\r\n    getConversation();\r\n  }, [user, messages]);\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      const userId = user?._id;\r\n      socketId.emit(\"addUser\", userId);\r\n      socketId.on(\"getUsers\", (data) => {\r\n        setOnlineUsers(data);\r\n      });\r\n    }\r\n  }, [user]);\r\n\r\n  const onlineCheck = (chat) => {\r\n    const chatMembers = chat.members.find((member) => member !== user?._id);\r\n    const online = onlineUsers.find((user) => user.userId === chatMembers);\r\n\r\n    return online ? true : false;\r\n  };\r\n\r\n  // get all messages\r\n  useEffect(() => {\r\n    const getMessage = async () => {\r\n      try {\r\n        const response = await axios.get(\r\n          `${server}/message/get-all-messages/${currentChat?._id}`\r\n        );\r\n        setMessages(response.data.messages);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    };\r\n    getMessage();\r\n  }, [currentChat]);\r\n\r\n  // create new message\r\n  const sendMessageHandler = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const message = {\r\n      sender: user._id,\r\n      text: newMessage,\r\n      conversationId: currentChat._id,\r\n    };\r\n    const receiverId = currentChat.members.find(\r\n      (member) => member !== user?._id\r\n    );\r\n\r\n    socketId.emit(\"sendMessage\", {\r\n      senderId: user?._id,\r\n      receiverId,\r\n      text: newMessage,\r\n    });\r\n\r\n    try {\r\n      if (newMessage !== \"\") {\r\n        await axios\r\n          .post(`${server}/message/create-new-message`, message)\r\n          .then((res) => {\r\n            setMessages([...messages, res.data.message]);\r\n            updateLastMessage();\r\n          })\r\n          .catch((error) => {\r\n            console.log(error);\r\n          });\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const updateLastMessage = async () => {\r\n    socketId.emit(\"updateLastMessage\", {\r\n      lastMessage: newMessage,\r\n      lastMessageId: user._id,\r\n    });\r\n\r\n    await axios\r\n      .put(`${server}/conversation/update-last-message/${currentChat._id}`, {\r\n        lastMessage: newMessage,\r\n        lastMessageId: user._id,\r\n      })\r\n      .then((res) => {\r\n        setNewMessage(\"\");\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const handleImageUpload = async (e) => {\r\n    const file = e.target.files[0];\r\n    setImages(file);\r\n    imageSendingHandler(file);\r\n  };\r\n\r\n  const imageSendingHandler = async (e) => {\r\n\r\n    const formData = new FormData();\r\n\r\n    formData.append(\"sender\", user._id);\r\n    formData.append(\"text\", newMessage);\r\n    formData.append(\"images\", e);\r\n    formData.append(\"conversationId\", currentChat._id);\r\n\r\n    const receiverId = currentChat.members.find(\r\n      (member) => member !== user._id\r\n    );\r\n\r\n    socketId.emit(\"sendMessage\", {\r\n      senderId: user._id,\r\n      receiverId,\r\n      images: e,\r\n    });\r\n\r\n    try {\r\n      await axios\r\n        .post(`${server}/message/create-new-message`, formData)\r\n        .then((res) => {\r\n          setImages();\r\n          setMessages([...messages, res.data.message]);\r\n          updateLastMessageForImage();\r\n        });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const updateLastMessageForImage = async () => {\r\n    await axios.put(\r\n      `${server}/conversation/update-last-message/${currentChat._id}`,\r\n      {\r\n        lastMessage: 'Photo',\r\n        lastMessageId: user._id,\r\n      }\r\n    );\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n    scrollRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n  }, [messages]);\r\n\r\n  return (\r\n    <div className=\"w-full\">\r\n      {!open && (\r\n        <>\r\n          <Header />\r\n          <h1 className=\"text-center text-[30px] py-3 font-Poppins\">\r\n            All Messages\r\n          </h1>\r\n          {/* All messages list */}\r\n          {conversations &&\r\n            conversations.map((item, index) => (\r\n              <MessageList\r\n              data={item}\r\n              key={index}\r\n              index={index}\r\n              setOpen={setOpen}\r\n              setCurrentChat={setCurrentChat}\r\n              me={user?._id}\r\n              setUserData={setUserData}\r\n              userData={userData}\r\n              online={onlineCheck(item)}\r\n              setActiveStatus={setActiveStatus}\r\n              loading={loading}\r\n              />\r\n            ))}\r\n        </>\r\n      )}\r\n\r\n      {open && (\r\n        <SellerInbox\r\n          setOpen={setOpen}\r\n          newMessage={newMessage}\r\n          setNewMessage={setNewMessage}\r\n          sendMessageHandler={sendMessageHandler}\r\n          messages={messages}\r\n          sellerId={user._id}\r\n          userData={userData}\r\n          activeStatus={activeStatus}\r\n          scrollRef={scrollRef}\r\n          handleImageUpload={handleImageUpload}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst MessageList = ({\r\n  data,\r\n  index,\r\n  setOpen,\r\n  setCurrentChat,\r\n  me,\r\n  userData,\r\n  setUserData,\r\n  online,\r\n  setActiveStatus,\r\n  loading,\r\n}) => {\r\n  const [active, setActive] = useState(0);\r\n  const [user, setUser] = useState([]);\r\n  const navigate = useNavigate();\r\n  const handleClick = (id) => {\r\n    navigate(`/inbox?${id}`);\r\n    setOpen(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setActiveStatus(online);\r\n    const userId = data.members && data.members.find((user) => user !== me);\r\n    const getUser = async () => {\r\n      try {\r\n        const res = await axios.get(`${server}/shop/get-shop-info/${userId}`);\r\n        setUser(res.data.shop);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    };\r\n    getUser();\r\n  }, [me, data]);\r\n\r\n  return (\r\n    <div\r\n      className={`w-full flex p-2 px-3 ${\r\n        active === index ? \"bg-[#00000010]\" : \"bg-transparent\"\r\n      }  cursor-pointer`}\r\n      onClick={(e) =>\r\n        setActive(index) ||\r\n        handleClick(data._id) ||\r\n        setCurrentChat(data) ||\r\n        setUserData(user) ||\r\n        setActiveStatus(online)\r\n      }\r\n    >\r\n      <div className=\"relative\">\r\n        <img\r\n          src={`${backend_url}${user?.avatar}`}\r\n          alt=\"\"\r\n          className=\"w-[50px] h-[50px] rounded-full\"\r\n        />\r\n        {online ? (\r\n          <div className=\"w-[10px] h-[10px] bg-green-400 rounded-full absolute bottom-[2px] right-[2px]\" />\r\n        ) : (\r\n          <div className=\"\" />\r\n        )}\r\n      </div>\r\n      <div className=\"pl-3\">\r\n        <h1 className=\"text-[18px]\">{user?.name}</h1>\r\n        <p className=\"text-[16px] text-[#000c]\">\r\n          {data?.lastMessageId !== userData?._id\r\n            ? \"You:\"\r\n            : userData?.name.split(\" \")[0] + \": \"}{\" \"}\r\n          {data?.lastMessage}\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst SellerInbox = ({\r\n  setOpen,\r\n  newMessage,\r\n  setNewMessage,\r\n  sendMessageHandler,\r\n  messages,\r\n  sellerId,\r\n  userData,\r\n  activeStatus,\r\n  scrollRef,\r\n  handleImageUpload,\r\n}) => {\r\n  return (\r\n    <div className=\"w-[full] min-h-full flex flex-col justify-between p-5\">\r\n      {/* message header */}\r\n      <div className=\"w-full flex p-3 items-center justify-between bg-slate-200\">\r\n        <div className=\"flex\">\r\n          <img\r\n            src={`${backend_url}${userData?.avatar}`}\r\n            alt=\"\"\r\n            className=\"w-[60px] h-[60px] rounded-full\"\r\n          />\r\n          <div className=\"pl-3\">\r\n            <h1 className=\"text-[18px] font-[600]\">{userData?.name}</h1>\r\n            <h1>{activeStatus ? \"Active Now\" : \"\"}</h1>\r\n          </div>\r\n        </div>\r\n        <AiOutlineArrowRight\r\n          size={20}\r\n          className=\"cursor-pointer\"\r\n          onClick={() => setOpen(false)}\r\n        />\r\n      </div>\r\n\r\n      {/* messages */}\r\n      <div className=\"px-3 h-[75vh] py-3 overflow-y-scroll\">\r\n        {messages &&\r\n          messages.map((item, index) => (\r\n            \r\n            <div\r\n              className={`flex w-full my-2 ${\r\n                item.sender === sellerId ? \"justify-end\" : \"justify-start\"\r\n              }`}\r\n              ref={scrollRef}\r\n            >\r\n              {item.sender !== sellerId && (\r\n                <img\r\n                  src={`${backend_url}${userData?.avatar}`}\r\n                  className=\"w-[40px] h-[40px] rounded-full mr-3\"\r\n                  alt=\"\"\r\n                />\r\n              )}\r\n              {item.images && (\r\n                // eslint-disable-next-line jsx-a11y/alt-text\r\n                <img\r\n                  src={`${backend_url}${item.images}`}\r\n                  className=\"w-[300px] h-[300px] object-cover rounded-[10px] mr-2 mb-2\"\r\n                />\r\n              )}\r\n              {item.text !== \"\" && (\r\n                <div>\r\n                  <div\r\n                    className={`w-max p-2 rounded ${\r\n                      item.sender === sellerId\r\n                        ? \"bg-[#38c776] text-[#fff] h-min\"\r\n                        : \"bg-[#857d7d2c] text-[#000] h-min\"\r\n                    }`}\r\n                  >\r\n                    <p>{item.text}</p>\r\n                  </div>\r\n\r\n                  <p className=\"text-[12px] text-[#000000d3] pt-1\">\r\n                    {format(item.createdAt)}\r\n                  </p>\r\n                </div>\r\n              )}\r\n            </div>\r\n          ))}\r\n      </div>\r\n\r\n      {/* send message input */}\r\n      {/* eslint-disable-next-line jsx-a11y/role-supports-aria-props */}\r\n      <form\r\n        aria-required={true}\r\n        className=\"p-3 relative w-full flex justify-between items-center\"\r\n        onSubmit={sendMessageHandler}\r\n      >\r\n        <div className=\"w-[30px]\">\r\n          <input\r\n            type=\"file\"\r\n            name=\"\"\r\n            id=\"image\"\r\n            className=\"hidden\"\r\n            onChange={handleImageUpload}\r\n          />\r\n          <label htmlFor=\"image\">\r\n            <TfiGallery className=\"cursor-pointer\" size={20} />\r\n          </label>\r\n        </div>\r\n        <div className=\"w-full\">\r\n          <input\r\n            type=\"text\"\r\n            required\r\n            placeholder=\"Enter your message...\"\r\n            value={newMessage}\r\n            onChange={(e) => setNewMessage(e.target.value)}\r\n            className={`${styles.input}`}\r\n          />\r\n          <input type=\"submit\" value=\"Send\" className=\"hidden\" id=\"send\" />\r\n          <label htmlFor=\"send\">\r\n            <AiOutlineSend\r\n              size={20}\r\n              className=\"absolute right-4 top-5 cursor-pointer\"\r\n            />\r\n          </label>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserInbox;\r\n",{"ruleId":"663","severity":1,"message":"664","line":2,"column":8,"nodeType":"665","messageId":"666","endLine":2,"endColumn":16},{"ruleId":"663","severity":1,"message":"667","line":1,"column":26,"nodeType":"665","messageId":"666","endLine":1,"endColumn":39},{"ruleId":"668","severity":1,"message":"669","line":14,"column":8,"nodeType":"670","endLine":14,"endColumn":10,"suggestions":"671"},{"ruleId":"668","severity":1,"message":"669","line":14,"column":8,"nodeType":"670","endLine":14,"endColumn":10,"suggestions":"672"},{"ruleId":"668","severity":1,"message":"673","line":27,"column":6,"nodeType":"670","endLine":27,"endColumn":8,"suggestions":"674"},{"ruleId":"663","severity":1,"message":"675","line":5,"column":10,"nodeType":"665","messageId":"666","endLine":5,"endColumn":21},{"ruleId":"663","severity":1,"message":"675","line":4,"column":10,"nodeType":"665","messageId":"666","endLine":4,"endColumn":21},{"ruleId":"663","severity":1,"message":"676","line":5,"column":8,"nodeType":"665","messageId":"666","endLine":5,"endColumn":14},{"ruleId":"663","severity":1,"message":"677","line":8,"column":22,"nodeType":"665","messageId":"666","endLine":8,"endColumn":31},{"ruleId":"668","severity":1,"message":"678","line":25,"column":6,"nodeType":"670","endLine":25,"endColumn":30,"suggestions":"679"},{"ruleId":"668","severity":1,"message":"673","line":24,"column":6,"nodeType":"670","endLine":24,"endColumn":8,"suggestions":"680"},{"ruleId":"668","severity":1,"message":"681","line":14,"column":6,"nodeType":"670","endLine":14,"endColumn":8,"suggestions":"682"},{"ruleId":"668","severity":1,"message":"683","line":14,"column":6,"nodeType":"670","endLine":14,"endColumn":27,"suggestions":"684"},{"ruleId":"685","severity":1,"message":"686","line":319,"column":7,"nodeType":"687","messageId":"688","endLine":319,"endColumn":15},{"ruleId":"685","severity":1,"message":"686","line":350,"column":7,"nodeType":"687","messageId":"688","endLine":350,"endColumn":15},{"ruleId":"685","severity":1,"message":"686","line":412,"column":7,"nodeType":"687","messageId":"688","endLine":412,"endColumn":15},{"ruleId":"685","severity":1,"message":"686","line":443,"column":7,"nodeType":"687","messageId":"688","endLine":443,"endColumn":15},{"ruleId":"668","severity":1,"message":"689","line":30,"column":6,"nodeType":"670","endLine":30,"endColumn":8,"suggestions":"690"},{"ruleId":"663","severity":1,"message":"675","line":4,"column":26,"nodeType":"665","messageId":"666","endLine":4,"endColumn":37},{"ruleId":"668","severity":1,"message":"691","line":20,"column":6,"nodeType":"670","endLine":20,"endColumn":16,"suggestions":"692"},{"ruleId":"668","severity":1,"message":"693","line":19,"column":6,"nodeType":"670","endLine":19,"endColumn":16,"suggestions":"694"},{"ruleId":"663","severity":1,"message":"695","line":1,"column":17,"nodeType":"665","messageId":"666","endLine":1,"endColumn":26},{"ruleId":"663","severity":1,"message":"696","line":2,"column":29,"nodeType":"665","messageId":"666","endLine":2,"endColumn":38},{"ruleId":"668","severity":1,"message":"697","line":43,"column":6,"nodeType":"670","endLine":43,"endColumn":22,"suggestions":"698"},{"ruleId":"663","severity":1,"message":"675","line":2,"column":10,"nodeType":"665","messageId":"666","endLine":2,"endColumn":21},{"ruleId":"668","severity":1,"message":"699","line":14,"column":8,"nodeType":"670","endLine":14,"endColumn":10,"suggestions":"700"},{"ruleId":"663","severity":1,"message":"695","line":1,"column":17,"nodeType":"665","messageId":"666","endLine":1,"endColumn":26},{"ruleId":"663","severity":1,"message":"701","line":32,"column":10,"nodeType":"665","messageId":"666","endLine":32,"endColumn":16},{"ruleId":"668","severity":1,"message":"697","line":44,"column":6,"nodeType":"670","endLine":44,"endColumn":29,"suggestions":"702"},{"ruleId":"703","severity":1,"message":"704","line":103,"column":13,"nodeType":"705","endLine":103,"endColumn":64},{"ruleId":"668","severity":1,"message":"706","line":206,"column":6,"nodeType":"670","endLine":206,"endColumn":8,"suggestions":"707"},{"ruleId":"668","severity":1,"message":"706","line":291,"column":6,"nodeType":"670","endLine":291,"endColumn":8,"suggestions":"708"},{"ruleId":"668","severity":1,"message":"706","line":378,"column":6,"nodeType":"670","endLine":378,"endColumn":8,"suggestions":"709"},{"ruleId":"703","severity":1,"message":"704","line":604,"column":15,"nodeType":"705","endLine":604,"endColumn":78},{"ruleId":"703","severity":1,"message":"704","line":487,"column":9,"nodeType":"705","endLine":491,"endColumn":10,"suppressions":"710"},{"ruleId":"663","severity":1,"message":"695","line":1,"column":17,"nodeType":"665","messageId":"666","endLine":1,"endColumn":26},{"ruleId":"663","severity":1,"message":"711","line":6,"column":3,"nodeType":"665","messageId":"666","endLine":6,"endColumn":13},{"ruleId":"663","severity":1,"message":"712","line":10,"column":3,"nodeType":"665","messageId":"666","endLine":10,"endColumn":16},{"ruleId":"668","severity":1,"message":"713","line":36,"column":6,"nodeType":"670","endLine":36,"endColumn":16,"suggestions":"714"},{"ruleId":"668","severity":1,"message":"683","line":33,"column":6,"nodeType":"670","endLine":33,"endColumn":32,"suggestions":"715"},{"ruleId":"663","severity":1,"message":"716","line":7,"column":3,"nodeType":"665","messageId":"666","endLine":7,"endColumn":17},{"ruleId":"663","severity":1,"message":"717","line":8,"column":3,"nodeType":"665","messageId":"666","endLine":8,"endColumn":20},{"ruleId":"663","severity":1,"message":"718","line":1,"column":28,"nodeType":"665","messageId":"666","endLine":1,"endColumn":36},{"ruleId":"668","severity":1,"message":"693","line":18,"column":6,"nodeType":"670","endLine":18,"endColumn":16,"suggestions":"719"},{"ruleId":"668","severity":1,"message":"683","line":59,"column":6,"nodeType":"670","endLine":59,"endColumn":32,"suggestions":"720"},{"ruleId":"668","severity":1,"message":"693","line":40,"column":6,"nodeType":"670","endLine":40,"endColumn":16,"suggestions":"721"},{"ruleId":"703","severity":1,"message":"704","line":155,"column":17,"nodeType":"705","endLine":155,"endColumn":68},{"ruleId":"663","severity":1,"message":"677","line":12,"column":19,"nodeType":"665","messageId":"666","endLine":12,"endColumn":28},{"ruleId":"668","severity":1,"message":"693","line":22,"column":6,"nodeType":"670","endLine":22,"endColumn":16,"suggestions":"722"},{"ruleId":"668","severity":1,"message":"693","line":18,"column":6,"nodeType":"670","endLine":18,"endColumn":16,"suggestions":"723"},{"ruleId":"663","severity":1,"message":"724","line":5,"column":10,"nodeType":"665","messageId":"666","endLine":5,"endColumn":14},{"ruleId":"663","severity":1,"message":"725","line":14,"column":11,"nodeType":"665","messageId":"666","endLine":14,"endColumn":15},{"ruleId":"663","severity":1,"message":"726","line":14,"column":17,"nodeType":"665","messageId":"666","endLine":14,"endColumn":32},{"ruleId":"663","severity":1,"message":"727","line":82,"column":17,"nodeType":"665","messageId":"666","endLine":82,"endColumn":25},{"ruleId":"668","severity":1,"message":"713","line":58,"column":6,"nodeType":"670","endLine":58,"endColumn":16,"suggestions":"728"},{"ruleId":"668","severity":1,"message":"729","line":15,"column":8,"nodeType":"670","endLine":15,"endColumn":18,"suggestions":"730"},{"ruleId":"668","severity":1,"message":"693","line":18,"column":6,"nodeType":"670","endLine":18,"endColumn":16,"suggestions":"731"},{"ruleId":"668","severity":1,"message":"732","line":26,"column":6,"nodeType":"670","endLine":26,"endColumn":16,"suggestions":"733"},{"ruleId":"734","severity":1,"message":"735","line":85,"column":11,"nodeType":"736","endLine":85,"endColumn":36},{"ruleId":"668","severity":1,"message":"732","line":20,"column":6,"nodeType":"670","endLine":20,"endColumn":16,"suggestions":"737"},{"ruleId":"663","severity":1,"message":"738","line":2,"column":28,"nodeType":"665","messageId":"666","endLine":2,"endColumn":38},{"ruleId":"663","severity":1,"message":"739","line":25,"column":10,"nodeType":"665","messageId":"666","endLine":25,"endColumn":16},{"ruleId":"740","severity":1,"message":"741","line":371,"column":17,"nodeType":"705","endLine":374,"endColumn":19,"suppressions":"742"},{"ruleId":"703","severity":1,"message":"704","line":399,"column":7,"nodeType":"705","endLine":403,"endColumn":8,"suppressions":"743"},{"ruleId":"663","severity":1,"message":"739","line":24,"column":10,"nodeType":"665","messageId":"666","endLine":24,"endColumn":16},{"ruleId":"668","severity":1,"message":"744","line":281,"column":6,"nodeType":"670","endLine":281,"endColumn":16,"suggestions":"745"},{"ruleId":"740","severity":1,"message":"741","line":375,"column":17,"nodeType":"705","endLine":378,"endColumn":19,"suppressions":"746"},{"ruleId":"703","severity":1,"message":"704","line":403,"column":7,"nodeType":"705","endLine":407,"endColumn":8,"suppressions":"747"},"no-unused-vars","'ReactDOM' is defined but never used.","Identifier","unusedVar","'createReducer' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'isAuthenticated' and 'navigate'. Either include them or remove the dependency array.","ArrayExpression",["748"],["749"],"React Hook useEffect has a missing dependency: 'activation_token'. Either include it or remove the dependency array.",["750"],"'productData' is defined but never used.","'Loader' is defined but never used.","'isLoading' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'eventData' and 'id'. Either include them or remove the dependency array.",["751"],["752"],"React Hook useEffect has missing dependencies: 'isSeller', 'navigate', and 'seller._id'. Either include them or remove the dependency array.",["753"],"React Hook useEffect has a missing dependency: 'navigate'. Either include it or remove the dependency array.",["754"],"no-dupe-keys","Duplicate key 'category'.","ObjectExpression","unexpected","React Hook useEffect has missing dependencies: 'dispatch' and 'id'. Either include them or remove the dependency array.",["755"],"React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["756"],"React Hook useEffect has a missing dependency: 'seller._id'. Either include it or remove the dependency array.",["757"],"'useEffect' is defined but never used.","'useParams' is defined but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["758"],"React Hook useEffect has missing dependencies: 'allProducts' and 'data.category'. Either include them or remove the dependency array.",["759"],"'avatar' is assigned a value but never used.",["760"],"jsx-a11y/role-supports-aria-props","The attribute aria-required is not supported by the role form. This role is implicit on the element form.","JSXOpeningElement","React Hook useEffect has missing dependencies: 'dispatch' and 'user._id'. Either include them or remove the dependency array.",["761"],["762"],["763"],["764"],"'AiFillStar' is defined but never used.","'AiOutlineStar' is defined but never used.","React Hook useEffect has a missing dependency: 'data._id'. Either include it or remove the dependency array.",["765"],["766"],"'CardCvcElement' is defined but never used.","'CardExpiryElement' is defined but never used.","'useState' is defined but never used.",["767"],["768"],["769"],["770"],["771"],"'Link' is defined but never used.","'user' is assigned a value but never used.","'isAuthenticated' is assigned a value but never used.","'setValue' is assigned a value but never used.",["772"],"React Hook useEffect has a missing dependency: 'user._id'. Either include it or remove the dependency array.",["773"],["774"],"React Hook useEffect has missing dependencies: 'orders' and 'seller._id'. Either include them or remove the dependency array.",["775"],"jsx-a11y/aria-props","aria-aria-required: This attribute is an invalid ARIA attribute.","JSXAttribute",["776"],"'useReducer' is defined but never used.","'images' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.",["777"],["778"],"React Hook useEffect has missing dependencies: 'online' and 'setActiveStatus'. Either include them or remove the dependency array. If 'setActiveStatus' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["779"],["780"],["781"],{"desc":"782","fix":"783"},{"desc":"782","fix":"784"},{"desc":"785","fix":"786"},{"desc":"787","fix":"788"},{"desc":"785","fix":"789"},{"desc":"790","fix":"791"},{"desc":"792","fix":"793"},{"desc":"794","fix":"795"},{"desc":"794","fix":"796"},{"desc":"797","fix":"798"},{"desc":"799","fix":"800"},{"desc":"801","fix":"802"},{"desc":"803","fix":"804"},{"desc":"805","fix":"806"},{"desc":"805","fix":"807"},{"desc":"805","fix":"808"},{"kind":"809","justification":"810"},{"desc":"811","fix":"812"},{"desc":"813","fix":"814"},{"desc":"797","fix":"815"},{"desc":"813","fix":"816"},{"desc":"797","fix":"817"},{"desc":"797","fix":"818"},{"desc":"797","fix":"819"},{"desc":"811","fix":"820"},{"desc":"805","fix":"821"},{"desc":"797","fix":"822"},{"desc":"823","fix":"824"},{"desc":"823","fix":"825"},{"kind":"809","justification":"810"},{"kind":"809","justification":"810"},{"desc":"826","fix":"827"},{"kind":"809","justification":"810"},{"kind":"809","justification":"810"},"Update the dependencies array to be: [isAuthenticated, navigate]",{"range":"828","text":"829"},{"range":"830","text":"829"},"Update the dependencies array to be: [activation_token]",{"range":"831","text":"832"},"Update the dependencies array to be: [allProducts, allEvents, eventData, id]",{"range":"833","text":"834"},{"range":"835","text":"832"},"Update the dependencies array to be: [isSeller, navigate, seller._id]",{"range":"836","text":"837"},"Update the dependencies array to be: [isLoading, isSeller, navigate]",{"range":"838","text":"839"},"Update the dependencies array to be: [dispatch, id]",{"range":"840","text":"841"},{"range":"842","text":"841"},"Update the dependencies array to be: [dispatch, seller._id]",{"range":"843","text":"844"},"Update the dependencies array to be: [data, dispatch, wishlist]",{"range":"845","text":"846"},"Update the dependencies array to be: [allProducts, data.category]",{"range":"847","text":"848"},"Update the dependencies array to be: [dispatch, error, successMessage]",{"range":"849","text":"850"},"Update the dependencies array to be: [dispatch, user._id]",{"range":"851","text":"852"},{"range":"853","text":"852"},{"range":"854","text":"852"},"directive","","Update the dependencies array to be: [data._id, wishlist]",{"range":"855","text":"856"},"Update the dependencies array to be: [dispatch, error, navigate, success]",{"range":"857","text":"858"},{"range":"859","text":"844"},{"range":"860","text":"858"},{"range":"861","text":"844"},{"range":"862","text":"844"},{"range":"863","text":"844"},{"range":"864","text":"856"},{"range":"865","text":"852"},{"range":"866","text":"844"},"Update the dependencies array to be: [dispatch, orders, seller._id]",{"range":"867","text":"868"},{"range":"869","text":"868"},"Update the dependencies array to be: [me, data, setActiveStatus, online]",{"range":"870","text":"871"},[434,436],"[isAuthenticated, navigate]",[422,424],[712,714],"[activation_token]",[1010,1034],"[allProducts, allEvents, eventData, id]",[667,669],[434,436],"[isSeller, navigate, seller._id]",[428,449],"[isLoading, isSeller, navigate]",[1005,1007],"[dispatch, id]",[826,836],[735,745],"[dispatch, seller._id]",[1492,1508],"[data, dispatch, wishlist]",[569,571],"[allProducts, data.category]",[1540,1563],"[dispatch, error, successMessage]",[6535,6537],"[dispatch, user._id]",[8319,8321],[10208,10210],[1162,1172],"[data._id, wishlist]",[1225,1251],"[dispatch, error, navigate, success]",[714,724],[2039,2065],[1428,1438],[840,850],[670,680],[1781,1791],[513,523],[676,686],[1118,1128],"[dispatch, orders, seller._id]",[788,798],[7636,7646],"[me, data, setActiveStatus, online]"]